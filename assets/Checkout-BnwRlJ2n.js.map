{"version":3,"file":"Checkout-BnwRlJ2n.js","sources":["../../../src/esf_thehague_schinsleder/core/components/checkout/LoggedInCheckoutDetails.vue","../../../src/esf_thehague_schinsleder/core/views/Checkout.vue"],"sourcesContent":["<template>\r\n  <div class=\"loggedInCheckoutDetails\">\r\n    <div class=\"group address\">\r\n\r\n      <span class=\"group-title d-block mb-5\">{{ $t(\"shipping_address\") }}</span>\r\n\r\n      <div v-if=\"!newAddress\" v-for=\"(address, index) in addresses\" :key=\"`u-${index}`\">\r\n        <div @click=\"selectAddress(address.id)\" class=\"address-item border rounded p-5 m-5\"\r\n          :class=\"address.id == selectedShippingAddressId ? 'selected-item' : ''\">\r\n          <div v-if=\"address.company != null\">{{ address.company }}</div>\r\n          <div>{{ address.firstname }} {{ address.lastname }}</div>\r\n          <div>{{ address.street[0] }}</div>\r\n          <div>{{ address.city }}, {{ address.postcode }}</div>\r\n          <div>{{ address.telephone }}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <BFormCheckbox id=\"new-address\" name=\"new-address\" v-model=\"newAddress\">\r\n        {{ $t(\"make_new_address\") }}\r\n      </BFormCheckbox>\r\n\r\n      <div v-if=\"newAddress\">\r\n\r\n        <!-- <BFormCheckbox id=\"checkbox-1\" v-model=\"isCompany\" name=\"checkbox-1\">\r\n          {{ $t(\"form_are_you_a_company\") }}\r\n        </BFormCheckbox> -->\r\n\r\n        <div class=\"short-form\">\r\n          <BFormGroup class=\"account-inputs\" id=\"company-group\">\r\n            <BFormInput :placeholder=\"$t('form_company_name')\" id=\"company\" v-model=\"form.company\" type=\"text\"\r\n              v-on:blur=\"validateCompany()\" :state=\"form.companyState\" aria-describedby=\"company-feedback\"></BFormInput>\r\n            <BFormInvalidFeedback id=\"company-feedback\">\r\n              {{ form.companyError }}\r\n            </BFormInvalidFeedback>\r\n          </BFormGroup>\r\n          <!-- <BFormGroup class=\"account-inputs\" id=\"coc_number-group\">\r\n            <BFormInput :placeholder=\"$t('form_coc_number')\" id=\"coc_number\" v-model=\"form.coc_number\" type=\"text\"\r\n              v-on:blur=\"validateCOCNumber()\" :state=\"form.coc_numberState\" aria-describedby=\"coc_number-feedback\">\r\n            </BFormInput>\r\n            <BFormInvalidFeedback id=\"coc_number-feedback\">\r\n              {{ form.coc_numberError }}\r\n            </BFormInvalidFeedback>\r\n          </BFormGroup> -->\r\n          <BFormGroup class=\"account-inputs\" id=\"taxvat-group\">\r\n            <BFormInput :placeholder=\"$t('form_vat_number')\" id=\"taxvat\" v-model=\"form.taxvat\" type=\"text\"\r\n              :state=\"form.taxvatState\" @blur=\"validateVAT()\" aria-describedby=\"taxvat-feedback\"></BFormInput>\r\n            <BFormInvalidFeedback id=\"taxvat-feedback\" :key=\"form.taxvatError\">\r\n              {{ form.taxvatError }}\r\n            </BFormInvalidFeedback>\r\n          </BFormGroup>\r\n        </div>\r\n\r\n        <BFormGroup class=\"account-inputs\" id=\"first_name-group\">\r\n          <BFormInput :placeholder=\"$t('form_first_name')\" id=\"first_name\" v-model=\"form.firstname\" type=\"text\"\r\n            v-on:blur=\"validateFirstname()\" :state=\"form.firstnameState\" aria-describedby=\"firstname-feedback\">\r\n          </BFormInput>\r\n          <BFormInvalidFeedback id=\"firstname-feedback\">\r\n            {{ form.firstnameError }}\r\n          </BFormInvalidFeedback>\r\n        </BFormGroup>\r\n        <BFormGroup class=\"account-inputs\" id=\"last_name-group\">\r\n          <BFormInput :placeholder=\"$t('form_last_name')\" id=\"last_name\" v-model=\"form.lastname\" type=\"text\"\r\n            v-on:blur=\"validateLastname()\" :state=\"form.lastnameState\" aria-describedby=\"lastname-feedback\">\r\n          </BFormInput>\r\n          <BFormInvalidFeedback id=\"lastname-feedback\">\r\n            {{ form.lastnameError }}\r\n          </BFormInvalidFeedback>\r\n        </BFormGroup>\r\n        <BFormGroup class=\"account-inputs\" id=\"country-group\">\r\n          <BFormSelect id=\"country\" v-model=\"form.address.country_code\" :options=\"countries\" class=\"select\">\r\n          </BFormSelect>\r\n        </BFormGroup>\r\n        <BFormGroup v-if=\"!showFullAddress\" class=\"account-inputs\" id=\"postcode-group\">\r\n          <BFormInput :placeholder=\"$t('form_postal_code')\" id=\"postcode\" v-model=\"form.address.postcode\" type=\"text\"\r\n            :state=\"form.address.postcodeState\" aria-describedby=\"address.postcode-feedback\"></BFormInput>\r\n          <BFormInvalidFeedback id=\"address.postcode-feedback\">\r\n            {{ form.address.postcodeError }}\r\n          </BFormInvalidFeedback>\r\n        </BFormGroup>\r\n        <BFormGroup v-show=\"showFullAddress\" class=\"account-inputs\" id=\"street-group\">\r\n          <BFormInput :placeholder=\"$t('form_street')\" id=\"street\" v-model=\"form.address.streetDisplay\" type=\"text\"\r\n            v-on:blur=\"validateStreet()\" :state=\"form.address.streetDisplayState\"\r\n            aria-describedby=\"address.streetDisplay-feedback\"></BFormInput>\r\n          <BFormInvalidFeedback id=\"address.streetDisplay-feedback\">\r\n            {{ form.address.streetDisplayError }}\r\n          </BFormInvalidFeedback>\r\n        </BFormGroup>\r\n        <BRow>\r\n          <BCol sm=\"6\" class=\"first\">\r\n            <BFormGroup class=\"account-inputs\" id=\"house_number-group\">\r\n              <BFormInput :placeholder=\"$t('form_house_number')\" id=\"house_number\" v-model=\"form.address.house_number\"\r\n                type=\"text\" v-on:blur=\"validateHouseNumber()\" :state=\"form.address.house_numberState\"\r\n                aria-describedby=\"address.house_number-feedback\"></BFormInput>\r\n              <BFormInvalidFeedback id=\"address.house_number-feedback\">\r\n                {{ form.address.house_numberError }}\r\n              </BFormInvalidFeedback>\r\n            </BFormGroup>\r\n          </BCol>\r\n          <BCol sm=\"6\" class=\"third\">\r\n            <BFormGroup class=\"account-inputs\" id=\"addition-group\">\r\n              <BFormInput :placeholder=\"$t('form_addition')\" id=\"addition\" v-model=\"form.address.addition\" type=\"text\">\r\n              </BFormInput>\r\n            </BFormGroup>\r\n          </BCol>\r\n        </BRow>\r\n        <BFormGroup v-show=\"showFullAddress\" class=\"account-inputs\" id=\"postcode-group1\">\r\n          <BFormInput :placeholder=\"$t('form_postal_code')\" id=\"postcode1\" v-model=\"form.address.postcode\" type=\"text\"\r\n            v-on:blur=\"validatePostCode()\" :state=\"form.address.postcodeState\"\r\n            aria-describedby=\"address.postcode1-feedback\"></BFormInput>\r\n          <BFormInvalidFeedback id=\"address.postcode1-feedback\">\r\n            {{ form.address.postcodeError }}\r\n          </BFormInvalidFeedback>\r\n        </BFormGroup>\r\n\r\n        <BFormGroup v-show=\"showFullAddress\" class=\"account-inputs\" id=\"city-group\">\r\n          <BFormInput :placeholder=\"$t('form_city')\" id=\"city\" v-model=\"form.address.city\" type=\"text\"\r\n            v-on:blur=\"validateCity()\" :state=\"form.address.cityState\" aria-describedby=\"address.city-feedback\">\r\n          </BFormInput>\r\n          <BFormInvalidFeedback id=\"address.city-feedback\">\r\n            {{ form.address.cityError }}\r\n          </BFormInvalidFeedback>\r\n        </BFormGroup>\r\n        <BFormGroup v-if=\"foundAddress != '' && showFullAddress == false\" class=\"account-inputs\" id=\"add-group\"\r\n          label=\" \">\r\n          <div id=\"add\" :style=\"{ color: foundAddress === $t('postcode_not_found') ? 'red' : 'black' }\">\r\n            {{ foundAddress }}\r\n          </div>\r\n        </BFormGroup>\r\n        <BFormGroup v-if=\"foundAddresses.length > 0 && showFullAddress == false\" class=\"account-inputs\" id=\"addm-group\"\r\n          label=\" \">\r\n          <div id=\"addm\">\r\n            <BFormRadio class=\"account-radios\" v-model=\"selectedAddress\" v-for=\"(item, index) in foundAddresses\"\r\n              :key=\"index\" name=\"some-radios\" :value=\"index\">{{ item.text }}\r\n            </BFormRadio>\r\n          </div>\r\n        </BFormGroup>\r\n        <BFormCheckbox v-if=\"showManual\" id=\"manual\" v-model=\"showFullAddress\" name=\"manual\">\r\n          {{ $t(\"form_fillout_address_manual\") }}\r\n        </BFormCheckbox>\r\n        <BFormGroup class=\"account-inputs\" id=\"telephone-group\">\r\n          <BFormInput :placeholder=\"$t('form_phone')\" id=\"telephone\" v-model=\"form.address.telephone\" type=\"text\"\r\n            v-on:blur=\"validatePhone()\" :state=\"form.address.telephoneState\"\r\n            aria-describedby=\"address.telephone-feedback\"></BFormInput>\r\n          <BFormInvalidFeedback id=\"address.telephone-feedback\">\r\n            {{ form.address.telephoneError }}\r\n          </BFormInvalidFeedback>\r\n        </BFormGroup>\r\n        <!-- <div class=\"form-footer\">\r\n          <BButton @click.prevent=\"cancleSaveShippingAddress\" class=\"form-submit-btn\">\r\n            {{ $t(\"cancel\") }}\r\n          </BButton>\r\n          &nbsp;\r\n          <BButton @click.prevent=\"saveShippingAddress\" :disabled=\"isSaveBtnDisable\" variant=\"info\"\r\n            class=\"text-white form-submit-btn\">\r\n            {{ $t(\"save\") }}\r\n          </BButton>\r\n        </div> -->\r\n      </div>\r\n      <BFormCheckbox id=\"checkbox-2\" name=\"checkbox-2\" v-model=\"form.address.default_billing\">{{\r\n        $t(\"form_address_also_invoice_address\") }}</BFormCheckbox>\r\n    </div>\r\n\r\n    <div class=\"group\" v-if=\"form.address.default_billing == false\">\r\n      <span class=\"group-title d-block mb-5\">{{ $t(\"invoice_address\") }}</span>\r\n\r\n      <div v-if=\"!newInvoiceAddress\" v-for=\"(address, index) in addresses\" :key=\"`u-${index}`\">\r\n        <div @click=\"selectInvoiceAddress(address.id)\" class=\"address-item border rounded p-5 m-5\"\r\n          :class=\"address.id == selectedBillingAddressId ? 'selected-item' : ''\">\r\n          <div v-if=\"address.company != null\">{{ address.company }}</div>\r\n          <div>{{ address.firstname }} {{ address.lastname }}</div>\r\n          <div>{{ address.street[0] }}</div>\r\n          <div>{{ address.city }}, {{ address.postcode }}</div>\r\n          <div>{{ address.telephone }}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <BFormCheckbox id=\"new-invoice-address\" name=\"new-invoice-address\" v-model=\"newInvoiceAddress\">\r\n        {{ $t(\"make_new_address\") }}\r\n      </BFormCheckbox>\r\n\r\n      <div v-if=\"newInvoiceAddress\">\r\n        <!-- <BFormCheckbox id=\"checkbox-99\" v-model=\"isInvoiceCompany\" name=\"checkbox-99\">\r\n          {{ $t(\"form_are_you_a_company\") }}\r\n        </BFormCheckbox> -->\r\n        <div class=\"short-form\">\r\n          <BFormGroup class=\"account-inputs\" id=\"company-group\">\r\n            <BFormInput :placeholder=\"$t('form_company_name')\" id=\"company\" v-model=\"form.invoice.company\" type=\"text\"\r\n              v-on:blur=\"validateInvoiceCompany()\" :state=\"form.invoice.companyState\"\r\n              aria-describedby=\"company-feedback\"></BFormInput>\r\n            <BFormInvalidFeedback id=\"company-feedback\">\r\n              {{ form.invoice.companyError }}\r\n            </BFormInvalidFeedback>\r\n          </BFormGroup>\r\n          <!-- <BFormGroup class=\"account-inputs\" id=\"coc_number-group\">\r\n            <BFormInput :placeholder=\"$t('form_coc_number')\" id=\"coc_number\" v-model=\"form.invoice.coc_number\"\r\n              type=\"text\" v-on:blur=\"validateInvoiceCOCNumber()\" :state=\"form.invoice.coc_numberState\"\r\n              aria-describedby=\"coc_number-feedback\"></BFormInput>\r\n            <BFormInvalidFeedback id=\"coc_number-feedback\">\r\n              {{ form.invoice.coc_numberError }}\r\n            </BFormInvalidFeedback>\r\n          </BFormGroup> -->\r\n          <BFormGroup class=\"account-inputs\" id=\"taxvat-group\">\r\n            <BFormInput :placeholder=\"$t('form_vat_number')\" id=\"taxvat\" v-model=\"form.invoice.taxvat\" type=\"text\"\r\n              :state=\"form.invoice.taxvatState\" aria-describedby=\"taxvat-feedback\"></BFormInput>\r\n            <BFormInvalidFeedback id=\"taxvat-feedback\" :key=\"form.invoice.taxvatError\">\r\n              {{ form.invoice.taxvatError }}\r\n            </BFormInvalidFeedback>\r\n          </BFormGroup>\r\n        </div>\r\n\r\n        <BFormGroup class=\"account-inputs\" id=\"first_name-group\">\r\n          <BFormInput :placeholder=\"$t('form_first_name')\" id=\"first_name\" v-model=\"form.invoice.firstname\" type=\"text\"\r\n            v-on:blur=\"validateInvoiceFirstname()\" :state=\"form.invoice.firstnameState\"\r\n            aria-describedby=\"firstname-feedback\"></BFormInput>\r\n          <BFormInvalidFeedback id=\"firstname-feedback\">\r\n            {{ form.invoice.firstnameError }}\r\n          </BFormInvalidFeedback>\r\n        </BFormGroup>\r\n        <BFormGroup class=\"account-inputs\" id=\"last_name-group\">\r\n          <BFormInput :placeholder=\"$t('form_last_name')\" id=\"last_name\" v-model=\"form.invoice.lastname\" type=\"text\"\r\n            v-on:blur=\"validateInvoiceLastname()\" :state=\"form.invoice.lastnameState\"\r\n            aria-describedby=\"lastname-feedback\"></BFormInput>\r\n          <BFormInvalidFeedback id=\"lastname-feedback\">\r\n            {{ form.invoice.lastnameError }}\r\n          </BFormInvalidFeedback>\r\n        </BFormGroup>\r\n        <BFormGroup class=\"account-inputs\" id=\"country-group\">\r\n          <BFormSelect id=\"country\" v-model=\"form.invoice.address.country_code\" :options=\"countries\" class=\"select\">\r\n          </BFormSelect>\r\n        </BFormGroup>\r\n        <BFormGroup v-if=\"!showFullInvoiceAddress\" class=\"account-inputs\" id=\"postcode-group\">\r\n          <BFormInput :placeholder=\"$t('form_postal_code')\" id=\"postcode\" v-model=\"form.invoice.address.postcode\"\r\n            type=\"text\" :state=\"form.invoice.address.postcodeState\" aria-describedby=\"address.postcode-feedback\">\r\n          </BFormInput>\r\n          <BFormInvalidFeedback id=\"address.postcode-feedback\">\r\n            {{ form.invoice.address.postcodeError }}\r\n          </BFormInvalidFeedback>\r\n        </BFormGroup>\r\n        <BFormGroup v-if=\"showFullInvoiceAddress\" class=\"account-inputs\" id=\"street-group\">\r\n          <BFormInput :placeholder=\"$t('form_street')\" id=\"street\" v-model=\"form.invoice.address.streetDisplay\"\r\n            type=\"text\" v-on:blur=\"validateInvoiceStreet()\" :state=\"form.invoice.address.streetDisplayState\"\r\n            aria-describedby=\"address.streetDisplay-feedback\"></BFormInput>\r\n          <BFormInvalidFeedback id=\"address.streetDisplay-feedback\">\r\n            {{ form.invoice.address.streetDisplayError }}\r\n          </BFormInvalidFeedback>\r\n        </BFormGroup>\r\n        <BRow>\r\n          <BCol sm=\"6\" class=\"first\">\r\n            <BFormGroup class=\"account-inputs\" id=\"house_number-group\">\r\n              <BFormInput :placeholder=\"$t('form_house_number')\" id=\"house_number\"\r\n                v-model=\"form.invoice.address.house_number\" type=\"text\" v-on:blur=\"validateInvoiceHouseNumber()\"\r\n                :state=\"form.invoice.address.house_numberState\" aria-describedby=\"address.house_number-feedback\">\r\n              </BFormInput>\r\n              <BFormInvalidFeedback id=\"address.house_number-feedback\">\r\n                {{ form.invoice.address.house_numberError }}\r\n              </BFormInvalidFeedback>\r\n            </BFormGroup>\r\n          </BCol>\r\n          <BCol sm=\"6\" class=\"third\">\r\n            <BFormGroup class=\"account-inputs\" id=\"addition-group\">\r\n              <BFormInput :placeholder=\"$t('form_addition')\" id=\"addition\" v-model=\"form.invoice.address.addition\"\r\n                type=\"text\"></BFormInput>\r\n            </BFormGroup>\r\n          </BCol>\r\n        </BRow>\r\n        <BFormGroup v-if=\"showFullInvoiceAddress\" class=\"account-inputs\" id=\"postcode-group1\">\r\n          <BFormInput :placeholder=\"$t('form_postal_code')\" id=\"postcode1\" v-model=\"form.invoice.address.postcode\"\r\n            type=\"text\" v-on:blur=\"validateInvoicePostcode()\" :state=\"form.invoice.address.postcodeState\"\r\n            aria-describedby=\"address.postcode1-feedback\"></BFormInput>\r\n          <BFormInvalidFeedback id=\"address.postcode1-feedback\">\r\n            {{ form.invoice.address.postcodeError }}\r\n          </BFormInvalidFeedback>\r\n        </BFormGroup>\r\n\r\n        <BFormGroup v-if=\"showFullInvoiceAddress\" class=\"account-inputs\" id=\"city-group\">\r\n          <BFormInput :placeholder=\"$t('form_city')\" id=\"city\" v-model=\"form.invoice.address.city\" type=\"text\"\r\n            v-on:blur=\"validateInvoiceCity()\" :state=\"form.invoice.address.cityState\"\r\n            aria-describedby=\"address.city-feedback\"></BFormInput>\r\n          <BFormInvalidFeedback id=\"address.city-feedback\">\r\n            {{ form.invoice.address.cityError }}\r\n          </BFormInvalidFeedback>\r\n        </BFormGroup>\r\n        <BFormGroup v-if=\"foundInvoiceAddress != '' && showFullInvoiceAddress == false\" class=\"account-inputs\"\r\n          id=\"add-group\" label=\" \">\r\n          <div id=\"add\" :style=\"{ color: foundInvoiceAddress === $t('postcode_not_found') ? 'red' : 'black' }\">\r\n            {{ foundInvoiceAddress }}\r\n          </div>\r\n        </BFormGroup>\r\n        <BFormGroup v-if=\"foundInvoiceAddresses.length > 0 && showFullInvoiceAddress == false\" class=\"account-inputs\"\r\n          id=\"addm-group\" label=\" \">\r\n          <div id=\"addm\">\r\n            <BFormRadio class=\"account-radios\" v-model=\"selectedInvoiceAddress\"\r\n              v-for=\"(item, index) in foundInvoiceAddresses\" :key=\"index\" name=\"some-radios\" :value=\"index\">\r\n              {{ item.text }}\r\n            </BFormRadio>\r\n          </div>\r\n        </BFormGroup>\r\n        <BFormCheckbox v-if=\"showManual\" id=\"manual2\" v-model=\"showFullInvoiceAddress\" name=\"manual2\">{{\r\n          $t(\"form_fillout_address_manual\") }}</BFormCheckbox>\r\n        <BFormGroup class=\"account-inputs\" id=\"telephone-group\">\r\n          <BFormInput :placeholder=\"$t('form_phone')\" id=\"telephone\" v-model=\"form.invoice.address.telephone\"\r\n            type=\"text\" v-on:blur=\"validateInvoicePhone()\" :state=\"form.invoice.address.telephoneState\"\r\n            aria-describedby=\"address.telephone-feedback\"></BFormInput>\r\n          <BFormInvalidFeedback id=\"address.telephone-feedback\">\r\n            {{ form.invoice.address.telephoneError }}\r\n          </BFormInvalidFeedback>\r\n        </BFormGroup>\r\n        <!-- <div class=\"form-footer\">\r\n          <BButton @click.prevent=\"cancleSaveInvoiceAddress\" class=\"form-submit-btn\">{{\r\n            $t(\"cancel\")\r\n          }}</BButton>\r\n          &nbsp;\r\n          <BButton @click.prevent=\"saveInvoiceAddress\" :disabled=\"isInvoiceSaveBtnDisable\" variant=\"info\"\r\n            class=\"text-white form-submit-btn\">{{ $t(\"save\") }}\r\n          </BButton>\r\n        </div> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref, computed, onMounted, watch } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { useI18n } from \"vue-i18n\";\r\nimport config from \"@config\";\r\nimport {\r\n  validatePostcode,\r\n  validateVatNumber,\r\n  checkEmailExist,\r\n} from \"@storefront/core/data-resolver/user\";\r\nimport { h } from \"vue\";\r\n// import { useCartInfo } from \"@storefront/core/composable/cart\";\r\n\r\nconst store = useStore();\r\nconst { t } = useI18n();\r\n// const { cartCount } = useCartInfo();\r\n\r\n// Reactive state for form data and timers\r\nconst newAddress = ref(false);\r\nconst newInvoiceAddress = ref(false);\r\nconst isCompany = ref(false);\r\nconst isInvoiceCompany = ref(false);\r\nconst isValidVatNumber = ref(false);\r\nconst isValidInvoiceVatNumber = ref(false);\r\nconst showFullAddress = ref(false);\r\nconst showFullInvoiceAddress = ref(false);\r\nconst showVatMessage = ref(\"\");\r\nconst showVatCheck = ref(false);\r\nlet addressTimer = ref(null);\r\n// const invoiceAddressTimer = ref(null);\r\nconst typeTimer = ref(null);\r\nconst foundAddresses = ref([]);\r\nconst foundAddress = ref(\"\");\r\nconst foundInvoiceAddresses = ref([]);\r\nconst foundInvoiceAddress = ref(\"\");\r\nconst emailExists = ref(false);\r\nconst selectedAddress = ref(null);\r\nconst selectedInvoiceAddress = ref(null);\r\nconst isSaveBtnDisable = ref(false);\r\nconst isInvoiceSaveBtnDisable = ref(false);\r\n\r\n// Email regex pattern\r\nconst emailReg = ref(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,24}))$/);\r\n\r\n// Form state\r\nconst form = reactive({\r\n  email: \"\",\r\n  emailState: null,\r\n  emailError: \"\",\r\n  emailTimer: null,\r\n  password: \"\",\r\n  passwordState: null,\r\n  passwordError: \"\",\r\n  passwordTimer: null,\r\n  password_confirm: \"\",\r\n  password_confirmState: null,\r\n  password_confirmError: \"\",\r\n  password_confirmTimer: null,\r\n  company: \"\",\r\n  companyState: null,\r\n  companyError: \"\",\r\n  companyTimer: null,\r\n  firstname: \"\",\r\n  firstnameState: null,\r\n  firstnameError: \"\",\r\n  firstnameTimer: null,\r\n  lastname: \"\",\r\n  lastnameState: null,\r\n  lastnameError: \"\",\r\n  lastnameTimer: null,\r\n  // coc_number: \"\",\r\n  // coc_numberState: null,\r\n  // coc_numberError: \"\",\r\n  // coc_numberTimer: null,\r\n  taxvat: \"\",\r\n  taxvatState: null,\r\n  taxvatError: \"\",\r\n  taxvatTimer: null,\r\n  address: {\r\n    country_code: \"\",\r\n    postcode: \"\",\r\n    postcodeState: null,\r\n    postcodeError: \"\",\r\n    postcodeTimer: null,\r\n    street: \"\",\r\n    streetDisplay: \"\",\r\n    streetDisplayState: null,\r\n    streetDisplayError: \"\",\r\n    streetDisplayTimer: null,\r\n    house_number: \"\",\r\n    house_numberState: null,\r\n    house_numberError: \"\",\r\n    house_numberTimer: null,\r\n    addition: \"\",\r\n    city: \"\",\r\n    cityState: null,\r\n    cityError: \"\",\r\n    cityTimer: null,\r\n    telephone: \"\",\r\n    telephoneState: null,\r\n    telephoneError: \"\",\r\n    telephoneTimer: null,\r\n    default_billing: true,\r\n    default_shipping: true,\r\n  },\r\n  invoice: {\r\n    isCompany: true,\r\n    company: \"\",\r\n    companyState: null,\r\n    companyError: \"\",\r\n    companyTimer: null,\r\n    firstname: \"\",\r\n    firstnameState: null,\r\n    firstnameError: \"\",\r\n    firstnameTimer: null,\r\n    lastname: \"\",\r\n    lastnameState: null,\r\n    lastnameError: \"\",\r\n    lastnameTimer: null,\r\n    // coc_number: \"\",\r\n    // coc_numberState: null,\r\n    // coc_numberError: \"\",\r\n    // coc_numberTimer: null,\r\n    taxvat: \"\",\r\n    taxvatState: null,\r\n    taxvatError: \"\",\r\n    taxvatTimer: null,\r\n    address: {\r\n      country_code: \"\",\r\n      postcode: \"\",\r\n      postcodeState: null,\r\n      postcodeError: \"\",\r\n      postcodeTimer: null,\r\n      street: \"\",\r\n      streetDisplay: \"\",\r\n      streetDisplayState: null,\r\n      streetDisplayError: \"\",\r\n      streetDisplayTimer: null,\r\n      house_number: \"\",\r\n      house_numberState: null,\r\n      house_numberError: \"\",\r\n      house_numberTimer: null,\r\n      addition: \"\",\r\n      city: \"\",\r\n      cityState: null,\r\n      cityError: \"\",\r\n      cityTimer: null,\r\n      telephone: \"\",\r\n      telephoneState: null,\r\n      telephoneError: \"\",\r\n      telephoneTimer: null,\r\n      default_billing: true,\r\n      default_shipping: true,\r\n    },\r\n  },\r\n  checkbox2: false,\r\n  manual: false,\r\n});\r\n\r\n// Define computed properties\r\nconst shippingAddress = computed(() => store.getters[\"cart/getShippingAddress\"]);\r\nconst countries = computed(() => store.getters[\"user/getCountries\"]);\r\nconst country = computed(() => form.address.country_code);\r\nconst selectedShippingAddressId = computed(() => {\r\n  const sa = store.getters[\"cart/getShippingAddress\"];\r\n  return sa ? sa.id : 0;\r\n});\r\nconst selectedBillingAddressId = computed(() => {\r\n  const sa = store.getters[\"cart/getBillingAddress\"];\r\n  return sa ? sa.id : 0;\r\n});\r\n// const address = computed(\r\n//   () =>\r\n//     `${form.company}|${form.taxvat}|${form.firstname}|${form.lastname}|${form.address.country_code}|${form.address.city}|${form.address.streetDisplay}|${form.address.house_number}|${form.address.addition}|${form.address.telephone}||${form.address.city}`\r\n// );\r\n// const invoiceAddress = computed(\r\n//   () =>\r\n//     `${form.invoice.company}|${form.invoice.taxvat}|${form.invoice.firstname}|${form.invoice.lastname}|${form.invoice.address.country_code}|${form.invoice.address.city}|${form.invoice.address.streetDisplay}|${form.invoice.address.house_number}|${form.invoice.address.addition}|${form.invoice.address.telephone}||${form.invoice.address.city}`\r\n// );\r\nconst invoiceCountry = computed(() => form.invoice.address.country_code);\r\nconst postcodeHouseNumber = computed(() => `${form.address.postcode}|${form.address.house_number}`);\r\nconst invoicePostcodeHouseNumber = computed(() => `${form.invoice.address.postcode}|${form.invoice.address.house_number}`);\r\nconst vatNumber = computed(() => form.taxvat);\r\nconst invoiceVatNumber = computed(() => form.invoice.taxvat);\r\n// const Email = computed(() => form.email);\r\n// const Password = computed(() => form.password);\r\n// const PasswordConfirm = computed(() => form.password_confirm);\r\n// const isLoggedIn = computed(() => store.getters[\"user/getIsLoggedIn\"]);\r\nconst addresses = computed(() => {\r\n  const user = store.getters[\"user/getCurrentUser\"];\r\n  if (user.addresses.length == 0) {\r\n    newAddress.value = true;\r\n  }\r\n  return user.addresses;\r\n});\r\nconst user = computed(() => store.getters[\"user/getCurrentUser\"]);\r\n\r\nconst validateEmail = async () => {\r\n  if (form.email.trim().length === 0) {\r\n    form.emailState = false;\r\n    form.emailError = t(\"email_is_required_field\");\r\n    return false;\r\n  }\r\n  if (!emailReg.value.test(form.email)) {\r\n    form.emailState = false;\r\n    form.emailError = t(\"email_is_invalid_field\");\r\n    return false;\r\n  }\r\n  if (!(await checkEmailExist(form.email))) {\r\n    emailExists.value = true;\r\n  } else {\r\n    emailExists.value = false;\r\n  }\r\n\r\n  form.emailState = true;\r\n  store.dispatch(\"cart/addCartEmail\", {\r\n    email: form.email,\r\n    store,\r\n  });\r\n  return true;\r\n};\r\n\r\n// const doLogin = async () => {\r\n//   const loginOk = await store.dispatch(\"user/login\", {\r\n//     username: form.email,\r\n//     password: form.password,\r\n//   });\r\n\r\n//   if (loginOk) {\r\n//     const msg = {\r\n//       type: \"success\",\r\n//       title: t(\"login_success\"),\r\n//       text: t(\"you_are_logged_in\"),\r\n//     };\r\n//     store.dispatch(\"messages/sendMessage\", { message: msg });\r\n//   }\r\n// };\r\n\r\n// const cancleSaveShippingAddress = () => {\r\n//   newAddress.value = false;\r\n// };\r\n\r\n// const cancleSaveInvoiceAddress = () => {\r\n//   newInvoiceAddress.value = false;\r\n// };\r\n\r\n// Common Function for validation fields\r\nconst validateField = (state, validator) => {\r\n  if (state !== true) {\r\n    // only validate if their State is not true\r\n    validator();\r\n    return state === true;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst resetSomeFormFields = (form) => {\r\n  // reset address related fields\r\n  form.firstname = \"\";\r\n  form.firstnameState = null;\r\n  form.lastname = \"\";\r\n  form.lastnameState = null;\r\n  form.address.streetDisplay = \"\";\r\n  form.address.streetDisplayState = null;\r\n  form.address.postcode = \"\";\r\n  form.address.postcodeState = null;\r\n  form.address.house_number = \"\";\r\n  form.address.house_numberState = null;\r\n  form.address.city = \"\";\r\n  form.address.cityState = null;\r\n  form.address.telephone = \"\";\r\n  form.address.telephoneState = null;\r\n  form.company = \"\";\r\n  form.companyState = null;\r\n  // form.coc_number = \"\";\r\n  // form.coc_numberState = null;\r\n  form.taxvat = \"\";\r\n  form.taxvatState = null;\r\n};\r\n\r\nconst generateAddressValidations = (form, includeCompanyFields = false) => {\r\n  const commonValidations = [\r\n    () => validateField(form.firstnameState, !form?.invoice ? validateInvoiceFirstname : validateFirstname),\r\n    () => validateField(form.lastnameState, !form?.invoice ? validateInvoiceLastname : validateLastname),\r\n    () => validateField(form.address.postcodeState, !form?.invoice ? validateInvoicePostcode : validatePostCode),\r\n    () => validateField(form.address.house_numberState, !form?.invoice ? validateInvoiceHouseNumber : validateHouseNumber),\r\n    () => validateField(form.address.streetDisplayState, !form?.invoice ? validateInvoiceStreet : validateStreet),\r\n    () => validateField(form.address.telephoneState, !form?.invoice ? validateInvoicePhone : validatePhone),\r\n    () => validateField(form.address.cityState, !form?.invoice ? validateInvoiceCity : validateCity),\r\n  ];\r\n\r\n  if (includeCompanyFields) {\r\n    commonValidations.push(\r\n      () => validateField(form.companyState, !form?.invoice ? validateInvoiceCompany : validateCompany),\r\n      //() => validateField(form.coc_numberState, !form?.invoice ? validateInvoiceCOCNumber : validateCOCNumber),\r\n      () => validateField(form.taxvatState, !form?.invoice ? validateInvoiceVAT : validateVAT)\r\n    );\r\n  }\r\n\r\n  return commonValidations;\r\n};\r\n\r\nconst saveAddressCommon = async ({\r\n  // common function for save address\r\n  form,\r\n  // isCompany,\r\n  isSaveBtnDisable,\r\n  newAddressFlag,\r\n  selectAddressCallback,\r\n  resetSomeFormFields,\r\n  validations,\r\n}) => {\r\n  isSaveBtnDisable.value = true;\r\n  let formValid = true;\r\n\r\n  // Run all validations\r\n  validations.forEach((validate) => {\r\n    if (!validate()) formValid = false;\r\n  });\r\n\r\n  if (formValid) {\r\n    const address = {\r\n      id: null,\r\n      country_code: form.address.country_code,\r\n      firstname: form.firstname,\r\n      lastname: form.lastname,\r\n      street: form.address.streetDisplay,\r\n      postcode: form.address.postcode,\r\n      house_number: form.address.house_number,\r\n      city: form.address.city,\r\n      telephone: form.address.telephone,\r\n      default_billing: false,\r\n      default_shipping: false,\r\n    };\r\n\r\n    // if (isCompany.value) {\r\n    address.company = form.company;\r\n    address.vat_id = form.taxvat;\r\n    // address.coc_number = form.coc_number;\r\n    // }\r\n\r\n    const retval = await store.dispatch(\"user/addAddress\", { address, store });\r\n    if (retval === true) {\r\n      if (addresses.value[addresses.value.length - 1]?.id) {\r\n        await selectAddressCallback(addresses.value[addresses.value.length - 1].id);\r\n      }\r\n      newAddressFlag.value = false;\r\n      resetSomeFormFields();\r\n      const msg = {\r\n        type: \"success\",\r\n        title: t(\"account\"),\r\n        text: t(\"address_modified\"),\r\n      };\r\n      store.dispatch(\"messages/sendMessage\", { message: msg });\r\n    } else {\r\n      const msg = {\r\n        type: \"danger\",\r\n        title: t(\"account\"),\r\n        text: t(\"something_went_wrong\"),\r\n      };\r\n      store.dispatch(\"messages/sendMessage\", { message: msg });\r\n    }\r\n  }\r\n  isSaveBtnDisable.value = false;\r\n};\r\n// const saveShippingAddress = async () => {\r\n//   await saveAddressCommon({\r\n//     form,\r\n//     // isCompany,    \r\n//     isSaveBtnDisable,\r\n//     newAddressFlag: newAddress,\r\n//     selectAddressCallback: selectAddress,\r\n//     resetSomeFormFields: () => resetSomeFormFields(form),\r\n//     validations: generateAddressValidations(form, isCompany.value),\r\n//   });\r\n// };\r\n\r\n// const saveInvoiceAddress = async () => {\r\n//   await saveAddressCommon({\r\n//     form: form.invoice,\r\n//     // isCompany: isInvoiceCompany,\r\n//     isSaveBtnDisable: isInvoiceSaveBtnDisable,\r\n//     newAddressFlag: newInvoiceAddress,\r\n//     selectAddressCallback: selectInvoiceAddress,\r\n//     resetSomeFormFields: () => resetSomeFormFields(form.invoice),\r\n//     validations: generateAddressValidations(form.invoice, isInvoiceCompany.value),\r\n//   });\r\n// };\r\n\r\nconst validateVAT = async () => {\r\n  // if (isCompany.value) {\r\n  if (form.taxvat != \"\") {\r\n    if (form.taxvat.substring(0, 2).toUpperCase() === form.address.country_code) {\r\n      const retval = await validateVatNumber(form.taxvat);\r\n      if (retval.is_valid) {\r\n        isValidVatNumber.value = true;\r\n        form.taxvatState = true;\r\n      } else {\r\n        isValidVatNumber.value = false;\r\n        form.taxvatState = false;\r\n        form.taxvatError = t(\"taxvat_invalid\");\r\n        showVatMessage.value = t(\"taxvat_invalid\");\r\n      }\r\n    } else {\r\n      isValidVatNumber.value = false;\r\n      form.taxvatState = false;\r\n      form.taxvatError = t(\"taxvat_wrong_country\");\r\n    }\r\n  } else {\r\n    form.taxvatState = null;\r\n    form.taxvatError = \"\";\r\n  }\r\n  // } else {\r\n  //   form.taxvatState = null;\r\n  //   form.taxvatError = \"\";\r\n  // }\r\n};\r\n\r\nconst validateAddress = async () => {\r\n  let isOk = true;\r\n\r\n  if (\r\n    form.company.trim() === \"\" ||\r\n    form.firstname.trim() === \"\" ||\r\n    form.lastname.trim() === \"\" ||\r\n    form.address.country_code.trim() === \"\" ||\r\n    form.address.postcode.trim() === \"\" ||\r\n    form.address.streetDisplay.trim() === \"\" ||\r\n    form.address.house_number.trim() === \"\" ||\r\n    form.address.city.trim() === \"\" ||\r\n    form.address.telephone.trim() === \"\"\r\n  ) {\r\n    isOk = false;\r\n  }\r\n  if (isOk) {\r\n\r\n    const address = {\r\n      firstname: form.firstname,\r\n      lastname: form.lastname,\r\n      postcode: form.address.postcode,\r\n      city: form.address.city,\r\n      telephone: form.address.telephone,\r\n      street: `${form.address.streetDisplay} ${form.address.house_number}${form.address.addition}`,\r\n      country_code: form.address.country_code,\r\n      company: form.company,\r\n      vat_id: form.taxvat,\r\n    };\r\n    await store.dispatch(\"cart/addShippingAddress\", {\r\n      address,\r\n      reloadCart: false,\r\n      store,\r\n    });\r\n    if (form.address.default_billing) {\r\n      await store.dispatch(\"cart/addBillingAddress\", {\r\n        address,\r\n        reloadCart: true,\r\n        store,\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nconst validateInvoiceAddress = async () => {\r\n  let isOk = true;\r\n  // if (isInvoiceCompany.value) {\r\n  if (form.invoice.company.trim() === \"\" || form.invoice.taxvat.trim() === \"\") {\r\n    isOk = false;\r\n  }\r\n  // }\r\n  if (\r\n    form.invoice.firstname.trim() === \"\" ||\r\n    form.invoice.lastname.trim() === \"\" ||\r\n    form.invoice.address.country_code.trim() === \"\" ||\r\n    form.invoice.address.postcode.trim() === \"\" ||\r\n    form.invoice.address.streetDisplay.trim() === \"\" ||\r\n    form.invoice.address.house_number.trim() === \"\" ||\r\n    form.invoice.address.city.trim() === \"\" ||\r\n    form.invoice.address.telephone.trim() === \"\"\r\n  ) {\r\n    isOk = false;\r\n  }\r\n\r\n  if (isOk) {\r\n    const address = {\r\n      company: form.invoice.company,\r\n      firstname: form.invoice.firstname,\r\n      lastname: form.invoice.lastname,\r\n      postcode: form.invoice.address.postcode,\r\n      city: form.invoice.address.city,\r\n      telephone: form.invoice.address.telephone,\r\n      street: `${form.invoice.address.streetDisplay} ${form.invoice.address.house_number}${form.invoice.address.addition}`,\r\n      country_code: form.invoice.address.country_code,\r\n    };\r\n    // if (isCompany.value) {\r\n    address.company = form.company;\r\n    address.vat_id = form.taxvat;\r\n    // }\r\n    await store.dispatch(\"cart/addBillingAddress\", {\r\n      address,\r\n      store,\r\n    });\r\n  }\r\n};\r\n\r\nconst validateCompany = () => {\r\n  // if (isCompany.value) {\r\n  if (form.company.trim() === \"\") {\r\n    form.companyState = false;\r\n    form.companyError = t(\"company_name_required\");\r\n  } else {\r\n    form.companyState = true;\r\n  }\r\n  // } else {\r\n  // form.companyState = null;\r\n  // }\r\n};\r\n\r\nconst validateFirstname = () => {\r\n  if (form.firstname.trim() === \"\") {\r\n    form.firstnameState = false;\r\n    form.firstnameError = t(\"firstname_required\");\r\n  } else {\r\n    form.firstnameState = true;\r\n  }\r\n};\r\n\r\nconst validateLastname = () => {\r\n  if (form.lastname.trim() === \"\") {\r\n    form.lastnameState = false;\r\n    form.lastnameError = t(\"lastname_required\");\r\n  } else {\r\n    form.lastnameState = true;\r\n  }\r\n};\r\n\r\n// const validateCOCNumber = () => {\r\n// if (isCompany.value) {\r\n// if (form.coc_number.trim() === \"\") {\r\n//   form.coc_numberState = false;\r\n//   form.coc_numberError = t(\"coc_number_required\");\r\n// } else {\r\n//   form.coc_numberState = true;\r\n// }\r\n// } else {\r\n// form.coc_numberState = null;\r\n// }\r\n// };\r\n\r\nconst validateStreet = () => {\r\n  if (form.address.streetDisplay.trim() === \"\") {\r\n    form.address.streetDisplayState = false;\r\n    form.address.streetDisplayError = t(\"street_required\");\r\n  } else {\r\n    form.address.streetDisplayState = true;\r\n  }\r\n};\r\n\r\nconst validateHouseNumber = () => {\r\n  if (form.address.house_number.trim() === \"\") {\r\n    form.address.house_numberState = false;\r\n    form.address.house_numberError = t(\"house_number_required\");\r\n  } else {\r\n    form.address.house_numberState = true;\r\n  }\r\n};\r\n\r\nconst validateCity = () => {\r\n  if (form.address.city.trim() === \"\") {\r\n    form.address.cityState = false;\r\n    form.address.cityError = t(\"city_required\");\r\n  } else {\r\n    form.address.cityState = true;\r\n  }\r\n};\r\n\r\nconst validatePhone = () => {\r\n  if (form.address.telephone.trim() === \"\") {\r\n    form.address.telephoneState = false;\r\n    form.address.telephoneError = t(\"phone_required\");\r\n  } else {\r\n    form.address.telephoneState = true;\r\n  }\r\n};\r\n\r\nconst validatePostCode = () => {\r\n  if (form.address.postcode.trim() === \"\") {\r\n    form.address.postcodeState = false;\r\n    form.address.postcodeError = t(\"postcode_required\");\r\n  } else {\r\n    form.address.postcodeState = true;\r\n  }\r\n};\r\n\r\nconst validateInvoiceVAT = async () => {\r\n  // if (isInvoiceCompany.value) {\r\n  if (form.invoice.taxvat != \"\") {\r\n    if (form.invoice.taxvat.substring(0, 2).toUpperCase() === form.invoice.address.country_code) {\r\n      const retval = await validateVatNumber(form.invoice.taxvat);\r\n      if (retval.is_valid) {\r\n        isValidInvoiceVatNumber.value = true;\r\n        form.invoice.taxvatState = true;\r\n      } else {\r\n        isValidInvoiceVatNumber.value = false;\r\n        form.invoice.taxvatState = false;\r\n        form.invoice.taxvatError = t(\"taxvat_invalid\");\r\n      }\r\n    } else {\r\n      isValidInvoiceVatNumber.value = false;\r\n      form.invoice.taxvatState = false;\r\n      form.invoice.taxvatError = t(\"taxvat_wrong_country\");\r\n    }\r\n  } else {\r\n    form.invoice.taxvatState = null;\r\n    form.invoice.taxvatError = \"\";\r\n  }\r\n  // } else {\r\n  //   form.invoice.taxvatState = null;\r\n  //   form.invoice.taxvatError = \"\";\r\n  // }\r\n};\r\n\r\nconst validateInvoiceCompany = () => {\r\n  // if (isInvoiceCompany.value) {\r\n  if (form.invoice.company.trim() === \"\") {\r\n    form.invoice.companyState = false;\r\n    form.invoice.companyError = t(\"company_name_required\");\r\n  } else {\r\n    form.invoice.companyState = true;\r\n  }\r\n  // } else {\r\n  //   form.invoice.companyState = null;\r\n  // }\r\n};\r\n\r\nconst validateInvoiceFirstname = () => {\r\n  if (form.invoice.firstname.trim() === \"\") {\r\n    form.invoice.firstnameState = false;\r\n    form.invoice.firstnameError = t(\"firstname_required\");\r\n  } else {\r\n    form.invoice.firstnameState = true;\r\n  }\r\n};\r\n\r\nconst validateInvoiceLastname = () => {\r\n  if (form.invoice.lastname.trim() === \"\") {\r\n    form.invoice.lastnameState = false;\r\n    form.invoice.lastnameError = t(\"lastname_required\");\r\n  } else {\r\n    form.invoice.lastnameState = true;\r\n  }\r\n};\r\n\r\n// const validateInvoiceCOCNumber = () => {\r\n// if (isInvoiceCompany.value) {\r\n// if (form.invoice.coc_number.trim() === \"\") {\r\n//   form.invoice.coc_numberState = false;\r\n//   form.invoice.coc_numberError = t(\"coc_number_required\");\r\n// } else {\r\n//   form.invoice.coc_numberState = true;\r\n// }\r\n// } else {\r\n//   form.invoice.coc_numberState = null;\r\n// }\r\n// };\r\n\r\nconst validateInvoiceStreet = () => {\r\n  if (form.invoice.address.streetDisplay.trim() === \"\") {\r\n    form.invoice.address.streetDisplayState = false;\r\n    form.invoice.address.streetDisplayError = t(\"street_required\");\r\n  } else {\r\n    form.invoice.address.streetDisplayState = true;\r\n  }\r\n};\r\n\r\nconst validateInvoiceHouseNumber = () => {\r\n  if (form.invoice.address.house_number.trim() === \"\") {\r\n    form.invoice.address.house_numberState = false;\r\n    form.invoice.address.house_numberError = t(\"house_number_required\");\r\n  } else {\r\n    form.invoice.address.house_numberState = true;\r\n  }\r\n};\r\n\r\nconst validateInvoiceCity = () => {\r\n  if (form.invoice.address.city.trim() === \"\") {\r\n    form.invoice.address.cityState = false;\r\n    form.invoice.address.cityError = t(\"city_required\");\r\n  } else {\r\n    form.invoice.address.cityState = true;\r\n  }\r\n};\r\n\r\nconst validateInvoicePhone = () => {\r\n  if (form.invoice.address.telephone.trim() === \"\") {\r\n    form.invoice.address.telephoneState = false;\r\n    form.invoice.address.telephoneError = t(\"phone_required\");\r\n  } else {\r\n    form.invoice.address.telephoneState = true;\r\n  }\r\n};\r\n\r\nconst validateInvoicePostcode = () => {\r\n  if (form.invoice.address.postcode.trim() === \"\") {\r\n    form.invoice.address.postcodeState = false;\r\n    form.invoice.address.postcodeError = t(\"postcode_required\");\r\n  } else {\r\n    form.invoice.address.postcodeState = true;\r\n  }\r\n};\r\n\r\nconst validatePostcodeHouseNumber = async () => {\r\n  isSaveBtnDisable.value = true;\r\n  if (!showFullAddress.value) {\r\n    const list = await validatePostcode(form.address.postcode, form.address.house_number);\r\n    if (list.length === 1) {\r\n      const item = list[0];\r\n      let address = `${item.street} ${item.number}`;\r\n      form.address.streetDisplay = item.street;\r\n      form.address.streetDisplayState = true;\r\n\r\n      if (item.letter) {\r\n        form.address.addition = item.letter;\r\n        address += item.letter;\r\n      } else {\r\n        form.address.addition = \"\";\r\n      }\r\n\r\n      address += `, ${item.postcode} ${item.city}`;\r\n      form.address.city = item.city;\r\n      form.address.cityState = true;\r\n      // form.address.house_numberState = true;\r\n      foundAddress.value = address;\r\n      validatePostCode();\r\n    } else if (list.length === 0) {\r\n      form.address.city = \"\";\r\n      form.address.cityState = false;\r\n      form.address.streetDisplay = \"\";\r\n      form.address.streetDisplayState = false;\r\n      foundAddress.value = t(\"postcode_not_found\");\r\n    } else {\r\n      foundAddresses.value = list.map((item) => {\r\n        let address = `${item.street} ${item.number}`;\r\n        if (item.letter) {\r\n          address += item.letter;\r\n        }\r\n        address += `, ${item.postcode} ${item.city}`;\r\n        isSaveBtnDisable.value = false;\r\n        return { ...item, text: address };\r\n      });\r\n    }\r\n  } else {\r\n    form.address.postcodeState = form.address.postcode === \"\";\r\n    form.address.postcodeError = form.address.postcode === \"\" ? t(\"postcode_required\") : \"\";\r\n  }\r\n  isSaveBtnDisable.value = false;\r\n};\r\n\r\nconst validateInvoicePostcodeHouseNumber = async () => {\r\n  isInvoiceSaveBtnDisable.value = true;\r\n  if (!showFullAddress.value) {\r\n    const list = await validatePostcode(\r\n      form.invoice.address.postcode,\r\n      form.invoice.address.house_number\r\n    );\r\n\r\n    if (list.length === 1) {\r\n      const item = list[0];\r\n      let address = `${item.street} ${item.number}`;\r\n      form.invoice.address.streetDisplay = item.street;\r\n      form.invoice.address.streetDisplayState = true;\r\n\r\n      if (item.letter) {\r\n        form.invoice.address.addition = item.letter;\r\n        address += item.letter;\r\n      } else {\r\n        form.invoice.address.addition = \"\";\r\n      }\r\n\r\n      address += `, ${item.postcode} ${item.city}`;\r\n      form.invoice.address.city = item.city;\r\n      form.invoice.address.cityState = true;\r\n      // form.invoice.address.house_numberState = true;\r\n      foundInvoiceAddress.value = address;\r\n      validateInvoicePostcode(); // Assuming this is another method you want to call\r\n    } else if (list.length === 0) {\r\n      form.invoice.address.city = \"\";\r\n      form.invoice.address.cityState = false;\r\n      form.invoice.address.streetDisplay = \"\";\r\n      form.invoice.address.streetDisplayState = false;\r\n      foundInvoiceAddress.value = t(\"postcode_not_found\");\r\n    } else {\r\n      foundInvoiceAddresses.value = list.map((item) => {\r\n        let address = `${item.street} ${item.number}`;\r\n        if (item.letter) {\r\n          address += item.letter;\r\n        }\r\n        address += `, ${item.postcode} ${item.city}`;\r\n        isInvoiceSaveBtnDisable.value = false;\r\n        return { ...item, text: address };\r\n      });\r\n    }\r\n  } else {\r\n    form.invoice.address.postcodeState = form.invoice.address.postcode === \"\";\r\n    form.invoice.address.postcodeError =\r\n      form.invoice.address.postcode === \"\" ? t(\"postcode_required\") : \"\";\r\n  }\r\n  isInvoiceSaveBtnDisable.value = false;\r\n};\r\n\r\nconst selectAddress = async (id) => {\r\n  if (id === selectedShippingAddressId.value) return;\r\n  store.commit(\"cart/setShippingAddressUpdatingStatus\", true);\r\n  await store.dispatch(\"cart/addShippingAddressById\", { id, store });\r\n  if (form.address.default_billing) {\r\n    await store.dispatch(\"cart/addBillingAddressById\", { id, store });\r\n  }\r\n  store.commit(\"cart/setShippingAddressUpdatingStatus\", false);\r\n};\r\n\r\nconst selectInvoiceAddress = async (id) => {\r\n  await store.dispatch(\"cart/addBillingAddressById\", { id, store });\r\n};\r\n\r\nwatch(country, (newVal) => {\r\n  // if (isCompany.value) {\r\n  validateVAT();\r\n  // }\r\n  if (config.postcode_validation.enabled) {\r\n    showFullAddress.value = !config.postcode_validation.countries.includes(newVal);\r\n  } else {\r\n    showFullAddress.value = true;\r\n  }\r\n});\r\n\r\nwatch(form.address, () => {\r\n  if (form.addressTimer !== null) {\r\n    clearTimeout(form.addressTimer);\r\n  }\r\n  form.addressTimer = setTimeout(() => validateAddress(), 1000);\r\n}\r\n);\r\n\r\nwatch(\r\n  () => form.invoice.address,\r\n  () => {\r\n    if (form.invoiceAddressTimer !== null) {\r\n      clearTimeout(form.invoiceAddressTimer);\r\n    }\r\n    form.invoiceAddressTimer = setTimeout(() => validateInvoiceAddress(), 1000);\r\n  }\r\n);\r\n\r\nwatch(invoiceCountry, (newVal) => {\r\n  // if (isInvoiceCompany.value) {\r\n  validateInvoiceVAT();\r\n  // }\r\n\r\n  if (config.postcode_validation.enabled) {\r\n    showFullInvoiceAddress.value = !config.postcode_validation.countries.includes(newVal);\r\n  } else {\r\n    showFullInvoiceAddress.value = true;\r\n  }\r\n});\r\n\r\nwatch(vatNumber, () => {\r\n  if (config.vat_validation.enabled) {\r\n    if (form.taxvatTimer !== null) {\r\n      clearTimeout(form.taxvatTimer);\r\n    }\r\n    form.taxvatTimer = setTimeout(() => validateVAT(), 1000);\r\n  }\r\n});\r\n\r\nwatch(invoiceVatNumber, () => {\r\n  if (config.vat_validation.enabled) {\r\n    if (form.invoice.taxvatTimer !== null) {\r\n      clearTimeout(form.invoice.taxvatTimer);\r\n    }\r\n    form.invoice.taxvatTimer = setTimeout(() => validateInvoiceVAT(), 1000);\r\n  }\r\n});\r\n\r\nwatch(postcodeHouseNumber, (newVal) => {\r\n  if (!showFullAddress.value) {\r\n    if (typeTimer.value !== null) {\r\n      clearTimeout(typeTimer.value);\r\n    }\r\n    if (foundAddress.value !== \"\") {\r\n      foundAddress.value = \"\";\r\n    }\r\n    if (foundAddresses.value.length > 0) {\r\n      foundAddresses.value = [];\r\n    }\r\n    const [newPostcode, newHouseNumber] = newVal.split(\"|\");\r\n    if (newPostcode && newHouseNumber) {\r\n      typeTimer.value = setTimeout(() => validatePostcodeHouseNumber(), 2000);\r\n    }\r\n  }\r\n});\r\n\r\nwatch(invoicePostcodeHouseNumber, (newVal) => {\r\n  if (!showFullInvoiceAddress.value) {\r\n    if (typeTimer.value !== null) {\r\n      clearTimeout(typeTimer.value);\r\n    }\r\n    if (foundInvoiceAddress.value !== \"\") {\r\n      foundInvoiceAddress.value = \"\";\r\n    }\r\n    if (foundInvoiceAddresses.value.length > 0) {\r\n      foundInvoiceAddresses.value = [];\r\n    }\r\n    const [newPostcode, newHouseNumber] = newVal.split(\"|\");\r\n    if (newPostcode && newHouseNumber) {\r\n      typeTimer.value = setTimeout(() => validateInvoicePostcodeHouseNumber(), 2000);\r\n    }\r\n  }\r\n});\r\nwatch(selectedAddress, (newVal) => {\r\n  form.address.streetDisplay = foundAddresses.value[newVal].street;\r\n  form.address.addition = foundAddresses.value[newVal].letter || \"\";\r\n  form.address.city = foundAddresses.value[newVal].city;\r\n  validatePostCode();\r\n});\r\n\r\nwatch(selectedInvoiceAddress, (newVal) => {\r\n  form.invoice.address.streetDisplay = foundInvoiceAddresses.value[newVal].street;\r\n  form.invoice.address.addition = foundInvoiceAddresses.value[newVal].letter || \"\";\r\n  form.invoice.address.city = foundInvoiceAddresses.value[newVal].city;\r\n  validateInvoicePostcode();\r\n});\r\nwatch(\r\n  () => form.email,\r\n  () => {\r\n    if (form.emailTimer !== null) {\r\n      clearTimeout(form.emailTimer);\r\n    }\r\n    form.emailTimer = setTimeout(() => validateEmail(), 1000);\r\n  }\r\n);\r\n\r\nonMounted(() => {\r\n  if (typeof config.customers.defaultCountry !== \"undefined\") {\r\n    form.address.country_code = config.customers.defaultCountry;\r\n    form.invoice.address.country_code = config.customers.defaultCountry;\r\n  }\r\n\r\n  if (!config.postcode_validation.enabled) {\r\n    // manual.value = true;\r\n    // showManual.value = false;\r\n  }\r\n\r\n  if (!config.vat_validation.enabled) {\r\n    showVatCheck.value = false;\r\n  }\r\n\r\n  if (shippingAddress.value === null && user.value && user.value.default_shipping) {\r\n    selectAddress(user.value.default_shipping);\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <AppLayout wrapperClass=\"checkout\">\r\n    <Breadcrumbs />\r\n    <section class=\"checkout-details ps-md-20 p-15 pt-0\" v-if=\"isClient\">\r\n      <div v-if=\"isLoggedIn\" class=\"row\">\r\n        <BCol lg=\"4\" class=\"address-wrapper\">\r\n          <!-- <NotLoggedInCheckoutDetails v-if=\"!isLoggedIn\" /> -->\r\n          <LoggedInCheckoutDetails />\r\n        </BCol>\r\n        <BCol lg=\"4\" class=\"pt-20 pt-lg-0 payment-shipping-wrapper\">\r\n          <div class=\"group\">\r\n            <div class=\"group-title d-flex align-items-center mb-5\">\r\n              <span>{{ $t(\"shipping_method\") }}</span>\r\n            </div>\r\n            <div v-if=\"deliveryOptions.length == 0\" class=\"message\">\r\n              {{ $t(\"fill_address_information\") }}\r\n            </div>\r\n            <div v-if=\"deliveryOptions.length !== 0\">\r\n              <ul class=\"delivery-options-list list-unstyled pl-0 m-0\">\r\n                <li v-for=\"(deliveryOption, index) of deliveryOptions\" :key=\"`ship-${index}`\">\r\n                  <BFormRadio v-model=\"selectedShippingMethod\" name=\"deliveryOption\"\r\n                    :value=\"`${deliveryOption?.carrier_code}|${deliveryOption?.method_code}`\">\r\n                    <div class=\"d-flex\">\r\n                      <span class=\"delivery-price d-block\">{{ formatCurrency(deliveryOption.amount.value)\r\n                      }}&nbsp;</span>\r\n                      <span class=\"d-block mx-6\">{{ deliveryOption?.carrier_title }} ({{\r\n                        deliveryOption?.method_title\r\n                      }})</span>\r\n                    </div>\r\n                  </BFormRadio>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div v-if=\"showPickupLocation\">\r\n            <span class=\"d-block mb-15\">{{ $t(\"select_store\") }}</span>\r\n            <BFormGroup class=\"select--custom\">\r\n              <BFormSelect v-model=\"pickupLocation\" :options=\"pickupLocations\" class=\"mb-3\"\r\n                value-field=\"pickup_location_code\" text-field=\"name\" id=\"pickup-dropdown\">\r\n                <template #first>\r\n                  <BFormSelectOption :value=\"null\">{{ $t(\"select_store\") }}</BFormSelectOption>\r\n                </template>\r\n              </BFormSelect>\r\n            </BFormGroup>\r\n          </div>\r\n          <div>\r\n            <div class=\"address-list store-address\" v-if=\"showPickupLocation && selectedPickupLocation\">\r\n              <div class=\"address-list-wrap\">\r\n                <div class=\"address-item\" v-if=\"selectedAddress != null\">\r\n                  <label>{{ pickupLocationName }}</label>\r\n                  <div>{{ selectedAddress.street[0] }}</div>\r\n                  <div>{{ selectedAddress.postcode }} {{ selectedAddress.city }}</div>\r\n                  <div v-if=\"selectedAddress.country\">\r\n                    {{ selectedAddress.countryName }}\r\n                  </div>\r\n                  <div>\r\n                    T:<a :href=\"`tel:` + pickupLocationPhone\"> {{ pickupLocationPhone }}</a>\r\n                  </div>\r\n                  <div v-if=\"selectedAddress.vat_id != null\">\r\n                    VAT:{{ selectedAddress.vat_id }}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"group\">\r\n            <div class=\"group-title d-flex align-items-center mb-5\">\r\n              <span class=\"d-block\">{{ $t(\"payment_method\") }}</span>\r\n            </div>\r\n            <div v-if=\"deliveryOptions.length == 0 || shippingMethod == null\" class=\"message\">\r\n              {{ $t(\"fill_shipping_options\") }}\r\n            </div>\r\n            <div v-else>\r\n              <ul class=\"payment-options-list list-unstyled p-0 m-0\">\r\n                <li v-for=\"(paymentOption, index) in paymentOptions\" :key=\"`pay-${index}`\">\r\n                  <BFormRadio class=\"pl-30\" name=\"paymentOption\" :value=\"paymentOption.code\"\r\n                    v-on:change=\"checkAllSubOptions(paymentOption.code)\" v-model=\"selectedPaymentMethod\">\r\n                    <div class=\"d-flex align-items-center\">\r\n                      <span>{{ paymentOption.label }}</span>\r\n                    </div>\r\n                  </BFormRadio>\r\n                  <div :class=\"showPaymentSuboptions\"\r\n                    v-for=\"(paymentSubOption, index) in paymentOption.additional_fields\" :key=\"`pso-${index}`\">\r\n                    <div v-if=\"paymentSubOption.type == 'select'\" class=\"pt-4\">\r\n                      <span class=\"d-block mb-15\">{{ paymentSubOption.label }}</span>\r\n                      <BFormGroup class=\"select--custom\">\r\n                        <BFormSelect :options=\"paymentSubOption.options\" text-field=\"label\"\r\n                          :value=\"paymentMethodOptions[paymentOption.code][paymentSubOption.code]\" v-on:change=\"\r\n                            setPaymentMethodOptions(\r\n                              paymentOption.code,\r\n                              paymentSubOption.code,\r\n                              $event\r\n                            )\r\n                            \" v-model=\"selectedIssuer\">\r\n                          <template #first>\r\n                            <BFormSelectOption :value=\"null\">{{\r\n                              $t(\"select_bank\")\r\n                            }}</BFormSelectOption>\r\n                          </template>\r\n                        </BFormSelect>\r\n                      </BFormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div :class=\"isKlarnaSelected\" v-if=\"paymentOption?.code == 'multisafepay_klarna'\">\r\n                    Je moet minimaal 18+ zijn om deze dienst te gebruiken. Als je op tijd betaalt,\r\n                    voorkom je extra kosten.\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </BCol>\r\n        <BCol lg=\"4\" class=\"pt-30 pt-lg-0\">\r\n          <div>\r\n            <!-- <span class=\"group-title d-block\"><i class=\"lnr lnr-checkmark-circle me-10\"></i>\r\n              {{ $t(\"order_overview\") }}\r\n            </span>\r\n            <div class=\"cart-details pb-15\">\r\n              <BLink href=\"#\" v-b-toggle.cart-details-collapse\r\n                class=\"d-block mb-10 group-subtitle border-0 collapse-opener\" v-html=\"getItemsInCart\"></BLink>\r\n              <BCollapse id=\"cart-details-collapse\" class=\"bg-white\" visible>\r\n                <div class=\"d-flex align-items-center py-20\" v-for=\"cartItem of cartItems\" :key=\"cartItem.id\">\r\n                  <div class=\"img\">\r\n                    <img :src=\"cartItem.product.image.small\" :alt=\"cartItem.product.name\" />\r\n                  </div>\r\n                  <div class=\"details\">\r\n                    <span class=\"name d-block mb-20\">{{ cartItem.product.name }}</span>\r\n                    <div v-if=\"typeof cartItem.configurable_options != 'undefined'\">\r\n                      <span v-for=\"(option, index) of cartItem.configurable_options\" :key=\"index\"\r\n                        class=\"product-options d-block\">\r\n                        <span class=\"product-options-title\">{{ option.option_label }}:&nbsp;</span>\r\n                        <span class=\"product-options-value\">{{ option.value_label }}</span>\r\n                      </span>\r\n                    </div>\r\n                    <div class=\"d-flex align-items-center\">\r\n                      <div class=\"quantity-input d-flex me-5\">\r\n                        <input type=\"number\" min=\"1\" :value=\"cartItem.quantity\" name=\"quantity\" ref=\"inputQuantity\"\r\n                          readonly=\"readonly\" />\r\n                      </div>\r\n                      <div>\r\n                        {{ formatCurrency(cartItem.prices.row_total_including_tax.value) }}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </BCollapse>\r\n            </div> -->\r\n            <div class=\"order-overview\">\r\n              <span class=\"group-title mb-5 d-block\">{{ $t(\"order_overview\") }}</span>\r\n              <ul class=\"cost-list list-unstyled pl-0 m-0\">\r\n                <li class=\"d-flex justify-content-between\">\r\n                  <span class=\"d-block mr-20\">{{ $t(\"subtotal\") }}</span>\r\n                  <span class=\"d-block\"> {{ formatCurrency(cartSubTotalPrice) }}</span>\r\n                </li>\r\n                <li v-if=\"shippingMethod != null\" class=\"d-flex justify-content-between\">\r\n                  <span class=\"d-block mr-20\">{{ shippingMethod.carrier_title }} / {{ shippingMethod.method_title\r\n                  }}</span>\r\n                  <span class=\"d-block\" v-if=\"shippingMethod.amount_including_tax\">\r\n                    {{ formatCurrency(shippingMethod.amount_including_tax.value) }}</span>\r\n                </li>\r\n                <li v-for=\"(price, index) in cartTotalDiscounts\" :key=\"`price-${index}`\"\r\n                  class=\"d-flex justify-content-between\">\r\n                  <span class=\"d-block mr-20\">{{ price.label }}</span>\r\n                  <span class=\"d-block\">- {{ formatCurrency(price.amount.value) }}</span>\r\n                </li>\r\n              </ul>\r\n              <div class=\"total-grp text-end\">\r\n                <span class=\"total-label\">{{ $t(\"total\") }}</span>\r\n                <span class=\"total-value col-7 d-inline-block\"> {{ formatCurrency(cartTotalPrice) }}</span>\r\n              </div>\r\n              <ul class=\"cost-list list-unstyled pl-0 m-0 pb-0\">\r\n                <li v-for=\"(price, index) in cartTotalTaxPrices\" :key=\"`tax-${index}`\"\r\n                  class=\"d-flex justify-content-between\">\r\n                  <span class=\"d-block mr-20\">{{ price.label }}</span>\r\n                  <span class=\"d-block\" v-if=\"price\">{{\r\n                    formatCurrency(price.amount.value)\r\n                  }}</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <!-- <div class=\"coupon pt-15 mb-15\">\r\n              <BLink class=\"collapse-opener group-subtitle d-block mb-10 border-0\" v-b-toggle.coupon-collapse\r\n                @click.prevent>{{\r\n                  $t(\"coupon_discount\") }}</BLink>\r\n              <BCollapse id=\"coupon-collapse\" collapsed class=\"pb-15\">\r\n                <div class=\"d-flex\">\r\n                  <BFormInput v-model=\"couponCode\" type=\"text\" :placeholder=\"$t('fill_out_discount_code')\">\r\n                  </BFormInput>\r\n                  <BButton @click=\"addCoupon\" class=\"py-3\">{{ $t(\"add\") }}</BButton>\r\n                </div>\r\n                <div v-if=\"appliedCouponCodes && appliedCouponCodes[0]\" class=\"pt-10\">\r\n                  {{ $t(\"applied_coupon_code\") }}:\r\n                  {{ appliedCouponCodes[0].code }}\r\n                  <BLink href=\"#\" @click=\"removeCouponCode()\" class=\"lnr lnr-cross pl-5\"></BLink>\r\n                </div>\r\n              </BCollapse>\r\n            </div>\r\n             <BFormCheckbox class=\"pl-30\" id=\"newsletter\" v-model=\"SubscribeNewsletter\" name=\"news-letter-subscribe\"\r\n              value=\"yes\" unchecked-value=\"no\">{{ $t(\"subscription_newsletter\") }}</BFormCheckbox>\r\n            <span class=\"terms\">{{ $t(\"terms_warning\") }}</span> -->\r\n            <BButton @click=\"submitForm\" v-bind:disabled=\"buttonClicked\" variant=\"secondary\"\r\n              class=\"text-light w-100 text-uppercase checkout-btn\">\r\n              {{ $t(\"pay\") }}\r\n            </BButton>\r\n          </div>\r\n        </BCol>\r\n      </div>\r\n      <div v-else>\r\n        <h3>\r\n          {{ $t(\"checkout_login_message\") }}\r\n          <router-link to=\"/login\"> Click Here... </router-link>\r\n        </h3>\r\n      </div>\r\n    </section>\r\n  </AppLayout>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted, watch } from \"vue\";\r\nimport AppLayout from \"@/esf_thehague_schinsleder/core/components/AppLayout\";\r\nimport Breadcrumbs from \"@/esf_thehague_schinsleder/core/components/Breadcrumbs\";\r\n// import NotLoggedInCheckoutDetails from \"@/base/core/components/NotLoggedInCheckoutDetails\";\r\nimport LoggedInCheckoutDetails from \"@/esf_thehague_schinsleder/core/components/checkout/LoggedInCheckoutDetails\";\r\nimport config from \"@config\";\r\nimport { useStore } from \"vuex\";\r\nimport { useI18n } from \"vue-i18n\";\r\nimport { useHead } from \"@unhead/vue\";\r\nimport { useGtm } from \"@gtm-support/vue-gtm\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { useCartInfo } from \"@storefront/core/composable/cart\";\r\n\r\nconst isClient = ref(false);\r\n\r\nonMounted(() => {\r\n  isClient.value = true;\r\n});\r\n\r\n\r\nconst emit = defineEmits([\"toggleNextDisable\"]);\r\nconst router = useRouter();\r\nconst store = useStore();\r\nconst { t } = useI18n();\r\nconst gtm = useGtm();\r\nconst {\r\n  cartCount,\r\n  cartItems,\r\n  cartSubTotalPrice,\r\n  cartTotalPrice,\r\n  cartTotalTaxPrices,\r\n  cartTotalDiscounts,\r\n} = useCartInfo();\r\n\r\nconst localStorageData = ref({});\r\nconst selectedShippingMethod = ref(null);\r\nconst selectedIssuer = ref(null);\r\nconst pickupLocation = ref(null);\r\nconst showPickupLocation = ref(false);\r\nconst selectedPickupLocation = ref(null);\r\nconst couponCode = ref(\"\");\r\nconst SubscribeNewsletter = ref(\"yes\");\r\nconst buttonClicked = ref(false);\r\nconst app_url = ref(config.app_url);\r\n// const paymentSubOptions = ref({});\r\n// const carrier_code = ref(\"\");\r\nconst gtmEnabled = ref(false);\r\n\r\n// Computed properties\r\nconst getItemsInCart = computed(() => {\r\n  let items = t(\"items_in_cart\", { numberOf: cartCount.value });\r\n  return items.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\");\r\n});\r\nconst isLoggedIn = computed(() => store.getters[\"user/getIsLoggedIn\"]);\r\nconst user = computed(() => store.getters[\"user/getCurrentUser\"]);\r\nconst paymentOptions = computed(() => store.getters[\"cart/getPaymentMethods\"]);\r\nconst selectedAddress = computed(() => ({ ...store.getters[\"cart/getShippingAddress\"] }));\r\nconst deliveryOptions = computed(() => {\r\n  let options = [...store.getters[\"cart/getShippingMethods\"]];\r\n  if (options.length > 0) {\r\n    const pickIndex = options.findIndex((option) => option.carrier_code === \"instore\");\r\n    options.push(options.splice(pickIndex, 1)[0]);\r\n  }\r\n  return options;\r\n});\r\nconst paymentMethodOptions = computed(() => store.getters[\"cart/getPaymentMethodOptions\"]);\r\nconst selectedPaymentMethod = computed({\r\n  get() {\r\n    return store.getters[\"cart/getPaymentMethod\"];\r\n  },\r\n  set(method) {\r\n    updateLocalStorage({ billing: method });\r\n    store.commit(\"cart/setPaymentMethod\", method, store);\r\n    if (gtmEnabled.value && gtm) {\r\n      // Only push data if GTM is enabled\r\n      let prod = store.getters[\"cart/getCartItems\"].map((item) => ({\r\n        id: item.product.sku,\r\n        name: item.product.name,\r\n        quantity: item.quantity,\r\n      }));\r\n      gtm.trackEvent(\"checkout\", {\r\n        event: \"eec.checkout\",\r\n        ecommerce: {\r\n          checkout: {\r\n            actionField: { step: 2, option: method, action: \"checkout\" },\r\n            products: prod,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  },\r\n});\r\n// const btnDisable = computed(() => {\r\n//   return (\r\n//     !store.getters[\"cart/getShippingAddress\"] ||\r\n//     !store.getters[\"cart/getBillingAddress\"] ||\r\n//     !store.getters[\"cart/getShippingMethod\"] ||\r\n//     !store.getters[\"cart/getPaymentMethod\"] ||\r\n//     !store.getters[\"cart/getEmail\"] ||\r\n//     store.getters[\"cart/getItemsTotalQuantity\"] === 0\r\n//   );\r\n// });\r\n\r\nconst pickupLocations = computed(() => {\r\n  let locations = [...store.getters[\"cart/getPickupLocations\"]];\r\n  locations = locations.map((location) => {\r\n    if (location.name.startsWith(\"Wieleroutfits\")) return location;\r\n    return {\r\n      ...location,\r\n      name: `Wieleroutfits ${location.name}`,\r\n      phone: location.phone,\r\n    };\r\n  });\r\n\r\n  let newLocations = [];\r\n  let sortVal = config.pickupSortOptions;\r\n  sortVal.forEach((item) => {\r\n    const index = locations.findIndex(\r\n      (location) => location.pickup_location_code.toLowerCase() == item.toLowerCase()\r\n    );\r\n    if (index > -1) newLocations.push(locations.splice(index, 1)[0]);\r\n  });\r\n\r\n  newLocations = [...newLocations, ...locations];\r\n\r\n  return newLocations;\r\n});\r\n\r\nconst pickupLocationName = computed(() => {\r\n  if (pickupLocation.value && pickupLocation.value.length > 0) {\r\n    return pickupLocations.value.find((loc) => loc.pickup_location_code === this.pickupLocation)\r\n      .name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n});\r\n\r\nconst pickupLocationPhone = computed(() => {\r\n  if (pickupLocation.value && pickupLocation.value.length > 0) {\r\n    const loc = pickupLocations.value.find(\r\n      (loc) => loc.pickup_location_code === pickupLocation.value\r\n    );\r\n    return loc ? loc.phone : \"\";\r\n  }\r\n  return \"\";\r\n});\r\n\r\nconst getSelectedShippingMethod = computed(() => {\r\n  return store.getters[\"cart/getShippingMethod\"];\r\n});\r\n\r\nconst shippingMethod = computed({\r\n  get() {\r\n    return store.getters[\"cart/getShippingMethod\"];\r\n  },\r\n  set(shippingMethod) {\r\n    return shippingMethod;\r\n  },\r\n});\r\n\r\nconst appliedCouponCodes = computed(() => store.getters[\"cart/getAppliedCouponCodes\"]);\r\nconst showPaymentSuboptions = computed({\r\n  get() {\r\n    return selectedPaymentMethod.value === \"multisafepay_ideal\"\r\n      ? \"collapse show\"\r\n      : \"collapse hidden\";\r\n  },\r\n  set() { },\r\n});\r\n\r\nconst isKlarnaSelected = computed({\r\n  get() {\r\n    return selectedPaymentMethod.value == \"multisafepay_klarna\"\r\n      ? \"collapse show\"\r\n      : \"collapse hidden\";\r\n  },\r\n  set() { },\r\n});\r\n\r\n// Watcher for showPickupLocation\r\nwatch(showPickupLocation, () => {\r\n  setShippingMethod();\r\n});\r\n\r\n// Watcher for pickupLocation\r\nwatch(\r\n  () => pickupLocation.value,\r\n  async (code) => {\r\n    const response = await store.dispatch(\"cart/setPickupLocation\", { code, store });\r\n    if (response) {\r\n      const delOption = selectedShippingMethod.value.split(\"|\");\r\n      await store.dispatch(\"cart/addShippingMethod\", {\r\n        carrier: delOption[0],\r\n        method: delOption[1],\r\n        store,\r\n      });\r\n      selectedPickupLocation.value = await store.getters[\"cart/getShippingAddress\"];\r\n      updateLocalStorage({\r\n        shipping: selectedShippingMethod.value,\r\n        delivery: code,\r\n      });\r\n      emit(\"toggleNextDisable\", false);\r\n    }\r\n  }\r\n);\r\n\r\n// Watcher for selectedShippingMethod\r\nwatch(selectedShippingMethod, (method) => {\r\n  const [carrier_code, method_code] = method.split(\"|\");\r\n\r\n  if (carrier_code === \"instore\" && method_code === \"pickup\") {\r\n    showPickupLocation.value = true;\r\n  } else {\r\n    updateLocalStorage({\r\n      shipping: selectedShippingMethod.value,\r\n      delivery: null,\r\n    });\r\n    showPickupLocation.value = false;\r\n    store.dispatch(\"cart/addShippingMethod\", {\r\n      carrier: carrier_code,\r\n      method: method_code,\r\n      store,\r\n    });\r\n\r\n    if (gtmEnabled.value && gtm) {\r\n      let prod = [];\r\n      cartItems.value.forEach((element) => {\r\n        prod.push({\r\n          id: element.product.sku,\r\n          name: element.product.name,\r\n          quantity: element.quantity,\r\n        });\r\n      });\r\n\r\n      window.dataLayer.push({\r\n        event: \"eec.checkout\",\r\n        ecommerce: {\r\n          checkout: {\r\n            actionField: {\r\n              step: 3,\r\n              option: method,\r\n              action: \"checkout\",\r\n            },\r\n            products: prod,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }\r\n});\r\n\r\n// Watcher for SubscribeNewsletter\r\nwatch(SubscribeNewsletter, () => {\r\n  updateLocalStorage({ newsletter: SubscribeNewsletter.value });\r\n});\r\n\r\n// Watcher for paymentMethodOptions\r\nwatch(\r\n  () => paymentMethodOptions,\r\n  (method) => {\r\n    if (method && method.multisafepay_ideal && !method.multisafepay_ideal.issuer_id) {\r\n      if (localStorageData.value.issuer) {\r\n        setPaymentMethodOptions(\"multisafepay_ideal\", \"issuer_id\", localStorageData.value.issuer);\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\n// Methods\r\nfunction storage() {\r\n  localStorageData.value = JSON.parse(localStorage.getItem(\"checkoutPayment\")) ?? {};\r\n  if (localStorageData.value.shipping)\r\n    selectedShippingMethod.value = localStorageData.value.shipping;\r\n  if (localStorageData.value.delivery) {\r\n    pickupLocation.value = localStorageData.value.delivery;\r\n    showPickupLocation.value = true;\r\n    selectedPickupLocation.value = localStorageData.value.delivery;\r\n  }\r\n  if (localStorageData.value.billing) selectedPaymentMethod.value = localStorageData.value.billing;\r\n  selectedIssuer.value = localStorageData.value.issuer ?? \"\";\r\n  SubscribeNewsletter.value = localStorageData.value.newsletter ?? \"yes\";\r\n}\r\n\r\n// Format currency\r\nfunction formatCurrency(amount) {\r\n  const formatter = new Intl.NumberFormat(\"nl-NL\", {\r\n    style: \"currency\",\r\n    currency: \"EUR\",\r\n  });\r\n  return formatter.format(amount);\r\n}\r\n\r\n// Submit form\r\nasync function submitForm() {\r\n  buttonClicked.value = true;\r\n  checkSiblingFields();\r\n  if (checkFields()) {\r\n    buttonClicked.value = true;\r\n    if (selectedPaymentMethod.value === \"multisafepay_ideal\") {\r\n      store.commit(\"cart/updateCartPaymentMethodOptions\", {\r\n        key: selectedPaymentMethod.value,\r\n        sub: \"issuer_id\",\r\n        value: selectedIssuer.value,\r\n      });\r\n    }\r\n    const retval = await store.dispatch(\"cart/addPaymentMethod\", store);\r\n    if (retval !== false) {\r\n      localStorage.removeItem(\"orderHash\");\r\n      if (retval.order.hash) {\r\n        localStorage.setItem(\"orderHash\", retval.order.hash);\r\n      }\r\n      const url = retval.redirect_url.replace(config.app_url, \"\");\r\n      if (isLoggedIn.value === true) {\r\n        store.dispatch(\"user/loadOrders\", { page: 1, perPage: 10, Search: \"\", store });\r\n      }\r\n      if (url.includes(\"https://\")) {\r\n        window.location = url;\r\n      } else {\r\n        store.dispatch(\"cart/loadCart\", { store });\r\n        router.push({\r\n          path: `${url}?transactionid=${retval.order.increment_id}`,\r\n          params: { hash: retval.order.hash },\r\n        });\r\n      }\r\n    }\r\n    // buttonClicked.value = false;\r\n  }\r\n  else {\r\n    buttonClicked.value = false;\r\n  }\r\n}\r\n\r\n// Add coupon\r\nasync function addCoupon() {\r\n  if (couponCode.value !== \"\") {\r\n    const retval = await store.dispatch(\"cart/addCouponCode\", {\r\n      code: couponCode.value,\r\n      store: store,\r\n    });\r\n    if (retval === true) {\r\n      const msg = {\r\n        type: \"success\",\r\n        title: t(\"coupon_code\"),\r\n        text: t(\"coupon_code_ok\", { code: couponCode.value }),\r\n      };\r\n      store.dispatch(\"messages/sendMessage\", { message: msg });\r\n      // appliedCouponCode.value = couponCode.value;\r\n      couponCode.value = \"\";\r\n    }\r\n  }\r\n}\r\n\r\n// Set payment method options\r\nfunction setPaymentMethodOptions(paymentMethod, option_key, issuer_id) {\r\n  if (paymentMethod) {\r\n    updateLocalStorage({\r\n      billing: paymentMethod,\r\n      issuer: issuer_id,\r\n    });\r\n    store.commit(\"cart/updateCartPaymentMethodOptions\", {\r\n      key: paymentMethod,\r\n      sub: option_key,\r\n      value: issuer_id,\r\n    });\r\n  }\r\n}\r\n\r\nfunction checkAllSubOptions(code) {\r\n  showPaymentSuboptions.value = code === \"multisafepay_ideal\" ? \"collapse show\" : \"collapse hidden\";\r\n  isKlarnaSelected.value = code === \"multisafepay_klarna\" ? \"collapse show\" : \"collapse hidden\";\r\n  // isPaymentSelected.value = true;\r\n  // showPaymentRequired.value = false;\r\n}\r\n\r\n// function submitCoupon(e) {\r\n//   e.preventDefault();\r\n// }\r\n\r\n// Set shipping method method\r\nfunction setShippingMethod() {\r\n  if (!showPickupLocation.value) {\r\n    shippingMethod.value = selectedAddress.value;\r\n  } else if (user.value.addresses) {\r\n    const defaultShipping = user.value.defaultShipping;\r\n    const address = user.value.addresses.find((add) => add.id === defaultShipping);\r\n    shippingMethod.value = address || selectedAddress.value;\r\n  } else {\r\n    shippingMethod.value = selectedAddress.value;\r\n  }\r\n}\r\n\r\n// Clear local storage\r\n// function clearLocalStorage() {\r\n//   localStorage.removeItem(\"checkout\");\r\n// }\r\n\r\n// Update local storage with new data\r\nfunction updateLocalStorage(data) {\r\n  localStorageData.value = { ...localStorageData.value, ...data };\r\n  localStorage.setItem(\"checkoutPayment\", JSON.stringify(localStorageData.value));\r\n}\r\n\r\n// Remove coupon code\r\nasync function removeCouponCode() {\r\n  await store.dispatch(\"cart/removeCouponCode\", { store });\r\n}\r\n\r\n// Check if fields are valid\r\nfunction checkFields() {\r\n  const errorFields = [];\r\n  const storeValidation = store.getters[\"cart/getStoreValidation\"];\r\n  for (const property in storeValidation) {\r\n    storeValidation[property].forEach((error) => {\r\n      errorFields.push(error);\r\n    });\r\n  }\r\n  if (errorFields.length > 0) {\r\n    const msg = {\r\n      type: \"danger\",\r\n      title: t(\"Checkout fields incomplete\"),\r\n      text: t(\"The following fields are invalid:\", {\r\n        errors: errorFields.join(\", \"),\r\n      }),\r\n    };\r\n    store.dispatch(\"messages/sendMessage\", { message: msg });\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction emitCheckFields() {\r\n  window.dispatchEvent(new CustomEvent(\"checkFields\"));\r\n}\r\n\r\nfunction checkSiblingFields() {\r\n  emitCheckFields(); // Instead of this.$root.$emit\r\n  const errorFields = [];\r\n  if (!shippingMethod.value) {\r\n    errorFields.push(t(\"Shipping method\"));\r\n  }\r\n\r\n  if (!selectedPaymentMethod.value && !paymentMethodOptions.value) {\r\n    errorFields.push(t(\"Payment method\"));\r\n  } else if (!selectedPaymentMethod.value) {\r\n    selectedPaymentMethod.value = paymentMethodOptions.value;\r\n  }\r\n\r\n  if (selectedPaymentMethod.value === \"multisafepay_ideal\") {\r\n    if (\r\n      !paymentMethodOptions.value.multisafepay_ideal ||\r\n      !paymentMethodOptions.value.multisafepay_ideal.issuer_id\r\n    ) {\r\n      errorFields.push(t(\"Bank\"));\r\n    }\r\n  }\r\n\r\n  if (errorFields.length > 0) {\r\n    store.commit(\"cart/setStoreValidation\", {\r\n      payment: errorFields,\r\n    });\r\n  } else {\r\n    store.commit(\"cart/setStoreValidation\", {\r\n      payment: [],\r\n    });\r\n  }\r\n}\r\n\r\nuseHead({\r\n  title: () => t(\"checkout\"),\r\n});\r\n\r\nonMounted(() => {\r\n  gtmEnabled.value = true;\r\n  if (gtm) {\r\n    gtm.enable(true);\r\n  }\r\n  const shmed = getSelectedShippingMethod.value;\r\n  if (shmed) {\r\n    if (shmed.carrier_code === \"instore\" && shmed.method_code === \"pickup\") {\r\n      showPickupLocation.value = true;\r\n    }\r\n    selectedShippingMethod.value = `${shmed.carrier_code}|${shmed.method_code}`;\r\n  }\r\n  setShippingMethod();\r\n  const bcrumb = { current: t(\"checkout\"), routes: [] };\r\n  store.commit(\"breadcrumbs/set\", bcrumb);\r\n  if (gtm && gtmEnabled.value) {\r\n    let prod = [];\r\n    cartItems.value.forEach((element) => {\r\n      let i = {\r\n        id: element.product.sku,\r\n        name: element.product.name,\r\n        quantity: element.quantity,\r\n      };\r\n      prod.push(i);\r\n    });\r\n    window.dataLayer.push({\r\n      event: \"eec.checkout\",\r\n      ecommerce: {\r\n        checkout: {\r\n          actionField: {\r\n            step: 1,\r\n            option: \"\",\r\n            action: \"checkout\",\r\n          },\r\n          products: prod,\r\n        },\r\n      },\r\n    });\r\n  }\r\n  storage();\r\n});\r\n</script>"],"names":["user","config","loc","shippingMethod"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8UA,UAAM,QAAQ,SAAQ;AACtB,UAAM,EAAE,EAAC,IAAK;AAId,UAAM,aAAa,IAAI,KAAK;AAC5B,UAAM,oBAAoB,IAAI,KAAK;AACjB,QAAI,KAAK;AACF,QAAI,KAAK;AAClC,UAAM,mBAAmB,IAAI,KAAK;AAClC,UAAM,0BAA0B,IAAI,KAAK;AACzC,UAAM,kBAAkB,IAAI,KAAK;AACjC,UAAM,yBAAyB,IAAI,KAAK;AACxC,UAAM,iBAAiB,IAAI,EAAE;AACR,QAAI,KAAK;AACX,QAAI,IAAI;AAE3B,UAAM,YAAY,IAAI,IAAI;AAC1B,UAAM,iBAAiB,IAAI,CAAA,CAAE;AAC7B,UAAM,eAAe,IAAI,EAAE;AAC3B,UAAM,wBAAwB,IAAI,CAAA,CAAE;AACpC,UAAM,sBAAsB,IAAI,EAAE;AAClC,UAAM,cAAc,IAAI,KAAK;AAC7B,UAAM,kBAAkB,IAAI,IAAI;AAChC,UAAM,yBAAyB,IAAI,IAAI;AACvC,UAAM,mBAAmB,IAAI,KAAK;AAClC,UAAM,0BAA0B,IAAI,KAAK;AAGzC,UAAM,WAAW,IAAI,wJAAwJ;AAG7K,UAAM,OAAO,SAAS;AAAA,MACpB,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,kBAAkB;AAAA,MAClB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,SAAS;AAAA,MACT,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,WAAW;AAAA,MACX,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,UAAU;AAAA,MACV,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,MAKf,QAAQ;AAAA,MACR,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,SAAS;AAAA,QACP,cAAc;AAAA,QACd,UAAU;AAAA,QACV,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,QAAQ;AAAA,QACR,eAAe;AAAA,QACf,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,cAAc;AAAA,QACd,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,UAAU;AAAA,QACV,MAAM;AAAA,QACN,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,iBAAiB;AAAA,QACjB,kBAAkB;AAAA,MACnB;AAAA,MACD,SAAS;AAAA,QACP,WAAW;AAAA,QACX,SAAS;AAAA,QACT,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,WAAW;AAAA,QACX,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,UAAU;AAAA,QACV,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,QAKf,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,SAAS;AAAA,UACP,cAAc;AAAA,UACd,UAAU;AAAA,UACV,eAAe;AAAA,UACf,eAAe;AAAA,UACf,eAAe;AAAA,UACf,QAAQ;AAAA,UACR,eAAe;AAAA,UACf,oBAAoB;AAAA,UACpB,oBAAoB;AAAA,UACpB,oBAAoB;AAAA,UACpB,cAAc;AAAA,UACd,mBAAmB;AAAA,UACnB,mBAAmB;AAAA,UACnB,mBAAmB;AAAA,UACnB,UAAU;AAAA,UACV,MAAM;AAAA,UACN,WAAW;AAAA,UACX,WAAW;AAAA,UACX,WAAW;AAAA,UACX,WAAW;AAAA,UACX,gBAAgB;AAAA,UAChB,gBAAgB;AAAA,UAChB,gBAAgB;AAAA,UAChB,iBAAiB;AAAA,UACjB,kBAAkB;AAAA,QACnB;AAAA,MACF;AAAA,MACD,WAAW;AAAA,MACX,QAAQ;AAAA,IACV,CAAC;AAGD,UAAM,kBAAkB,SAAS,MAAM,MAAM,QAAQ,yBAAyB,CAAC;AAC/E,UAAM,YAAY,SAAS,MAAM,MAAM,QAAQ,mBAAmB,CAAC;AACnE,UAAM,UAAU,SAAS,MAAM,KAAK,QAAQ,YAAY;AACxD,UAAM,4BAA4B,SAAS,MAAM;AAC/C,YAAM,KAAK,MAAM,QAAQ,yBAAyB;AAClD,aAAO,KAAK,GAAG,KAAK;AAAA,IACtB,CAAC;AACD,UAAM,2BAA2B,SAAS,MAAM;AAC9C,YAAM,KAAK,MAAM,QAAQ,wBAAwB;AACjD,aAAO,KAAK,GAAG,KAAK;AAAA,IACtB,CAAC;AASD,UAAM,iBAAiB,SAAS,MAAM,KAAK,QAAQ,QAAQ,YAAY;AACvE,UAAM,sBAAsB,SAAS,MAAM,GAAG,KAAK,QAAQ,QAAQ,IAAI,KAAK,QAAQ,YAAY,EAAE;AAClG,UAAM,6BAA6B,SAAS,MAAM,GAAG,KAAK,QAAQ,QAAQ,QAAQ,IAAI,KAAK,QAAQ,QAAQ,YAAY,EAAE;AACzH,UAAM,YAAY,SAAS,MAAM,KAAK,MAAM;AAC5C,UAAM,mBAAmB,SAAS,MAAM,KAAK,QAAQ,MAAM;AAK3D,UAAM,YAAY,SAAS,MAAM;AAC/B,YAAMA,QAAO,MAAM,QAAQ,qBAAqB;AAChD,UAAIA,MAAK,UAAU,UAAU,GAAG;AAC9B,mBAAW,QAAQ;AAAA,MACpB;AACD,aAAOA,MAAK;AAAA,IACd,CAAC;AACD,UAAM,OAAO,SAAS,MAAM,MAAM,QAAQ,qBAAqB,CAAC;AAEhE,UAAM,gBAAgB,YAAY;AAChC,UAAI,KAAK,MAAM,KAAI,EAAG,WAAW,GAAG;AAClC,aAAK,aAAa;AAClB,aAAK,aAAa,EAAE,yBAAyB;AAC7C,eAAO;AAAA,MACR;AACD,UAAI,CAAC,SAAS,MAAM,KAAK,KAAK,KAAK,GAAG;AACpC,aAAK,aAAa;AAClB,aAAK,aAAa,EAAE,wBAAwB;AAC5C,eAAO;AAAA,MACR;AACD,UAAI,CAAE,MAAM,gBAAgB,KAAK,KAAK,GAAI;AACxC,oBAAY,QAAQ;AAAA,MACxB,OAAS;AACL,oBAAY,QAAQ;AAAA,MACrB;AAED,WAAK,aAAa;AAClB,YAAM,SAAS,qBAAqB;AAAA,QAClC,OAAO,KAAK;AAAA,QACZ;AAAA,MACJ,CAAG;AACD,aAAO;AAAA,IACT;AAyKA,UAAM,cAAc,YAAY;AAE9B,UAAI,KAAK,UAAU,IAAI;AACrB,YAAI,KAAK,OAAO,UAAU,GAAG,CAAC,EAAE,kBAAkB,KAAK,QAAQ,cAAc;AAC3E,gBAAM,SAAS,MAAM,kBAAkB,KAAK,MAAM;AAClD,cAAI,OAAO,UAAU;AACnB,6BAAiB,QAAQ;AACzB,iBAAK,cAAc;AAAA,UAC3B,OAAa;AACL,6BAAiB,QAAQ;AACzB,iBAAK,cAAc;AACnB,iBAAK,cAAc,EAAE,gBAAgB;AACrC,2BAAe,QAAQ,EAAE,gBAAgB;AAAA,UAC1C;AAAA,QACP,OAAW;AACL,2BAAiB,QAAQ;AACzB,eAAK,cAAc;AACnB,eAAK,cAAc,EAAE,sBAAsB;AAAA,QAC5C;AAAA,MACL,OAAS;AACL,aAAK,cAAc;AACnB,aAAK,cAAc;AAAA,MACpB;AAAA,IAKH;AAEA,UAAM,kBAAkB,YAAY;AAClC,UAAI,OAAO;AAEX,UACE,KAAK,QAAQ,KAAI,MAAO,MACxB,KAAK,UAAU,KAAI,MAAO,MAC1B,KAAK,SAAS,KAAI,MAAO,MACzB,KAAK,QAAQ,aAAa,KAAM,MAAK,MACrC,KAAK,QAAQ,SAAS,KAAM,MAAK,MACjC,KAAK,QAAQ,cAAc,KAAM,MAAK,MACtC,KAAK,QAAQ,aAAa,KAAM,MAAK,MACrC,KAAK,QAAQ,KAAK,KAAM,MAAK,MAC7B,KAAK,QAAQ,UAAU,KAAM,MAAK,IAClC;AACA,eAAO;AAAA,MACR;AACD,UAAI,MAAM;AAER,cAAM,UAAU;AAAA,UACd,WAAW,KAAK;AAAA,UAChB,UAAU,KAAK;AAAA,UACf,UAAU,KAAK,QAAQ;AAAA,UACvB,MAAM,KAAK,QAAQ;AAAA,UACnB,WAAW,KAAK,QAAQ;AAAA,UACxB,QAAQ,GAAG,KAAK,QAAQ,aAAa,IAAI,KAAK,QAAQ,YAAY,GAAG,KAAK,QAAQ,QAAQ;AAAA,UAC1F,cAAc,KAAK,QAAQ;AAAA,UAC3B,SAAS,KAAK;AAAA,UACd,QAAQ,KAAK;AAAA,QACnB;AACI,cAAM,MAAM,SAAS,2BAA2B;AAAA,UAC9C;AAAA,UACA,YAAY;AAAA,UACZ;AAAA,QACN,CAAK;AACD,YAAI,KAAK,QAAQ,iBAAiB;AAChC,gBAAM,MAAM,SAAS,0BAA0B;AAAA,YAC7C;AAAA,YACA,YAAY;AAAA,YACZ;AAAA,UACR,CAAO;AAAA,QACF;AAAA,MACF;AAAA,IACH;AAEA,UAAM,yBAAyB,YAAY;AACzC,UAAI,OAAO;AAEX,UAAI,KAAK,QAAQ,QAAQ,KAAI,MAAO,MAAM,KAAK,QAAQ,OAAO,KAAI,MAAO,IAAI;AAC3E,eAAO;AAAA,MACR;AAED,UACE,KAAK,QAAQ,UAAU,KAAM,MAAK,MAClC,KAAK,QAAQ,SAAS,KAAM,MAAK,MACjC,KAAK,QAAQ,QAAQ,aAAa,KAAM,MAAK,MAC7C,KAAK,QAAQ,QAAQ,SAAS,KAAM,MAAK,MACzC,KAAK,QAAQ,QAAQ,cAAc,KAAM,MAAK,MAC9C,KAAK,QAAQ,QAAQ,aAAa,KAAM,MAAK,MAC7C,KAAK,QAAQ,QAAQ,KAAK,KAAM,MAAK,MACrC,KAAK,QAAQ,QAAQ,UAAU,KAAM,MAAK,IAC1C;AACA,eAAO;AAAA,MACR;AAED,UAAI,MAAM;AACR,cAAM,UAAU;AAAA,UACd,SAAS,KAAK,QAAQ;AAAA,UACtB,WAAW,KAAK,QAAQ;AAAA,UACxB,UAAU,KAAK,QAAQ;AAAA,UACvB,UAAU,KAAK,QAAQ,QAAQ;AAAA,UAC/B,MAAM,KAAK,QAAQ,QAAQ;AAAA,UAC3B,WAAW,KAAK,QAAQ,QAAQ;AAAA,UAChC,QAAQ,GAAG,KAAK,QAAQ,QAAQ,aAAa,IAAI,KAAK,QAAQ,QAAQ,YAAY,GAAG,KAAK,QAAQ,QAAQ,QAAQ;AAAA,UAClH,cAAc,KAAK,QAAQ,QAAQ;AAAA,QACzC;AAEI,gBAAQ,UAAU,KAAK;AACvB,gBAAQ,SAAS,KAAK;AAEtB,cAAM,MAAM,SAAS,0BAA0B;AAAA,UAC7C;AAAA,UACA;AAAA,QACN,CAAK;AAAA,MACF;AAAA,IACH;AAEA,UAAM,kBAAkB,MAAM;AAE5B,UAAI,KAAK,QAAQ,KAAI,MAAO,IAAI;AAC9B,aAAK,eAAe;AACpB,aAAK,eAAe,EAAE,uBAAuB;AAAA,MACjD,OAAS;AACL,aAAK,eAAe;AAAA,MACrB;AAAA,IAIH;AAEA,UAAM,oBAAoB,MAAM;AAC9B,UAAI,KAAK,UAAU,KAAI,MAAO,IAAI;AAChC,aAAK,iBAAiB;AACtB,aAAK,iBAAiB,EAAE,oBAAoB;AAAA,MAChD,OAAS;AACL,aAAK,iBAAiB;AAAA,MACvB;AAAA,IACH;AAEA,UAAM,mBAAmB,MAAM;AAC7B,UAAI,KAAK,SAAS,KAAI,MAAO,IAAI;AAC/B,aAAK,gBAAgB;AACrB,aAAK,gBAAgB,EAAE,mBAAmB;AAAA,MAC9C,OAAS;AACL,aAAK,gBAAgB;AAAA,MACtB;AAAA,IACH;AAeA,UAAM,iBAAiB,MAAM;AAC3B,UAAI,KAAK,QAAQ,cAAc,KAAI,MAAO,IAAI;AAC5C,aAAK,QAAQ,qBAAqB;AAClC,aAAK,QAAQ,qBAAqB,EAAE,iBAAiB;AAAA,MACzD,OAAS;AACL,aAAK,QAAQ,qBAAqB;AAAA,MACnC;AAAA,IACH;AAEA,UAAM,sBAAsB,MAAM;AAChC,UAAI,KAAK,QAAQ,aAAa,KAAI,MAAO,IAAI;AAC3C,aAAK,QAAQ,oBAAoB;AACjC,aAAK,QAAQ,oBAAoB,EAAE,uBAAuB;AAAA,MAC9D,OAAS;AACL,aAAK,QAAQ,oBAAoB;AAAA,MAClC;AAAA,IACH;AAEA,UAAM,eAAe,MAAM;AACzB,UAAI,KAAK,QAAQ,KAAK,KAAI,MAAO,IAAI;AACnC,aAAK,QAAQ,YAAY;AACzB,aAAK,QAAQ,YAAY,EAAE,eAAe;AAAA,MAC9C,OAAS;AACL,aAAK,QAAQ,YAAY;AAAA,MAC1B;AAAA,IACH;AAEA,UAAM,gBAAgB,MAAM;AAC1B,UAAI,KAAK,QAAQ,UAAU,KAAI,MAAO,IAAI;AACxC,aAAK,QAAQ,iBAAiB;AAC9B,aAAK,QAAQ,iBAAiB,EAAE,gBAAgB;AAAA,MACpD,OAAS;AACL,aAAK,QAAQ,iBAAiB;AAAA,MAC/B;AAAA,IACH;AAEA,UAAM,mBAAmB,MAAM;AAC7B,UAAI,KAAK,QAAQ,SAAS,KAAI,MAAO,IAAI;AACvC,aAAK,QAAQ,gBAAgB;AAC7B,aAAK,QAAQ,gBAAgB,EAAE,mBAAmB;AAAA,MACtD,OAAS;AACL,aAAK,QAAQ,gBAAgB;AAAA,MAC9B;AAAA,IACH;AAEA,UAAM,qBAAqB,YAAY;AAErC,UAAI,KAAK,QAAQ,UAAU,IAAI;AAC7B,YAAI,KAAK,QAAQ,OAAO,UAAU,GAAG,CAAC,EAAE,YAAa,MAAK,KAAK,QAAQ,QAAQ,cAAc;AAC3F,gBAAM,SAAS,MAAM,kBAAkB,KAAK,QAAQ,MAAM;AAC1D,cAAI,OAAO,UAAU;AACnB,oCAAwB,QAAQ;AAChC,iBAAK,QAAQ,cAAc;AAAA,UACnC,OAAa;AACL,oCAAwB,QAAQ;AAChC,iBAAK,QAAQ,cAAc;AAC3B,iBAAK,QAAQ,cAAc,EAAE,gBAAgB;AAAA,UAC9C;AAAA,QACP,OAAW;AACL,kCAAwB,QAAQ;AAChC,eAAK,QAAQ,cAAc;AAC3B,eAAK,QAAQ,cAAc,EAAE,sBAAsB;AAAA,QACpD;AAAA,MACL,OAAS;AACL,aAAK,QAAQ,cAAc;AAC3B,aAAK,QAAQ,cAAc;AAAA,MAC5B;AAAA,IAKH;AAEA,UAAM,yBAAyB,MAAM;AAEnC,UAAI,KAAK,QAAQ,QAAQ,KAAI,MAAO,IAAI;AACtC,aAAK,QAAQ,eAAe;AAC5B,aAAK,QAAQ,eAAe,EAAE,uBAAuB;AAAA,MACzD,OAAS;AACL,aAAK,QAAQ,eAAe;AAAA,MAC7B;AAAA,IAIH;AAEA,UAAM,2BAA2B,MAAM;AACrC,UAAI,KAAK,QAAQ,UAAU,KAAI,MAAO,IAAI;AACxC,aAAK,QAAQ,iBAAiB;AAC9B,aAAK,QAAQ,iBAAiB,EAAE,oBAAoB;AAAA,MACxD,OAAS;AACL,aAAK,QAAQ,iBAAiB;AAAA,MAC/B;AAAA,IACH;AAEA,UAAM,0BAA0B,MAAM;AACpC,UAAI,KAAK,QAAQ,SAAS,KAAI,MAAO,IAAI;AACvC,aAAK,QAAQ,gBAAgB;AAC7B,aAAK,QAAQ,gBAAgB,EAAE,mBAAmB;AAAA,MACtD,OAAS;AACL,aAAK,QAAQ,gBAAgB;AAAA,MAC9B;AAAA,IACH;AAeA,UAAM,wBAAwB,MAAM;AAClC,UAAI,KAAK,QAAQ,QAAQ,cAAc,KAAM,MAAK,IAAI;AACpD,aAAK,QAAQ,QAAQ,qBAAqB;AAC1C,aAAK,QAAQ,QAAQ,qBAAqB,EAAE,iBAAiB;AAAA,MACjE,OAAS;AACL,aAAK,QAAQ,QAAQ,qBAAqB;AAAA,MAC3C;AAAA,IACH;AAEA,UAAM,6BAA6B,MAAM;AACvC,UAAI,KAAK,QAAQ,QAAQ,aAAa,KAAM,MAAK,IAAI;AACnD,aAAK,QAAQ,QAAQ,oBAAoB;AACzC,aAAK,QAAQ,QAAQ,oBAAoB,EAAE,uBAAuB;AAAA,MACtE,OAAS;AACL,aAAK,QAAQ,QAAQ,oBAAoB;AAAA,MAC1C;AAAA,IACH;AAEA,UAAM,sBAAsB,MAAM;AAChC,UAAI,KAAK,QAAQ,QAAQ,KAAK,KAAM,MAAK,IAAI;AAC3C,aAAK,QAAQ,QAAQ,YAAY;AACjC,aAAK,QAAQ,QAAQ,YAAY,EAAE,eAAe;AAAA,MACtD,OAAS;AACL,aAAK,QAAQ,QAAQ,YAAY;AAAA,MAClC;AAAA,IACH;AAEA,UAAM,uBAAuB,MAAM;AACjC,UAAI,KAAK,QAAQ,QAAQ,UAAU,KAAM,MAAK,IAAI;AAChD,aAAK,QAAQ,QAAQ,iBAAiB;AACtC,aAAK,QAAQ,QAAQ,iBAAiB,EAAE,gBAAgB;AAAA,MAC5D,OAAS;AACL,aAAK,QAAQ,QAAQ,iBAAiB;AAAA,MACvC;AAAA,IACH;AAEA,UAAM,0BAA0B,MAAM;AACpC,UAAI,KAAK,QAAQ,QAAQ,SAAS,KAAM,MAAK,IAAI;AAC/C,aAAK,QAAQ,QAAQ,gBAAgB;AACrC,aAAK,QAAQ,QAAQ,gBAAgB,EAAE,mBAAmB;AAAA,MAC9D,OAAS;AACL,aAAK,QAAQ,QAAQ,gBAAgB;AAAA,MACtC;AAAA,IACH;AAEA,UAAM,8BAA8B,YAAY;AAC9C,uBAAiB,QAAQ;AACzB,UAAI,CAAC,gBAAgB,OAAO;AAC1B,cAAM,OAAO,MAAM,iBAAiB,KAAK,QAAQ,UAAU,KAAK,QAAQ,YAAY;AACpF,YAAI,KAAK,WAAW,GAAG;AACrB,gBAAM,OAAO,KAAK,CAAC;AACnB,cAAI,UAAU,GAAG,KAAK,MAAM,IAAI,KAAK,MAAM;AAC3C,eAAK,QAAQ,gBAAgB,KAAK;AAClC,eAAK,QAAQ,qBAAqB;AAElC,cAAI,KAAK,QAAQ;AACf,iBAAK,QAAQ,WAAW,KAAK;AAC7B,uBAAW,KAAK;AAAA,UACxB,OAAa;AACL,iBAAK,QAAQ,WAAW;AAAA,UACzB;AAED,qBAAW,KAAK,KAAK,QAAQ,IAAI,KAAK,IAAI;AAC1C,eAAK,QAAQ,OAAO,KAAK;AACzB,eAAK,QAAQ,YAAY;AAEzB,uBAAa,QAAQ;AACrB;QACN,WAAe,KAAK,WAAW,GAAG;AAC5B,eAAK,QAAQ,OAAO;AACpB,eAAK,QAAQ,YAAY;AACzB,eAAK,QAAQ,gBAAgB;AAC7B,eAAK,QAAQ,qBAAqB;AAClC,uBAAa,QAAQ,EAAE,oBAAoB;AAAA,QACjD,OAAW;AACL,yBAAe,QAAQ,KAAK,IAAI,CAAC,SAAS;AACxC,gBAAI,UAAU,GAAG,KAAK,MAAM,IAAI,KAAK,MAAM;AAC3C,gBAAI,KAAK,QAAQ;AACf,yBAAW,KAAK;AAAA,YACjB;AACD,uBAAW,KAAK,KAAK,QAAQ,IAAI,KAAK,IAAI;AAC1C,6BAAiB,QAAQ;AACzB,mBAAO,EAAE,GAAG,MAAM,MAAM,QAAO;AAAA,UACvC,CAAO;AAAA,QACF;AAAA,MACL,OAAS;AACL,aAAK,QAAQ,gBAAgB,KAAK,QAAQ,aAAa;AACvD,aAAK,QAAQ,gBAAgB,KAAK,QAAQ,aAAa,KAAK,EAAE,mBAAmB,IAAI;AAAA,MACtF;AACD,uBAAiB,QAAQ;AAAA,IAC3B;AAEA,UAAM,qCAAqC,YAAY;AACrD,8BAAwB,QAAQ;AAChC,UAAI,CAAC,gBAAgB,OAAO;AAC1B,cAAM,OAAO,MAAM;AAAA,UACjB,KAAK,QAAQ,QAAQ;AAAA,UACrB,KAAK,QAAQ,QAAQ;AAAA,QAC3B;AAEI,YAAI,KAAK,WAAW,GAAG;AACrB,gBAAM,OAAO,KAAK,CAAC;AACnB,cAAI,UAAU,GAAG,KAAK,MAAM,IAAI,KAAK,MAAM;AAC3C,eAAK,QAAQ,QAAQ,gBAAgB,KAAK;AAC1C,eAAK,QAAQ,QAAQ,qBAAqB;AAE1C,cAAI,KAAK,QAAQ;AACf,iBAAK,QAAQ,QAAQ,WAAW,KAAK;AACrC,uBAAW,KAAK;AAAA,UACxB,OAAa;AACL,iBAAK,QAAQ,QAAQ,WAAW;AAAA,UACjC;AAED,qBAAW,KAAK,KAAK,QAAQ,IAAI,KAAK,IAAI;AAC1C,eAAK,QAAQ,QAAQ,OAAO,KAAK;AACjC,eAAK,QAAQ,QAAQ,YAAY;AAEjC,8BAAoB,QAAQ;AAC5B;QACN,WAAe,KAAK,WAAW,GAAG;AAC5B,eAAK,QAAQ,QAAQ,OAAO;AAC5B,eAAK,QAAQ,QAAQ,YAAY;AACjC,eAAK,QAAQ,QAAQ,gBAAgB;AACrC,eAAK,QAAQ,QAAQ,qBAAqB;AAC1C,8BAAoB,QAAQ,EAAE,oBAAoB;AAAA,QACxD,OAAW;AACL,gCAAsB,QAAQ,KAAK,IAAI,CAAC,SAAS;AAC/C,gBAAI,UAAU,GAAG,KAAK,MAAM,IAAI,KAAK,MAAM;AAC3C,gBAAI,KAAK,QAAQ;AACf,yBAAW,KAAK;AAAA,YACjB;AACD,uBAAW,KAAK,KAAK,QAAQ,IAAI,KAAK,IAAI;AAC1C,oCAAwB,QAAQ;AAChC,mBAAO,EAAE,GAAG,MAAM,MAAM,QAAO;AAAA,UACvC,CAAO;AAAA,QACF;AAAA,MACL,OAAS;AACL,aAAK,QAAQ,QAAQ,gBAAgB,KAAK,QAAQ,QAAQ,aAAa;AACvE,aAAK,QAAQ,QAAQ,gBACnB,KAAK,QAAQ,QAAQ,aAAa,KAAK,EAAE,mBAAmB,IAAI;AAAA,MACnE;AACD,8BAAwB,QAAQ;AAAA,IAClC;AAEA,UAAM,gBAAgB,OAAO,OAAO;AAClC,UAAI,OAAO,0BAA0B,MAAO;AAC5C,YAAM,OAAO,yCAAyC,IAAI;AAC1D,YAAM,MAAM,SAAS,+BAA+B,EAAE,IAAI,MAAK,CAAE;AACjE,UAAI,KAAK,QAAQ,iBAAiB;AAChC,cAAM,MAAM,SAAS,8BAA8B,EAAE,IAAI,MAAK,CAAE;AAAA,MACjE;AACD,YAAM,OAAO,yCAAyC,KAAK;AAAA,IAC7D;AAMA,UAAM,SAAS,CAAC,WAAW;AAEzB;AAEwC;AACtC,wBAAgB,QAAQ,CAACC,YAAO,oBAAoB,UAAU,SAAS,MAAM;AAAA,MAG9E;AAAA,IACH,CAAC;AAED;AAAA,MAAM,KAAK;AAAA,MAAS,MAAM;AACxB,YAAI,KAAK,iBAAiB,MAAM;AAC9B,uBAAa,KAAK,YAAY;AAAA,QAC/B;AACD,aAAK,eAAe,WAAW,MAAM,gBAAiB,GAAE,GAAI;AAAA,MAC9D;AAAA,IACA;AAEA;AAAA,MACE,MAAM,KAAK,QAAQ;AAAA,MACnB,MAAM;AACJ,YAAI,KAAK,wBAAwB,MAAM;AACrC,uBAAa,KAAK,mBAAmB;AAAA,QACtC;AACD,aAAK,sBAAsB,WAAW,MAAM,uBAAwB,GAAE,GAAI;AAAA,MAC3E;AAAA,IACH;AAEA,UAAM,gBAAgB,CAAC,WAAW;AAEhC;AAGwC;AACtC,+BAAuB,QAAQ,CAACA,YAAO,oBAAoB,UAAU,SAAS,MAAM;AAAA,MAGrF;AAAA,IACH,CAAC;AAED,UAAM,WAAW,MAAM;AACc;AACjC,YAAI,KAAK,gBAAgB,MAAM;AAC7B,uBAAa,KAAK,WAAW;AAAA,QAC9B;AACD,aAAK,cAAc,WAAW,MAAM,YAAa,GAAE,GAAI;AAAA,MACxD;AAAA,IACH,CAAC;AAED,UAAM,kBAAkB,MAAM;AACO;AACjC,YAAI,KAAK,QAAQ,gBAAgB,MAAM;AACrC,uBAAa,KAAK,QAAQ,WAAW;AAAA,QACtC;AACD,aAAK,QAAQ,cAAc,WAAW,MAAM,mBAAkB,GAAI,GAAI;AAAA,MACvE;AAAA,IACH,CAAC;AAED,UAAM,qBAAqB,CAAC,WAAW;AACrC,UAAI,CAAC,gBAAgB,OAAO;AAC1B,YAAI,UAAU,UAAU,MAAM;AAC5B,uBAAa,UAAU,KAAK;AAAA,QAC7B;AACD,YAAI,aAAa,UAAU,IAAI;AAC7B,uBAAa,QAAQ;AAAA,QACtB;AACD,YAAI,eAAe,MAAM,SAAS,GAAG;AACnC,yBAAe,QAAQ;QACxB;AACD,cAAM,CAAC,aAAa,cAAc,IAAI,OAAO,MAAM,GAAG;AACtD,YAAI,eAAe,gBAAgB;AACjC,oBAAU,QAAQ,WAAW,MAAM,4BAA6B,GAAE,GAAI;AAAA,QACvE;AAAA,MACF;AAAA,IACH,CAAC;AAED,UAAM,4BAA4B,CAAC,WAAW;AAC5C,UAAI,CAAC,uBAAuB,OAAO;AACjC,YAAI,UAAU,UAAU,MAAM;AAC5B,uBAAa,UAAU,KAAK;AAAA,QAC7B;AACD,YAAI,oBAAoB,UAAU,IAAI;AACpC,8BAAoB,QAAQ;AAAA,QAC7B;AACD,YAAI,sBAAsB,MAAM,SAAS,GAAG;AAC1C,gCAAsB,QAAQ;QAC/B;AACD,cAAM,CAAC,aAAa,cAAc,IAAI,OAAO,MAAM,GAAG;AACtD,YAAI,eAAe,gBAAgB;AACjC,oBAAU,QAAQ,WAAW,MAAM,mCAAoC,GAAE,GAAI;AAAA,QAC9E;AAAA,MACF;AAAA,IACH,CAAC;AACD,UAAM,iBAAiB,CAAC,WAAW;AACjC,WAAK,QAAQ,gBAAgB,eAAe,MAAM,MAAM,EAAE;AAC1D,WAAK,QAAQ,WAAW,eAAe,MAAM,MAAM,EAAE,UAAU;AAC/D,WAAK,QAAQ,OAAO,eAAe,MAAM,MAAM,EAAE;AACjD;IACF,CAAC;AAED,UAAM,wBAAwB,CAAC,WAAW;AACxC,WAAK,QAAQ,QAAQ,gBAAgB,sBAAsB,MAAM,MAAM,EAAE;AACzE,WAAK,QAAQ,QAAQ,WAAW,sBAAsB,MAAM,MAAM,EAAE,UAAU;AAC9E,WAAK,QAAQ,QAAQ,OAAO,sBAAsB,MAAM,MAAM,EAAE;AAChE;IACF,CAAC;AACD;AAAA,MACE,MAAM,KAAK;AAAA,MACX,MAAM;AACJ,YAAI,KAAK,eAAe,MAAM;AAC5B,uBAAa,KAAK,UAAU;AAAA,QAC7B;AACD,aAAK,aAAa,WAAW,MAAM,cAAe,GAAE,GAAI;AAAA,MACzD;AAAA,IACH;AAEA,cAAU,MAAM;AAC8C;AAC1D,aAAK,QAAQ,eAAeA,YAAO,UAAU;AAC7C,aAAK,QAAQ,QAAQ,eAAeA,YAAO,UAAU;AAAA,MACtD;AAWD,UAAI,gBAAgB,UAAU,QAAQ,KAAK,SAAS,KAAK,MAAM,kBAAkB;AAC/E,sBAAc,KAAK,MAAM,gBAAgB;AAAA,MAC1C;AAAA,IACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxhCD,UAAM,WAAW,IAAI,KAAK;AAE1B,cAAU,MAAM;AACd,eAAS,QAAQ;AAAA,IACnB,CAAC;AAGD,UAAM,OAAO;AACb,UAAM,SAAS,UAAS;AACxB,UAAM,QAAQ,SAAQ;AACtB,UAAM,EAAE,EAAC,IAAK;AACd,UAAM,MAAM,OAAM;AAClB,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,YAAW;AAEf,UAAM,mBAAmB,IAAI,CAAA,CAAE;AAC/B,UAAM,yBAAyB,IAAI,IAAI;AACvC,UAAM,iBAAiB,IAAI,IAAI;AAC/B,UAAM,iBAAiB,IAAI,IAAI;AAC/B,UAAM,qBAAqB,IAAI,KAAK;AACpC,UAAM,yBAAyB,IAAI,IAAI;AACpB,QAAI,EAAE;AACzB,UAAM,sBAAsB,IAAI,KAAK;AACrC,UAAM,gBAAgB,IAAI,KAAK;AACf,QAAIA,YAAO,OAAO;AAGlC,UAAM,aAAa,IAAI,KAAK;AAGL,aAAS,MAAM;AACpC,UAAI,QAAQ,EAAE,iBAAiB,EAAE,UAAU,UAAU,MAAK,CAAE;AAC5D,aAAO,MAAM,QAAQ,SAAS,GAAG,EAAE,QAAQ,SAAS,GAAG;AAAA,IACzD,CAAC;AACD,UAAM,aAAa,SAAS,MAAM,MAAM,QAAQ,oBAAoB,CAAC;AACrE,UAAM,OAAO,SAAS,MAAM,MAAM,QAAQ,qBAAqB,CAAC;AAChE,UAAM,iBAAiB,SAAS,MAAM,MAAM,QAAQ,wBAAwB,CAAC;AAC7E,UAAM,kBAAkB,SAAS,OAAO,EAAE,GAAG,MAAM,QAAQ,yBAAyB,EAAG,EAAC;AACxF,UAAM,kBAAkB,SAAS,MAAM;AACrC,UAAI,UAAU,CAAC,GAAG,MAAM,QAAQ,yBAAyB,CAAC;AAC1D,UAAI,QAAQ,SAAS,GAAG;AACtB,cAAM,YAAY,QAAQ,UAAU,CAAC,WAAW,OAAO,iBAAiB,SAAS;AACjF,gBAAQ,KAAK,QAAQ,OAAO,WAAW,CAAC,EAAE,CAAC,CAAC;AAAA,MAC7C;AACD,aAAO;AAAA,IACT,CAAC;AACD,UAAM,uBAAuB,SAAS,MAAM,MAAM,QAAQ,8BAA8B,CAAC;AACzF,UAAM,wBAAwB,SAAS;AAAA,MACrC,MAAM;AACJ,eAAO,MAAM,QAAQ,uBAAuB;AAAA,MAC7C;AAAA,MACD,IAAI,QAAQ;AACV,2BAAmB,EAAE,SAAS,OAAM,CAAE;AACtC,cAAM,OAAO,yBAAyB,QAAQ,KAAK;AACnD,YAAI,WAAW,SAAS,KAAK;AAE3B,cAAI,OAAO,MAAM,QAAQ,mBAAmB,EAAE,IAAI,CAAC,UAAU;AAAA,YAC3D,IAAI,KAAK,QAAQ;AAAA,YACjB,MAAM,KAAK,QAAQ;AAAA,YACnB,UAAU,KAAK;AAAA,UAChB,EAAC;AACF,cAAI,WAAW,YAAY;AAAA,YACzB,OAAO;AAAA,YACP,WAAW;AAAA,cACT,UAAU;AAAA,gBACR,aAAa,EAAE,MAAM,GAAG,QAAQ,QAAQ,QAAQ,WAAY;AAAA,gBAC5D,UAAU;AAAA,cACX;AAAA,YACF;AAAA,UACT,CAAO;AAAA,QACF;AAAA,MACF;AAAA,IACH,CAAC;AAYD,UAAM,kBAAkB,SAAS,MAAM;AACrC,UAAI,YAAY,CAAC,GAAG,MAAM,QAAQ,yBAAyB,CAAC;AAC5D,kBAAY,UAAU,IAAI,CAAC,aAAa;AACtC,YAAI,SAAS,KAAK,WAAW,eAAe,EAAG,QAAO;AACtD,eAAO;AAAA,UACL,GAAG;AAAA,UACH,MAAM,iBAAiB,SAAS,IAAI;AAAA,UACpC,OAAO,SAAS;AAAA,QACtB;AAAA,MACA,CAAG;AAED,UAAI,eAAe,CAAA;AACnB,UAAI,UAAUA,YAAO;AACrB,cAAQ,QAAQ,CAAC,SAAS;AACxB,cAAM,QAAQ,UAAU;AAAA,UACtB,CAAC,aAAa,SAAS,qBAAqB,YAAa,KAAI,KAAK,YAAa;AAAA,QACrF;AACI,YAAI,QAAQ,GAAI,cAAa,KAAK,UAAU,OAAO,OAAO,CAAC,EAAE,CAAC,CAAC;AAAA,MACnE,CAAG;AAED,qBAAe,CAAC,GAAG,cAAc,GAAG,SAAS;AAE7C,aAAO;AAAA,IACT,CAAC;AAED,UAAM,qBAAqB,SAAS,MAAM;AACxC,UAAI,eAAe,SAAS,eAAe,MAAM,SAAS,GAAG;AAC3D,eAAO,gBAAgB,MAAM,KAAK,CAAC,QAAQ,IAAI,yBAAyB,KAAK,cAAc,EACxF;AAAA,MACP,OAAS;AACL,eAAO;AAAA,MACR;AAAA,IACH,CAAC;AAED,UAAM,sBAAsB,SAAS,MAAM;AACzC,UAAI,eAAe,SAAS,eAAe,MAAM,SAAS,GAAG;AAC3D,cAAM,MAAM,gBAAgB,MAAM;AAAA,UAChC,CAACC,SAAQA,KAAI,yBAAyB,eAAe;AAAA,QAC3D;AACI,eAAO,MAAM,IAAI,QAAQ;AAAA,MAC1B;AACD,aAAO;AAAA,IACT,CAAC;AAED,UAAM,4BAA4B,SAAS,MAAM;AAC/C,aAAO,MAAM,QAAQ,wBAAwB;AAAA,IAC/C,CAAC;AAED,UAAM,iBAAiB,SAAS;AAAA,MAC9B,MAAM;AACJ,eAAO,MAAM,QAAQ,wBAAwB;AAAA,MAC9C;AAAA,MACD,IAAIC,iBAAgB;AAClB,eAAOA;AAAA,MACR;AAAA,IACH,CAAC;AAE0B,aAAS,MAAM,MAAM,QAAQ,4BAA4B,CAAC;AACrF,UAAM,wBAAwB,SAAS;AAAA,MACrC,MAAM;AACJ,eAAO,sBAAsB,UAAU,uBACnC,kBACA;AAAA,MACL;AAAA,MACD,MAAM;AAAA,MAAG;AAAA,IACX,CAAC;AAED,UAAM,mBAAmB,SAAS;AAAA,MAChC,MAAM;AACJ,eAAO,sBAAsB,SAAS,wBAClC,kBACA;AAAA,MACL;AAAA,MACD,MAAM;AAAA,MAAG;AAAA,IACX,CAAC;AAGD,UAAM,oBAAoB,MAAM;AAC9B;IACF,CAAC;AAGD;AAAA,MACE,MAAM,eAAe;AAAA,MACrB,OAAO,SAAS;AACd,cAAM,WAAW,MAAM,MAAM,SAAS,0BAA0B,EAAE,MAAM,MAAK,CAAE;AAC/E,YAAI,UAAU;AACZ,gBAAM,YAAY,uBAAuB,MAAM,MAAM,GAAG;AACxD,gBAAM,MAAM,SAAS,0BAA0B;AAAA,YAC7C,SAAS,UAAU,CAAC;AAAA,YACpB,QAAQ,UAAU,CAAC;AAAA,YACnB;AAAA,UACR,CAAO;AACD,iCAAuB,QAAQ,MAAM,MAAM,QAAQ,yBAAyB;AAC5E,6BAAmB;AAAA,YACjB,UAAU,uBAAuB;AAAA,YACjC,UAAU;AAAA,UAClB,CAAO;AACD,eAAK,qBAAqB,KAAK;AAAA,QAChC;AAAA,MACF;AAAA,IACH;AAGA,UAAM,wBAAwB,CAAC,WAAW;AACxC,YAAM,CAAC,cAAc,WAAW,IAAI,OAAO,MAAM,GAAG;AAEpD,UAAI,iBAAiB,aAAa,gBAAgB,UAAU;AAC1D,2BAAmB,QAAQ;AAAA,MAC/B,OAAS;AACL,2BAAmB;AAAA,UACjB,UAAU,uBAAuB;AAAA,UACjC,UAAU;AAAA,QAChB,CAAK;AACD,2BAAmB,QAAQ;AAC3B,cAAM,SAAS,0BAA0B;AAAA,UACvC,SAAS;AAAA,UACT,QAAQ;AAAA,UACR;AAAA,QACN,CAAK;AAED,YAAI,WAAW,SAAS,KAAK;AAC3B,cAAI,OAAO,CAAA;AACX,oBAAU,MAAM,QAAQ,CAAC,YAAY;AACnC,iBAAK,KAAK;AAAA,cACR,IAAI,QAAQ,QAAQ;AAAA,cACpB,MAAM,QAAQ,QAAQ;AAAA,cACtB,UAAU,QAAQ;AAAA,YAC5B,CAAS;AAAA,UACT,CAAO;AAED,iBAAO,UAAU,KAAK;AAAA,YACpB,OAAO;AAAA,YACP,WAAW;AAAA,cACT,UAAU;AAAA,gBACR,aAAa;AAAA,kBACX,MAAM;AAAA,kBACN,QAAQ;AAAA,kBACR,QAAQ;AAAA,gBACT;AAAA,gBACD,UAAU;AAAA,cACX;AAAA,YACF;AAAA,UACT,CAAO;AAAA,QACF;AAAA,MACF;AAAA,IACH,CAAC;AAGD,UAAM,qBAAqB,MAAM;AAC/B,yBAAmB,EAAE,YAAY,oBAAoB,MAAO,CAAA;AAAA,IAC9D,CAAC;AAGD;AAAA,MACE,MAAM;AAAA,MACN,CAAC,WAAW;AACV,YAAI,UAAU,OAAO,sBAAsB,CAAC,OAAO,mBAAmB,WAAW;AAC/E,cAAI,iBAAiB,MAAM,QAAQ;AACjC,oCAAwB,sBAAsB,aAAa,iBAAiB,MAAM,MAAM;AAAA,UACzF;AAAA,QACF;AAAA,MACF;AAAA,IACH;AAGA,aAAS,UAAU;AACjB,uBAAiB,QAAQ,KAAK,MAAM,aAAa,QAAQ,iBAAiB,CAAC,KAAK;AAChF,UAAI,iBAAiB,MAAM;AACzB,+BAAuB,QAAQ,iBAAiB,MAAM;AACxD,UAAI,iBAAiB,MAAM,UAAU;AACnC,uBAAe,QAAQ,iBAAiB,MAAM;AAC9C,2BAAmB,QAAQ;AAC3B,+BAAuB,QAAQ,iBAAiB,MAAM;AAAA,MACvD;AACD,UAAI,iBAAiB,MAAM,QAAS,uBAAsB,QAAQ,iBAAiB,MAAM;AACzF,qBAAe,QAAQ,iBAAiB,MAAM,UAAU;AACxD,0BAAoB,QAAQ,iBAAiB,MAAM,cAAc;AAAA,IACnE;AAGA,aAAS,eAAe,QAAQ;AAC9B,YAAM,YAAY,IAAI,KAAK,aAAa,SAAS;AAAA,QAC/C,OAAO;AAAA,QACP,UAAU;AAAA,MACd,CAAG;AACD,aAAO,UAAU,OAAO,MAAM;AAAA,IAChC;AAGA,mBAAe,aAAa;AAC1B,oBAAc,QAAQ;AACtB;AACA,UAAI,YAAW,GAAI;AACjB,sBAAc,QAAQ;AACtB,YAAI,sBAAsB,UAAU,sBAAsB;AACxD,gBAAM,OAAO,uCAAuC;AAAA,YAClD,KAAK,sBAAsB;AAAA,YAC3B,KAAK;AAAA,YACL,OAAO,eAAe;AAAA,UAC9B,CAAO;AAAA,QACF;AACD,cAAM,SAAS,MAAM,MAAM,SAAS,yBAAyB,KAAK;AAClE,YAAI,WAAW,OAAO;AACpB,uBAAa,WAAW,WAAW;AACnC,cAAI,OAAO,MAAM,MAAM;AACrB,yBAAa,QAAQ,aAAa,OAAO,MAAM,IAAI;AAAA,UACpD;AACD,gBAAM,MAAM,OAAO,aAAa,QAAQF,YAAO,SAAS,EAAE;AAC1D,cAAI,WAAW,UAAU,MAAM;AAC7B,kBAAM,SAAS,mBAAmB,EAAE,MAAM,GAAG,SAAS,IAAI,QAAQ,IAAI,MAAO,CAAA;AAAA,UAC9E;AACD,cAAI,IAAI,SAAS,UAAU,GAAG;AAC5B,mBAAO,WAAW;AAAA,UAC1B,OAAa;AACL,kBAAM,SAAS,iBAAiB,EAAE,MAAO,CAAA;AACzC,mBAAO,KAAK;AAAA,cACV,MAAM,GAAG,GAAG,kBAAkB,OAAO,MAAM,YAAY;AAAA,cACvD,QAAQ,EAAE,MAAM,OAAO,MAAM,KAAM;AAAA,YAC7C,CAAS;AAAA,UACF;AAAA,QACF;AAAA,MAEF,OACI;AACH,sBAAc,QAAQ;AAAA,MACvB;AAAA,IACH;AAuBA,aAAS,wBAAwB,eAAe,YAAY,WAAW;AACrE,UAAI,eAAe;AACjB,2BAAmB;AAAA,UACjB,SAAS;AAAA,UACT,QAAQ;AAAA,QACd,CAAK;AACD,cAAM,OAAO,uCAAuC;AAAA,UAClD,KAAK;AAAA,UACL,KAAK;AAAA,UACL,OAAO;AAAA,QACb,CAAK;AAAA,MACF;AAAA,IACH;AAEA,aAAS,mBAAmB,MAAM;AAChC,4BAAsB,QAAQ,SAAS,uBAAuB,kBAAkB;AAChF,uBAAiB,QAAQ,SAAS,wBAAwB,kBAAkB;AAAA,IAG9E;AAOA,aAAS,oBAAoB;AAC3B,UAAI,CAAC,mBAAmB,OAAO;AAC7B,uBAAe,QAAQ,gBAAgB;AAAA,MAC3C,WAAa,KAAK,MAAM,WAAW;AAC/B,cAAM,kBAAkB,KAAK,MAAM;AACnC,cAAM,UAAU,KAAK,MAAM,UAAU,KAAK,CAAC,QAAQ,IAAI,OAAO,eAAe;AAC7E,uBAAe,QAAQ,WAAW,gBAAgB;AAAA,MACtD,OAAS;AACL,uBAAe,QAAQ,gBAAgB;AAAA,MACxC;AAAA,IACH;AAQA,aAAS,mBAAmB,MAAM;AAChC,uBAAiB,QAAQ,EAAE,GAAG,iBAAiB,OAAO,GAAG;AACzD,mBAAa,QAAQ,mBAAmB,KAAK,UAAU,iBAAiB,KAAK,CAAC;AAAA,IAChF;AAQA,aAAS,cAAc;AACrB,YAAM,cAAc,CAAA;AACpB,YAAM,kBAAkB,MAAM,QAAQ,yBAAyB;AAC/D,iBAAW,YAAY,iBAAiB;AACtC,wBAAgB,QAAQ,EAAE,QAAQ,CAAC,UAAU;AAC3C,sBAAY,KAAK,KAAK;AAAA,QAC5B,CAAK;AAAA,MACF;AACD,UAAI,YAAY,SAAS,GAAG;AAC1B,cAAM,MAAM;AAAA,UACV,MAAM;AAAA,UACN,OAAO,EAAE,4BAA4B;AAAA,UACrC,MAAM,EAAE,qCAAqC;AAAA,YAC3C,QAAQ,YAAY,KAAK,IAAI;AAAA,UACrC,CAAO;AAAA,QACP;AACI,cAAM,SAAS,wBAAwB,EAAE,SAAS,IAAK,CAAA;AACvD,eAAO;AAAA,MACR;AACD,aAAO;AAAA,IACT;AAEA,aAAS,kBAAkB;AACzB,aAAO,cAAc,IAAI,YAAY,aAAa,CAAC;AAAA,IACrD;AAEA,aAAS,qBAAqB;AAC5B;AACA,YAAM,cAAc,CAAA;AACpB,UAAI,CAAC,eAAe,OAAO;AACzB,oBAAY,KAAK,EAAE,iBAAiB,CAAC;AAAA,MACtC;AAED,UAAI,CAAC,sBAAsB,SAAS,CAAC,qBAAqB,OAAO;AAC/D,oBAAY,KAAK,EAAE,gBAAgB,CAAC;AAAA,MACxC,WAAa,CAAC,sBAAsB,OAAO;AACvC,8BAAsB,QAAQ,qBAAqB;AAAA,MACpD;AAED,UAAI,sBAAsB,UAAU,sBAAsB;AACxD,YACE,CAAC,qBAAqB,MAAM,sBAC5B,CAAC,qBAAqB,MAAM,mBAAmB,WAC/C;AACA,sBAAY,KAAK,EAAE,MAAM,CAAC;AAAA,QAC3B;AAAA,MACF;AAED,UAAI,YAAY,SAAS,GAAG;AAC1B,cAAM,OAAO,2BAA2B;AAAA,UACtC,SAAS;AAAA,QACf,CAAK;AAAA,MACL,OAAS;AACL,cAAM,OAAO,2BAA2B;AAAA,UACtC,SAAS,CAAE;AAAA,QACjB,CAAK;AAAA,MACF;AAAA,IACH;AAEA,YAAQ;AAAA,MACN,OAAO,MAAM,EAAE,UAAU;AAAA,IAC3B,CAAC;AAED,cAAU,MAAM;AACd,iBAAW,QAAQ;AACnB,UAAI,KAAK;AACP,YAAI,OAAO,IAAI;AAAA,MAChB;AACD,YAAM,QAAQ,0BAA0B;AACxC,UAAI,OAAO;AACT,YAAI,MAAM,iBAAiB,aAAa,MAAM,gBAAgB,UAAU;AACtE,6BAAmB,QAAQ;AAAA,QAC5B;AACD,+BAAuB,QAAQ,GAAG,MAAM,YAAY,IAAI,MAAM,WAAW;AAAA,MAC1E;AACD;AACA,YAAM,SAAS,EAAE,SAAS,EAAE,UAAU,GAAG,QAAQ,CAAA;AACjD,YAAM,OAAO,mBAAmB,MAAM;AACtC,UAAI,OAAO,WAAW,OAAO;AAC3B,YAAI,OAAO,CAAA;AACX,kBAAU,MAAM,QAAQ,CAAC,YAAY;AACnC,cAAI,IAAI;AAAA,YACN,IAAI,QAAQ,QAAQ;AAAA,YACpB,MAAM,QAAQ,QAAQ;AAAA,YACtB,UAAU,QAAQ;AAAA,UAC1B;AACM,eAAK,KAAK,CAAC;AAAA,QACjB,CAAK;AACD,eAAO,UAAU,KAAK;AAAA,UACpB,OAAO;AAAA,UACP,WAAW;AAAA,YACT,UAAU;AAAA,cACR,aAAa;AAAA,gBACX,MAAM;AAAA,gBACN,QAAQ;AAAA,gBACR,QAAQ;AAAA,cACT;AAAA,cACD,UAAU;AAAA,YACX;AAAA,UACF;AAAA,QACP,CAAK;AAAA,MACF;AACD;IACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}