{"version":3,"file":"SubscribeSeparator-C3jKN2LH.js","sources":["../../../src/base/assets/email-icon.png","../../../core/composable/email.js","../../../src/base/core/components/SubscribeSeparator.vue"],"sourcesContent":["export default \"__VITE_ASSET__cR3fsE7g__\"","import { computed, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { useI18n } from \"vue-i18n\";\r\n\r\nexport function useNewsletter() {\r\n  const store = useStore();\r\n  const { t } = useI18n();\r\n  const emailReg =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,24}))$/;\r\n\r\n  const isLoggedIn = computed(() => store.getters[\"user/getIsLoggedIn\"]);\r\n\r\n  onMounted(async () => {\r\n    await store.dispatch(\"user/loadUser\", { store });\r\n  });\r\n\r\n  const subscribe = async (email) => {\r\n    let valid = true;\r\n    if (email === \"\") {\r\n      const msg = {\r\n        type: \"danger\",\r\n        title: t(\"newsletter_error\"),\r\n        text: t(\"email_is_required_field\"),\r\n      };\r\n      store.dispatch(\"messages/sendMessage\", { message: msg });\r\n      valid = false;\r\n    } else if (!emailReg.test(email)) {\r\n      const msg = {\r\n        type: \"danger\",\r\n        title: t(\"newsletter_error\"),\r\n        text: t(\"email_is_invalid_field\"),\r\n      };\r\n      store.dispatch(\"messages/sendMessage\", { message: msg });\r\n      valid = false;\r\n    }\r\n    if (valid) {\r\n      // let customEmailValidationArr = email.slice(email.indexOf(\"@\")).split(\".\");\r\n      // if (\r\n      //   customEmailValidationArr.length > 2 &&\r\n      //   customEmailValidationArr[customEmailValidationArr.length - 1] ===\r\n      //     customEmailValidationArr[customEmailValidationArr.length - 2]\r\n      // ) {\r\n      //   const msg = {\r\n      //     type: \"danger\",\r\n      //     title: t(\"newsletter_error\"),\r\n      //     text: t(\"email_is_invalid_field\"),\r\n      //   };\r\n      //   store.dispatch(\"messages/sendMessage\", { message: msg });\r\n      //   valid = false;\r\n      // } else {\r\n      const retval = await store.dispatch(\"user/newsletterSignup\", { email, store });\r\n      if (retval !== false) {\r\n        const msg = {\r\n          type: \"success\",\r\n          title: t(\"newsletter_success\"),\r\n          text: t(\"newsletter_subscribed\"),\r\n        };\r\n        store.dispatch(\"messages/sendMessage\", { message: msg });\r\n      }\r\n      // }\r\n    }\r\n  };\r\n\r\n  return {\r\n    isLoggedIn,\r\n    subscribe,\r\n  };\r\n}\r\n","<template>\r\n  <section class=\"subscribeSeparator text-light\">\r\n    <div class=\"container\">\r\n      <div\r\n        class=\"d-flex flex-column flex-lg-row align-items-center justify-content-center bg-dark px-20 px-md-10 pl-xl-20\"\r\n      >\r\n        <div class=\"d-flex align-items-center mb-15 mb-lg-0\">\r\n          <div class=\"icon ratio\">\r\n            <img src=\"@/base/assets/email-icon.png\" alt=\"email\" />\r\n          </div>\r\n          <div class=\"text-center\">\r\n            <span class=\"d-block\">{{ $t(\"newsletter_advantage\") }}</span>\r\n            <span class=\"d-block\">{{ $t(\"receive_newsletter\") }}</span>\r\n          </div>\r\n        </div>\r\n        <form class=\"subscribe-form d-flex align-items-center\">\r\n          <input\r\n            v-model=\"email\"\r\n            type=\"email\"\r\n            id=\"subscribe--email\"\r\n            :placeholder=\"$t('newsletter_placeholder')\"\r\n            class=\"text-dark\"\r\n            aria-label=\"Email\"\r\n          />\r\n          <button type=\"button\" @click=\"subscribe(email)\" class=\"btn subscribe-button\">\r\n            {{ $t(\"subscribe_newsletter\") }}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport { useNewsletter } from \"@storefront/core/composable/email\";\r\nconst { subscribe } = useNewsletter();\r\n\r\nconst email = ref(\"\");\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.subscribeSeparator .container .icon {\r\n  aspect-ratio: 2/1;\r\n}\r\n</style>\r\n"],"names":[],"mappings":";;;;;AAAA,MAAe,aAAA;ACIR,SAAS,gBAAgB;AAC9B,QAAM,QAAQ;AACd,QAAM,EAAE,MAAM;AACd,QAAM,WACJ;AAEF,QAAM,aAAa,SAAS,MAAM,MAAM,QAAQ,oBAAoB,CAAC;AAErE,YAAU,YAAY;AACpB,UAAM,MAAM,SAAS,iBAAiB,EAAE,MAAO,CAAA;AAAA,EACnD,CAAG;AAED,QAAM,YAAY,OAAO,UAAU;AACjC,QAAI,QAAQ;AACZ,QAAI,UAAU,IAAI;AAChB,YAAM,MAAM;AAAA,QACV,MAAM;AAAA,QACN,OAAO,EAAE,kBAAkB;AAAA,QAC3B,MAAM,EAAE,yBAAyB;AAAA,MACzC;AACM,YAAM,SAAS,wBAAwB,EAAE,SAAS,IAAK,CAAA;AACvD,cAAQ;AAAA,IACT,WAAU,CAAC,SAAS,KAAK,KAAK,GAAG;AAChC,YAAM,MAAM;AAAA,QACV,MAAM;AAAA,QACN,OAAO,EAAE,kBAAkB;AAAA,QAC3B,MAAM,EAAE,wBAAwB;AAAA,MACxC;AACM,YAAM,SAAS,wBAAwB,EAAE,SAAS,IAAK,CAAA;AACvD,cAAQ;AAAA,IACT;AACD,QAAI,OAAO;AAeT,YAAM,SAAS,MAAM,MAAM,SAAS,yBAAyB,EAAE,OAAO,MAAK,CAAE;AAC7E,UAAI,WAAW,OAAO;AACpB,cAAM,MAAM;AAAA,UACV,MAAM;AAAA,UACN,OAAO,EAAE,oBAAoB;AAAA,UAC7B,MAAM,EAAE,uBAAuB;AAAA,QACzC;AACQ,cAAM,SAAS,wBAAwB,EAAE,SAAS,IAAK,CAAA;AAAA,MACxD;AAAA,IAEF;AAAA,EACL;AAEE,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACJ;AACA;;;;;AC/BsB,kBAAgB;AAEtC,UAAM,QAAQ,IAAI,EAAE;;;;;;;;;;;;;"}