{"version":3,"file":"Contact-tahcCxKq.js","sources":["../../../src/esf_thehague_schinsleder/core/components/DynamicForms.vue","../../../src/esf_thehague_schinsleder/core/views/Contact.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"formValue.length && isClient\">\r\n    <b-modal id=\"modal-dynamic_form\" okVariant=\"success\" okTitle=\"Ok\" @ok=\"hide\">\r\n      <div v-html=\"msg\"></div>\r\n    </b-modal>\r\n\r\n    <h2 class=\"form-title\">{{ form?.title }}</h2>  \r\n    <div v-for=\"(set, idx) in form?.fieldsets\" :key=\"`set` + idx\">\r\n      <!-- <h3>{{ set.title }}</h3> -->\r\n      <div v-for=\"(field, index) of set.fields\" :key=\"`fields` + index\">\r\n        <div v-if=\"field.type == 'input'\">\r\n          <b-form-group class=\"account-inputs mb-10\" :id=\"`set` + idx + `field` + index + `group`\"\r\n            :label-for=\"`set` + idx + `field` + index\">\r\n            <b-form-input :id=\"`set` + idx + `field` + index\" :type=\"field.inputType\" :placeholder=\"field.label\"\r\n              :aria-describedby=\"`set` + idx + `field` + index + `feedback`\" v-model=\"formValue[idx][index]\"\r\n              :state=\"formState[idx][index]\"></b-form-input>\r\n            <b-form-invalid-feedback :id=\"`set` + idx + `field` + index + `feedback`\">{{ formError[idx][index] }}\r\n            </b-form-invalid-feedback>\r\n          </b-form-group>\r\n        </div>\r\n        <div v-else-if=\"field.type == 'select'\">\r\n          <b-form-group class=\"account-inputs mb-10\" :id=\"`set` + idx + `field` + index + `group`\"\r\n            :label-for=\"`set` + idx + `field` + index\">\r\n            <b-form-select :id=\"`set` + idx + `field` + index\" v-model=\"formValue[idx][index]\" \r\n              :aria-describedby=\"`set` + idx + `field` + index + `feedback`\" class=\"select\"\r\n              :state=\"formState[idx][index]\">\r\n              <b-form-select-option v-for=\"opt in field.options\" :key=\"opt\" :value=\"opt\">{{\r\n                opt\r\n              }}</b-form-select-option>\r\n            </b-form-select>\r\n            <b-form-invalid-feedback :id=\"`set` + idx + `field` + index + `feedback`\">{{ formError[idx][index] }}\r\n            </b-form-invalid-feedback>\r\n          </b-form-group>\r\n        </div>\r\n        <div v-else-if=\"field.type == 'textarea'\">\r\n          <b-form-group class=\"account-inputs mb-10\" :id=\"`set` + idx + `field` + index + `group`\"\r\n            :label-for=\"`set` + idx + `field` + index\">\r\n            <b-form-textarea :id=\"`set` + idx + `field` + index\" :placeholder=\"field.label\"\r\n              :aria-describedby=\"`set` + idx + `field` + index + `feedback`\" v-model=\"formValue[idx][index]\"\r\n              :state=\"formState[idx][index]\">{{ formValue[idx][index] }}</b-form-textarea>\r\n            <b-form-invalid-feedback :id=\"`set` + idx + `field` + index + `feedback`\">{{ formError[idx][index] }}\r\n            </b-form-invalid-feedback>\r\n          </b-form-group>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <b-button @click=\"sendForm()\" type=\"button\" class=\"send\" variant=\"secondary\">{{ $t(\"send\") }}</b-button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, ref, watch, onBeforeMount, onMounted } from \"vue\";\r\nimport { useI18n } from \"vue-i18n\";\r\nimport { useStore } from \"vuex\";\r\nimport { useModal } from \"bootstrap-vue-next\";\r\nimport { sendForm as sf } from \"@storefront/core/data-resolver/forms\";\r\n\r\nconst props = defineProps({\r\n  category_id: {\r\n    type: Number,\r\n    required: false,\r\n  },\r\n  product_sku: {\r\n    type: String,\r\n    required: false,\r\n  },\r\n  type: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n});\r\n\r\nconst alpha_numeric = /^[a-zA-Z0-9]+$/;\r\nconst alpha_numeric_with_spaces = /^[a-zA-Z0-9 ]+$/;\r\nconst letters_only = /^[a-zA-Z]+$/;\r\nconst url =\r\n  /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/;\r\nconst numeric = /^\\d+$/;\r\nconst numeric_with_decimals = /^\\d+(?:\\.|,)\\d+$/;\r\nconst disallow_html_tags = /(<([^>]+)>)/gi;\r\nconst emailaddress =\r\n  /^(?![_.-])[\\w-]+(\\.[\\w-]+)*@[a-zA-Z\\d]([a-zA-Z\\d-]*[a-zA-Z\\d])?(\\.[a-zA-Z\\d]([a-zA-Z\\d-]*[a-zA-Z\\d])?){0,1}\\.[a-zA-Z]{2,24}$/;\r\n\r\nconst formValue = ref([]);\r\nconst formState = ref([]);\r\nconst formError = ref([]);\r\nconst isClient = ref(false);\r\n\r\nconst msg = ref(\"\");\r\n\r\nconst store = useStore();\r\nconst { t } = useI18n();\r\n\r\nconst { show, hide } = useModal(\"modal-dynamic_form\");\r\n\r\nconst product = computed(() => {\r\n  return store.getters[\"product/getCurrentProduct\"];\r\n});\r\n\r\nconst category = computed(() => {\r\n  return store.getters[\"category/getCurrentCategory\"];\r\n});\r\n\r\nconst remote_entity_id = computed(() => {\r\n  if (props.type == \"product\") {\r\n    return 'remote_entity_id: \"' + props.product_sku + '\" ';\r\n  } else if (props.type == \"category\") {\r\n    return 'remote_entity_id: \"' + props.category_id + '\" ';\r\n  }\r\n  return \"\";\r\n});\r\n\r\nconst form = computed(() => {\r\n  if (props.type == \"product\") {\r\n    return store.getters[\"forms/getProductForm\"];\r\n  } else if (props.type == \"category\") {\r\n    return store.getters[\"forms/getCategoryForm\"];\r\n  }\r\n  return store.getters[\"forms/getContactForm\"];\r\n});\r\n\r\nwatch(\r\n  [product, form],\r\n  () => {\r\n    if (props.type == \"product\" && form.value?.fieldsets) {\r\n      const fValue = [];\r\n      const fState = [];\r\n      const fError = [];\r\n      form.value?.fieldsets.forEach((set, idx) => {\r\n        fValue[idx] = [];\r\n        fState[idx] = [];\r\n        fError[idx] = [];\r\n        set.fields.forEach((_, index) => {\r\n          fValue[idx][index] = \"\";\r\n          fState[idx][index] = null;\r\n          fError[idx][index] = \"\";\r\n        });\r\n      });\r\n      formValue.value = fValue;\r\n      formState.value = fState;\r\n      formError.value = fError;\r\n    }\r\n  },\r\n  { immediate: true }\r\n);\r\n\r\nwatch(\r\n  [category, form],\r\n  () => {\r\n    if (props.type == \"category\" && form.value?.fieldsets) {\r\n      const fValue = [];\r\n      const fState = [];\r\n      const fError = [];\r\n      form.value?.fieldsets.forEach((set, idx) => {\r\n        fValue[idx] = [];\r\n        fState[idx] = [];\r\n        fError[idx] = [];\r\n        set.fields.forEach((_, index) => {\r\n          fValue[idx][index] = \"\";\r\n          fState[idx][index] = null;\r\n          fError[idx][index] = \"\";\r\n        });\r\n      });\r\n      formValue.value = fValue;\r\n      formState.value = fState;\r\n      formError.value = fError;\r\n    }\r\n  },\r\n  { immediate: true }\r\n);\r\n\r\nonBeforeMount(() => {\r\n  form.value?.fieldsets.forEach((set, idx) => {\r\n    formValue.value[idx] = [];\r\n    formState.value[idx] = [];\r\n    formError.value[idx] = [];\r\n\r\n    set.fields.forEach((_, index) => {\r\n      formValue.value[idx][index] = \"\";\r\n      formState.value[idx][index] = null;\r\n      formError.value[idx][index] = \"\";\r\n    });\r\n  });\r\n});\r\n\r\nonMounted(() => {\r\n  isClient.value = true;\r\n});\r\n\r\nasync function sendForm() {\r\n  form.value?.fieldsets.forEach((set, idx) => {\r\n    set.fields.forEach((field, index) => {\r\n      // Trim whitespace from the field value\r\n      formValue.value[idx][index] = formValue.value[idx][index].trim();\r\n\r\n      let state = true;\r\n      let error = \"\";\r\n\r\n      // Proceed with other validation checks\r\n      field.validation.forEach((val) => {\r\n        if (val.type == \"required\") {\r\n          if (formValue.value[idx][index] == \"\") {\r\n            state = false;\r\n            error = field.label + \" \" + t(\"dyform_required\");\r\n          }\r\n        } else if (val.type == \"alpha_numeric\") {\r\n          if (alpha_numeric.test(formValue.value[idx][index]) != true) {\r\n            state = false;\r\n            error = t(\"dyform_alpha_numeric\");\r\n          }\r\n        } else if (val.type == \"alpha_numeric_with_spaces\") {\r\n          if (alpha_numeric_with_spaces.test(formValue.value[idx][index]) != true) {\r\n            state = false;\r\n            error = t(\"dyform_alpha_numeric_with_spaces\");\r\n          }\r\n        } else if (val.type == \"letters_only\") {\r\n          if (letters_only.test(formValue.value[idx][index]) != true) {\r\n            state = false;\r\n            error = t(\"dyform_letters_only\");\r\n          }\r\n        } else if (val.type == \"disallow_html_tags\") {\r\n          if (disallow_html_tags.test(formValue.value[idx][index]) == true) {\r\n            state = false;\r\n            error = t(\"dyform_disallow_html_tags\");\r\n          }\r\n        } else if (val.type == \"email\") {\r\n          if (emailaddress.test(formValue.value[idx][index]) != true) {\r\n            state = false;\r\n            error = t(\"dyform_emailaddress\");\r\n          }\r\n        }\r\n        let customEmailValidationArr = formValue.value[idx][index]\r\n          .slice(formValue.value[idx][index].indexOf(\"@\"))\r\n          .split(\".\");\r\n        if (\r\n          customEmailValidationArr.length > 2 &&\r\n          customEmailValidationArr[customEmailValidationArr.length - 1] ===\r\n          customEmailValidationArr[customEmailValidationArr.length - 2]\r\n        ) {\r\n          state = false;\r\n          error = t(\"dyform_emailaddress\");\r\n        } else if (val.type == \"url\") {\r\n          if (url.test(formValue.value[idx][index]) != true) {\r\n            state = false;\r\n            error = t(\"dyform_url\");\r\n          }\r\n        } else if (val.type == \"min_text_length\") {\r\n          if (formValue.value[idx][index].length < parseInt(val.additional)) {\r\n            state = false;\r\n            error = t(\"dyform_min_text_length\", {\r\n              aantal: parseInt(val.additional),\r\n            });\r\n          }\r\n        } else if (val.type == \"max_text_length\") {\r\n          if (formValue.value[idx][index].length > parseInt(val.additional)) {\r\n            state = false;\r\n            error = t(\"max_text_length\", {\r\n              aantal: parseInt(val.additional),\r\n            });\r\n          }\r\n        } else if (val.type == \"numeric\") {\r\n          if (numeric.test(formValue.value[idx][index]) != true) {\r\n            state = false;\r\n            error = t(\"dyform_numeric\");\r\n          }\r\n        } else if (val.type == \"numeric_with_decimals\") {\r\n          if (numeric_with_decimals.test(formValue.value[idx][index]) != true) {\r\n            state = false;\r\n            error = t(\"dyform_numeric_with_decimals\");\r\n          }\r\n        } else if (val.type == \"greater_then_or_equal_to\") {\r\n          //\r\n        } else if (val.type == \"less_then_or_equal_to\") {\r\n          //\r\n        }\r\n      });\r\n      formState.value[idx][index] = state;\r\n      formError.value[idx][index] = error;\r\n    });\r\n  });\r\n  let save = true;\r\n  form.value?.fieldsets.forEach((set, idx) => {\r\n    set.fields.forEach((field, index) => {\r\n      if (formState.value[idx][index] != true) {\r\n        save = false;\r\n      }\r\n    });\r\n  });\r\n  if (save == true) {\r\n    //send form\r\n    let input = \"type: \" + props.type + \" \" + remote_entity_id.value + \" field: [\";\r\n    form.value?.fieldsets.forEach((set, idx) => {\r\n      set.fields.forEach((field, index) => {\r\n        input =\r\n          input + '{ name: \"' + field.name + '\", value: \"' + formValue.value[idx][index] + '\" }';\r\n      });\r\n    });\r\n    input = input + \"]\";\r\n    const retval = await sf(input);\r\n    if (retval.has_errors == true) {\r\n      //\r\n    } else {\r\n      msg.value = retval.thank_you_message;\r\n      show();\r\n      form.value?.fieldsets.forEach((set, idx) => {\r\n        set.fields.forEach((field, index) => {\r\n          formValue.value[idx][index] = \"\";\r\n          formState.value[idx][index] = null;\r\n          formError.value[idx][index] = \"\";\r\n        });\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.btn-info,\r\n.btn-success {\r\n  --bs-btn-color: #{white};\r\n  --bs-btn-active-color: #{white};\r\n  --bs-btn-hover-color: #{white};\r\n}\r\n\r\n.modal-body {\r\n  word-wrap: anywhere;\r\n}\r\n</style>\r\n","<template>\r\n    <AppLayout wrapperClass=\"contact\" v-if=\"isClient\">\r\n        <Breadcrumbs />\r\n        <section class=\"static pt-7 ps-md-20 p-15 pt-0\">\r\n            <h1 class=\"title\">{{ $t(\"contact\") }}</h1>\r\n            <BRow>\r\n                <BCol md=\"4\" class=\"d-none d-lg-block\">\r\n                    <h3 class=\"subtitle\">{{ $t(\"schins_leder\") }}</h3>\r\n                    <cmsBlockSimple identifier=\"contact\" />\r\n                </BCol>\r\n                <BCol md=\"8\">\r\n                    <div class=\"col-10\">\r\n\r\n                        <h3 class=\"subtitle\">{{ $t(\"write_to_us\") }}</h3>\r\n                        <h4 class=\"subtitle-description\">{{ $t(\"send_us_a_note_text\") }}</h4>\r\n                        <h5 class=\"required-fields-warning\">{{ $t(\"required_fields_warning\") }}</h5>\r\n                        <div v-if=\"contactForm != null\">\r\n                            <DynamicForms type=\"contact\" />\r\n                        </div>\r\n                    </div>\r\n                </BCol>\r\n                <!--<div class=\"col-lg-4\">\r\n                         <v-runtime-template v-if=\"getCmsData?.content\" :template=\"`<div class='cms-content'>${getCmsData?.content}</div>`\"\r\n                            ></v-runtime-template> \r\n                        <div class=\"cms-content\" v-if=\"getCmsData?.content\" v-html=\"getCmsData?.content\"></div>\r\n                    </div>-->\r\n            </BRow>\r\n        </section>\r\n    </AppLayout>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, onMounted, ref } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { useHead } from \"@unhead/vue\";\r\n// import VRuntimeTemplate from \"vue3-runtime-template\";\r\nimport AppLayout from \"@/esf_thehague_schinsleder/core/components/AppLayout\";\r\nimport cmsBlockSimple from \"@/base/core/components/core/BlockSimple\";\r\nimport Breadcrumbs from \"@/esf_thehague_schinsleder/core/components/Breadcrumbs\";\r\nimport DynamicForms from \"@/esf_thehague_schinsleder/core/components/DynamicForms\";\r\nconst isClient = ref(false);\r\n\r\n// Set up meta information using useHead\r\nuseHead({\r\n    title: () => \"Contact\",\r\n    meta: [\r\n        { name: \"title\", content: () => \"Contact\" },\r\n        { name: \"keywords\", content: () => \"Contact\" },\r\n        { name: \"description\", content: () => \"Contact\" },\r\n    ],\r\n});\r\n\r\nconst store = useStore();\r\n\r\nconst getCmsData = computed(() => {\r\n    return store.getters[`cmsBlock/getCmsBlockByIdentifier`](\"contact\");\r\n});\r\n\r\nconst contactForm = computed(() => {\r\n    return store.getters[`forms/getContactForm`];\r\n});\r\n\r\nonMounted(() => {\r\n    isClient.value = true;\r\n    const bcrumb = { current: \"Contact\", routes: [] };\r\n    store.commit(\"breadcrumbs/set\", bcrumb);\r\n});\r\n</script>"],"names":["sendForm","sf"],"mappings":"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"}