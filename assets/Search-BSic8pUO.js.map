{"version":3,"file":"Search-BSic8pUO.js","sources":["../../../src/esf_thehague_schinsleder/core/components/search/SearchPageContentFilter.vue","../../../src/esf_thehague_schinsleder/core/components/search/SearchFilteredProducts.vue","../../../src/esf_thehague_schinsleder/core/views/Search.vue"],"sourcesContent":["<template>\r\n  <div class=\"content-filter\">\r\n    <div class=\"cst-pagination-bar\">\r\n      <label class=\"pagination-bar-title\">\r\n        <span class=\"pagination-text\"> Pagina </span>\r\n        <span class=\"fw-bold\"> {{ currentPage }} </span>\r\n        <span class=\"pagination-text\"> van </span>\r\n        <span class=\"fw-bold\"> {{ Math.ceil(totalProds / prodsPerPage) }} </span>\r\n      </label>\r\n      <div class=\"d-flex align-items-center\">\r\n        <span class=\"pagination-btn\">Pagina:</span>\r\n        <BPagination\r\n          :total-rows=\"totalProds\"\r\n          :per-page=\"prodsPerPage\"\r\n          :model-value=\"currentPage\"\r\n          @update:model-value=\"changePage\"\r\n          class=\"cst-pagination align-items-center mb-0\"\r\n          aria-controls=\"cat-item\"\r\n          limit=\"3\"\r\n          hide-goto-end-buttons=\"true\"\r\n        >\r\n          <BLink class=\"page-link\" :to=\"goToPage(page)\">\r\n            {{ page }}\r\n          </BLink>\r\n        </BPagination>\r\n      </div>\r\n    </div>\r\n    <p class=\"fw-bold article-para mt-15\">\r\n      {{ t(\"articles_match\", { totalproduct: totalProds }) }}\r\n    </p>\r\n    <p class=\"article-para\">{{ $t(\"search_function\") }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, computed } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport config from \"@config\";\r\nimport { useI18n } from \"vue-i18n\";\r\n\r\n// Access Vuex store and router\r\nconst store = useStore();\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst { t } = useI18n();\r\n\r\n// Mounted lifecycle hook\r\nonMounted(async () => {\r\n  const { page } = route.query;\r\n  const { path } = route;\r\n  const query = { ...route.query };\r\n  if (page && totalPages.value < parseInt(page)) {\r\n    delete query[\"page\"];\r\n  }\r\n  const pageSize = config.products?.perPage;\r\n  const perPage = store.getters[\"search/getProductsPerPage\"];\r\n  if (perPage != pageSize) query[\"page-size\"] = perPage;\r\n\r\n  router.replace({ path, query });\r\n});\r\n\r\n// Computed properties\r\nconst selectOptions = computed(() => {\r\n  const sortOpt = [];\r\n  Object.keys(config.sortingOptions).forEach((element) => {\r\n    const option = {\r\n      value: element,\r\n      text: t(`sortingOptions.${element}`),\r\n    };\r\n    sortOpt.push(option);\r\n  });\r\n  return sortOpt;\r\n});\r\n\r\nconst sorting = computed(() => store.getters[\"search/getSorting\"]);\r\nconst currentPage = computed(() => store.getters[\"search/getCurrentPage\"]);\r\nconst totalProds = computed(() => store.getters[\"search/getTotalProducts\"]);\r\nconst prodsPerPage = computed(() => store.getters[\"search/getProductsPerPage\"]);\r\nconst totalPages = computed(() => store.getters[\"search/getTotalPages\"]);\r\n\r\n// Methods\r\nconst changePage = (pageNo) => {\r\n  router.currentRoute.value.meta = \"top\";\r\n  store.commit(\"search/setCurrentPage\", { pageNo, store });\r\n\r\n  const { path } = route;\r\n  const query = { ...route.query };\r\n\r\n  if (pageNo != 1) query[\"page\"] = pageNo;\r\n  else delete query[\"page\"];\r\n\r\n  router.replace({ path, query });\r\n};\r\n\r\nconst changePerPage = (event) => {\r\n  router.currentRoute.value.meta = \"top\";\r\n  const perPage = +event.target.value;\r\n  const { path } = route;\r\n  const query = { ...route.query };\r\n\r\n  const pageSize = config.products?.perPage;\r\n\r\n  if (perPage != pageSize) query[\"page-size\"] = perPage;\r\n  else delete query[\"page-size\"];\r\n  delete query[\"page\"];\r\n\r\n  router.replace({ path, query });\r\n\r\n  store.commit(\"search/setProductsPerPage\", { perPage, store });\r\n};\r\n\r\nconst changeSorting = (sortVal) => {\r\n  store.commit(\"search/setSorting\", { data: sortVal, store });\r\n\r\n  const { path } = route;\r\n  const query = { ...route.query };\r\n\r\n  const { sortDefault } = config;\r\n  if (config.sortingOptions[sortVal] && sortVal !== sortDefault) {\r\n    query[\"sort\"] = sortVal;\r\n  } else {\r\n    delete query[\"sort\"];\r\n  }\r\n  delete query[\"page\"];\r\n\r\n  router.replace({ path, query });\r\n};\r\n\r\nconst goToPage = (page) => {\r\n  const { path } = route;\r\n  const query = { ...route.query };\r\n\r\n  if (page != 1) query[\"page\"] = page;\r\n  else delete query[\"page\"];\r\n\r\n  return { path, query };\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.page-item {\r\n  button {\r\n    height: 100%;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"filtered-products\">\r\n    <div class=\"loader-box\" v-if=\"isLoading\">\r\n      <div class=\"reverse-spinner\"></div>\r\n    </div>\r\n    <div v-else-if=\"totalProducts === 0\">NO Products Found</div>\r\n    <div v-else>\r\n      <ProductsSection :products-list=\"productList\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport ProductsSection from \"@/esf_thehague_schinsleder/core/components/ProductsSection\";\r\n\r\n// import chunkArray from \"@/base/helpers/chunkArray\";\r\n\r\n// Access the Vuex store\r\nconst store = useStore();\r\n\r\n// Computed properties\r\nconst isLoading = computed(() => store.getters[\"search/getLoadProducts\"]);\r\nconst productList = computed(() => store.getters[\"search/getShowProducts\"]);\r\nconst totalProducts = computed(() => store.getters[\"search/getTotalProducts\"]);\r\n// const productsChunks = computed(() => chunkArray(store.getters[\"search/getShowProducts\"], 12));\r\n</script>\r\n","<template>\r\n    <AppLayout wrapperClass=\"search\">\r\n        <Breadcrumbs />\r\n        <div class=\"search-page\">\r\n            <div class=\"px-md-15 px-10\">\r\n                <ProductsListingSearch class=\"\" />\r\n            </div>\r\n        </div>\r\n    </AppLayout>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, onBeforeUnmount, watch, computed } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { useStore } from \"vuex\";\r\n\r\nimport config from \"@config\";\r\nimport AppLayout from \"@/esf_thehague_schinsleder/core/components/AppLayout\";\r\nimport Breadcrumbs from \"@/esf_thehague_schinsleder/core/components/Breadcrumbs\";\r\nimport ProductsListingSearch from \"@/esf_thehague_schinsleder/core/components/search/ProductsListingSearch\";\r\nimport { extractSearchFilters } from \"@storefront/core/router/helpers/cleanPath.js\";\r\nimport { useHead } from \"@unhead/vue\";\r\n\r\n// Set up meta information using useHead\r\nuseHead({\r\ntitle: () => \"Search\",\r\nmeta: [\r\n    { name: \"title\", content: () => \"Search\" },\r\n    { name: \"keywords\", content: () => \"Search\" },\r\n    { name: \"description\", content: () => \"Search\" },\r\n],\r\n});\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst store = useStore();\r\n\r\nconst searchWord = computed(() => {\r\nreturn route.query.q || \"\";\r\n});\r\n\r\nwatch(searchWord, async (newSearchWord) => {\r\nif (newSearchWord) {\r\n    await store.dispatch(\"search/load\", { search: newSearchWord, store });\r\n    const bcrumb = { current: newSearchWord, routes: [] };\r\n    store.commit(\"breadcrumbs/set\", bcrumb);\r\n\r\n    const { path } = route;\r\n    const query = { ...route.query };\r\n    const pageSize = config.products?.perPage;\r\n    const perPage = store.getters[\"search/getProductsPerPage\"];\r\n\r\n    if (perPage !== pageSize) query[\"page-size\"] = perPage;\r\n    router.push({ path, query });\r\n}\r\n});\r\n\r\nonMounted(async () => {\r\nif (searchWord.value) {\r\n    const filter = extractSearchFilters(route);\r\n    await store.dispatch(\"search/load\", {\r\n    search: searchWord.value,\r\n    filter,\r\n    store,\r\n    });\r\n}\r\nconst bcrumb = { current: route.query.q, routes: [] };\r\nstore.commit(\"breadcrumbs/set\", bcrumb);\r\n});\r\n\r\nonBeforeUnmount(() => {\r\nstore.commit(\"search/setLoadProducts\", false);\r\n});\r\n</script>\r\n"],"names":["config"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,UAAM,QAAQ,SAAQ;AACtB,UAAM,QAAQ,SAAQ;AACtB,UAAM,SAAS,UAAS;AACxB,UAAM,EAAE,EAAC,IAAK;AAGd,cAAU,YAAY;;AACpB,YAAM,EAAE,KAAI,IAAK,MAAM;AACvB,YAAM,EAAE,KAAM,IAAG;AACjB,YAAM,QAAQ,EAAE,GAAG,MAAM,MAAK;AAC9B,UAAI,QAAQ,WAAW,QAAQ,SAAS,IAAI,GAAG;AAC7C,eAAO,MAAM,MAAM;AAAA,MACpB;AACD,YAAM,YAAWA,iBAAO,aAAPA,mBAAiB;AAClC,YAAM,UAAU,MAAM,QAAQ,2BAA2B;AACzD,UAAI,WAAW,SAAU,OAAM,WAAW,IAAI;AAE9C,aAAO,QAAQ,EAAE,MAAM,MAAO,CAAA;AAAA,IAChC,CAAC;AAGqB,aAAS,MAAM;AACnC,YAAM,UAAU,CAAA;AAChB,aAAO,KAAKA,YAAO,cAAc,EAAE,QAAQ,CAAC,YAAY;AACtD,cAAM,SAAS;AAAA,UACb,OAAO;AAAA,UACP,MAAM,EAAE,kBAAkB,OAAO,EAAE;AAAA,QACzC;AACI,gBAAQ,KAAK,MAAM;AAAA,MACvB,CAAG;AACD,aAAO;AAAA,IACT,CAAC;AAEe,aAAS,MAAM,MAAM,QAAQ,mBAAmB,CAAC;AACjE,UAAM,cAAc,SAAS,MAAM,MAAM,QAAQ,uBAAuB,CAAC;AACzE,UAAM,aAAa,SAAS,MAAM,MAAM,QAAQ,yBAAyB,CAAC;AAC1E,UAAM,eAAe,SAAS,MAAM,MAAM,QAAQ,2BAA2B,CAAC;AAC9E,UAAM,aAAa,SAAS,MAAM,MAAM,QAAQ,sBAAsB,CAAC;AAGvE,UAAM,aAAa,CAAC,WAAW;AAC7B,aAAO,aAAa,MAAM,OAAO;AACjC,YAAM,OAAO,yBAAyB,EAAE,QAAQ,MAAO,CAAA;AAEvD,YAAM,EAAE,KAAM,IAAG;AACjB,YAAM,QAAQ,EAAE,GAAG,MAAM,MAAK;AAE9B,UAAI,UAAU,EAAG,OAAM,MAAM,IAAI;AAAA,UAC5B,QAAO,MAAM,MAAM;AAExB,aAAO,QAAQ,EAAE,MAAM,MAAO,CAAA;AAAA,IAChC;AAoCA,UAAM,WAAW,CAAC,SAAS;AACzB,YAAM,EAAE,KAAM,IAAG;AACjB,YAAM,QAAQ,EAAE,GAAG,MAAM,MAAK;AAE9B,UAAI,QAAQ,EAAG,OAAM,MAAM,IAAI;AAAA,UAC1B,QAAO,MAAM,MAAM;AAExB,aAAO,EAAE,MAAM;IACjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrHA,UAAM,QAAQ,SAAQ;AAGtB,UAAM,YAAY,SAAS,MAAM,MAAM,QAAQ,wBAAwB,CAAC;AACxE,UAAM,cAAc,SAAS,MAAM,MAAM,QAAQ,wBAAwB,CAAC;AAC1E,UAAM,gBAAgB,SAAS,MAAM,MAAM,QAAQ,yBAAyB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACD7E,YAAQ;AAAA,MACR,OAAO,MAAM;AAAA,MACb,MAAM;AAAA,QACF,EAAE,MAAM,SAAS,SAAS,MAAM,SAAU;AAAA,QAC1C,EAAE,MAAM,YAAY,SAAS,MAAM,SAAU;AAAA,QAC7C,EAAE,MAAM,eAAe,SAAS,MAAM,SAAU;AAAA,MACpD;AAAA,IACA,CAAC;AAED,UAAM,QAAQ,SAAQ;AACtB,UAAM,SAAS,UAAS;AACxB,UAAM,QAAQ,SAAQ;AAEtB,UAAM,aAAa,SAAS,MAAM;AAClC,aAAO,MAAM,MAAM,KAAK;AAAA,IACxB,CAAC;AAED,UAAM,YAAY,OAAO,kBAAkB;;AAC3C,UAAI,eAAe;AACf,cAAM,MAAM,SAAS,eAAe,EAAE,QAAQ,eAAe,MAAK,CAAE;AACpE,cAAM,SAAS,EAAE,SAAS,eAAe,QAAQ,CAAE,EAAA;AACnD,cAAM,OAAO,mBAAmB,MAAM;AAEtC,cAAM,EAAE,KAAM,IAAG;AACjB,cAAM,QAAQ,EAAE,GAAG,MAAM,MAAK;AAC9B,cAAM,YAAWA,iBAAO,aAAPA,mBAAiB;AAClC,cAAM,UAAU,MAAM,QAAQ,2BAA2B;AAEzD,YAAI,YAAY,SAAU,OAAM,WAAW,IAAI;AAC/C,eAAO,KAAK,EAAE,MAAM,MAAO,CAAA;AAAA,MAC/B;AAAA,IACA,CAAC;AAED,cAAU,YAAY;AACtB,UAAI,WAAW,OAAO;AAClB,cAAM,SAAS,qBAAqB,KAAK;AACzC,cAAM,MAAM,SAAS,eAAe;AAAA,UACpC,QAAQ,WAAW;AAAA,UACnB;AAAA,UACA;AAAA,QACJ,CAAK;AAAA,MACL;AACA,YAAM,SAAS,EAAE,SAAS,MAAM,MAAM,GAAG,QAAQ,CAAA;AACjD,YAAM,OAAO,mBAAmB,MAAM;AAAA,IACtC,CAAC;AAED,oBAAgB,MAAM;AACtB,YAAM,OAAO,0BAA0B,KAAK;AAAA,IAC5C,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}