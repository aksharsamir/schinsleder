{"version":3,"file":"Search-XV1kCrTl.js","sources":["../../../src/base/core/components/SearchProductFilterContent.vue","../../../src/base/core/components/SearchProductFilter.vue","../../../src/base/core/components/SearchPageContentFilter.vue","../../../src/base/core/components/SearchFilteredProducts.vue","../../../src/base/core/views/Search.vue"],"sourcesContent":["<template>\r\n  <div class=\"productFilterContent filter-content\">\r\n    <div class=\"d-lg-none filter-top\">\r\n      <span class=\"filter-collapse-heading\">{{ $t(\"filters\") }}</span>\r\n      <a class=\"lnr lnr-cross\" @click.prevent=\"toggleFilter\"></a>\r\n    </div>\r\n    <div class=\"category\" v-if=\"!dontShowActiveFilters\">\r\n      <span class=\"filter--block-heading\">{{ searchWord }}</span>\r\n    </div>\r\n    <div\r\n      class=\"active-filters\"\r\n      v-if=\"isPriceFilterActive || filterItemsSelected.length\"\r\n    >\r\n      <a\r\n        @click.prevent\r\n        class=\"filter--block-heading filter--collapse\"\r\n        v-b-toggle.active-filters\r\n        >{{ $t(\"used_filters\") }}:</a\r\n      >\r\n      <a @click.prevent=\"removeAllSelectedItem\" class=\"delete-active-filters\"\r\n        ><i class=\"lnr lnr-cross\"></i\r\n      ></a>\r\n      <BCollapse visible id=\"active-filters\">\r\n        <ul class=\"active-filters-list\">\r\n          <li v-if=\"isPriceFilterActive\">\r\n            <a @click.prevent=\"removePriceFilter\">\r\n              <i class=\"lnr lnr-cross\"></i>\r\n            </a>\r\n            <span class=\"active-filter--name\">\r\n              {{ `${priceFilterLabel ? priceFilterLabel : \"Prijs\"}` }}:\r\n              {{ priceFilter[0] + \" - \" + priceFilter[1] }}\r\n            </span>\r\n          </li>\r\n          <li\r\n            v-for=\"(activeFilterItem, index) of filterItemsSelected\"\r\n            :key=\"index + Date.now()\"\r\n          >\r\n            <a\r\n              @click.prevent=\"removeSelectedItem(activeFilterItem.value)\"\r\n              href=\"#\"\r\n              ><i class=\"lnr lnr-cross\"></i\r\n            ></a>\r\n            <span class=\"active-filter--name\"\r\n              >{{ activeFilterItem.type_label }}:\r\n              {{ activeFilterItem.label }}</span\r\n            >\r\n          </li>\r\n        </ul>\r\n      </BCollapse>\r\n    </div>\r\n    <div\r\n      v-for=\"prodFilter of productFilters\"\r\n      :key=\"prodFilter.attribute_code + Date.now()\"\r\n    >\r\n      <div class=\"price\" v-if=\"prodFilter.attribute_code == 'price'\">\r\n        <a\r\n          class=\"filter--block-heading filter--collapse\"\r\n          v-b-toggle.price-filter\r\n          >{{ prodFilter.label }}</a\r\n        >\r\n        <BCollapse visible id=\"price-filter\">\r\n          <div class=\"range-slider\">\r\n            <div v-if=\"!isServer\">\r\n              <VueRangeSlider\r\n                :min=\"priceFilterMin\"\r\n                :max=\"priceFilterMax\"\r\n                :enable-cross=\"enableCross\"\r\n                :formatter=\"formatter\"\r\n                v-model=\"priceFilter\"\r\n                :logarithmic=\"true\"\r\n                :tooltip=\"null\"\r\n                :lazy=\"true\"\r\n                @dragging=\"\r\n                  (value, index) => {\r\n                    if (index) {\r\n                      max = value[index];\r\n                    } else {\r\n                      min = value[index];\r\n                    }\r\n                  }\r\n                \"\r\n              >\r\n              </VueRangeSlider>\r\n            </div>\r\n\r\n            <div class=\"range-values d-flex justify-content-between\">\r\n              <span>€{{ min ?? priceFilter[0] }}</span>\r\n              <span>€{{ max ?? priceFilter[1] }}</span>\r\n            </div>\r\n          </div>\r\n        </BCollapse>\r\n      </div>\r\n\r\n      <div\r\n        class=\"brands\"\r\n        v-if=\"\r\n          prodFilter.attribute_code != 'size' &&\r\n          prodFilter.attribute_code != 'price'\r\n        \"\r\n      >\r\n        <a\r\n          class=\"filter--block-heading filter--collapse\"\r\n          v-b-toggle.brands-filter\r\n          >{{ $t(prodFilter.label) }}</a\r\n        >\r\n        <BCollapse visible id=\"brands-filter\" class=\"brands-filter\">\r\n          <div\r\n            class=\"d-flex justify-content-between\"\r\n            v-for=\"(brandsFilterItem, index) in prodFilter.options\"\r\n            :key=\"index + Date.now()\"\r\n          >\r\n            <label\r\n              :for=\"brandsFilterItem.value\"\r\n              class=\"d-flex align-items-center\"\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                :key=\"brandsFilterItem.value\"\r\n                :name=\"brandsFilterItem.label\"\r\n                :id=\"brandsFilterItem.value\"\r\n                :ref=\"(el) => (inputRefs[brandsFilterItem.value] = el)\"\r\n                :value=\"\r\n                  `attribute_code:` +\r\n                  prodFilter.attribute_code +\r\n                  `,type_label:` +\r\n                  prodFilter.label +\r\n                  `,value:` +\r\n                  brandsFilterItem.value +\r\n                  `,label:` +\r\n                  brandsFilterItem.label\r\n                \"\r\n                @click=\"onChangeFilter($event)\"\r\n              />\r\n              <span class=\"fake-input\"></span>\r\n              <span class=\"fake-label\">{{ brandsFilterItem.label }}</span>\r\n            </label>\r\n            <span class=\"number-available\">({{ brandsFilterItem.count }})</span>\r\n          </div>\r\n        </BCollapse>\r\n      </div>\r\n      <div class=\"size\" v-if=\"prodFilter.attribute_code == 'size'\">\r\n        <a\r\n          class=\"filter--block-heading filter--collapse mb-15\"\r\n          v-b-toggle.size-filter\r\n          >Kies je maat</a\r\n        >\r\n        <BCollapse visible id=\"size-filter\" class=\"size-filter\">\r\n          <ul class=\"available-sizes\">\r\n            <li\r\n              v-for=\"(sizeFilterItem, index) in prodFilter.options\"\r\n              :key=\"index + Date.now()\"\r\n            >\r\n              <label\r\n                :for=\"sizeFilterItem.name\"\r\n                class=\"d-flex align-items-center\"\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  :key=\"sizeFilterItem.value\"\r\n                  :id=\"sizeFilterItem.value\"\r\n                  :name=\"sizeFilterItem.label\"\r\n                  :ref=\"sizeFilterItem.value\"\r\n                  :value=\"\r\n                    `attribute_code:` +\r\n                    prodFilter.attribute_code +\r\n                    `,type_label:` +\r\n                    prodFilter.label +\r\n                    `,value:` +\r\n                    sizeFilterItem.value +\r\n                    `,label:` +\r\n                    sizeFilterItem.label\r\n                  \"\r\n                  @change=\"onChangeFilter($event)\"\r\n                />\r\n                <span class=\"fake-input\"></span>\r\n                <span class=\"fake-label\">{{ sizeFilterItem.name }}</span>\r\n              </label>\r\n            </li>\r\n          </ul>\r\n        </BCollapse>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onUpdated, reactive } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { useStore } from \"vuex\";\r\nimport VueRangeSlider from \"vue-3-slider-component\";\r\nimport { isServer } from \"@storefront/core/helpers\";\r\n\r\nconst store = useStore();\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst emit = defineEmits([\"clicked\"]);\r\n\r\nconst dontShowActiveFilters = ref(false);\r\nconst enableCross = ref(false);\r\nconst formatter = ref(\"€ {value}\");\r\nconst min = ref(null);\r\nconst max = ref(null);\r\nconst inputRefs = reactive({});\r\n\r\n// const activeFiltersVisible = ref(false);\r\n// const priceFilterVisible = ref(false);\r\n// const brandsFilterVisible = ref(false);\r\n// const sizeFilterVisible = ref(false);\r\n// const value = ref([0, 200]);\r\n// const sliderIsLoaded = ref(false);\r\n// const bla = ref(false);\r\n// const minAngle = ref(10);\r\n// const maxAngle = ref(30);\r\n// const filterExpanded = ref(false);\r\n\r\nconst priceFilter = computed({\r\n  get() {\r\n    return store.getters[\"search/getPriceFilter\"];\r\n  },\r\n  set(val) {\r\n    store.commit(\"search/setPriceFilter\", { data: val, store });\r\n    const query = { ...route.query };\r\n    if (store.getters[\"search/getIsPriceFilterActive\"]) {\r\n      query[\"filter-price\"] = `${val[0]}-${val[1]}`;\r\n    } else {\r\n      delete query[\"filter-price\"];\r\n    }\r\n    delete query[\"page\"];\r\n    router.replace({ path: route.path, query });\r\n    min.value = null;\r\n    max.value = null;\r\n  },\r\n});\r\n\r\nconst productFilters = computed(() => {\r\n  const filters = store.getters[\"search/getProductFilters\"] || [];\r\n\r\n  // if (Array.isArray(filters)) {\r\n  //   filters.forEach(filter => {\r\n  //     filter.label = filter.label.charAt(0).toUpperCase() + filter.label.slice(1);\r\n  //     filter.options.forEach(option => {\r\n  //       option.label = option.label.charAt(0).toUpperCase() + option.label.slice(1);\r\n  //     });\r\n  //   });\r\n  // } else {\r\n  //   console.error(\"filters is not an array:\", filters);\r\n  // }\r\n\r\n  return filters;\r\n});\r\n\r\nconst searchWord = computed(() => route.query.q || \"\");\r\n\r\nconst filterItemsSelected = computed(\r\n  () => store.getters[\"search/getActiveFilter\"]\r\n);\r\nconst isPriceFilterActive = computed(\r\n  () => store.getters[\"search/getIsPriceFilterActive\"]\r\n);\r\nconst priceFilterMin = computed(\r\n  () => store.getters[\"search/getPriceFilterMin\"]\r\n);\r\nconst priceFilterMax = computed(\r\n  () => store.getters[\"search/getPriceFilterMax\"]\r\n);\r\nconst priceFilterLabel = computed(() => {\r\n  const filter = productFilters.value.find(\r\n    (filter) => filter.attribute_code === \"price\"\r\n  );\r\n  return filter ? filter.label : null;\r\n});\r\n\r\nfunction onChangeFilter(event) {\r\n  const value = event.target.value;\r\n  const filter = value.split(\",\").reduce((acc, part) => {\r\n    const [key, val] = part.split(\":\");\r\n    acc[key] = val;\r\n    return acc;\r\n  }, {});\r\n\r\n  if (filter.value !== undefined) {\r\n    if (event.target.checked) {\r\n      store.commit(\"search/setActiveFilter\", { filter, store });\r\n    } else {\r\n      store.commit(\"search/removeActiveFilter\", { filter, store });\r\n    }\r\n  }\r\n  updateUrlFilters();\r\n}\r\n\r\nfunction removeSelectedItem(id) {\r\n  const filter = { value: id };\r\n  if (inputRefs[id] && inputRefs[id]) {\r\n    inputRefs[id].checked = false;\r\n  }\r\n  store.commit(\"search/removeActiveFilter\", { filter, store });\r\n  updateUrlFilters();\r\n}\r\n\r\nfunction removeAllSelectedItem() {\r\n  store.commit(\"search/removeAllActiveFilter\", store);\r\n  updateUrlFilters(true);\r\n}\r\n\r\nfunction removePriceFilter() {\r\n  store.commit(\"search/setPriceFilter\", {\r\n    data: [priceFilterMin.value, priceFilterMax.value],\r\n    store,\r\n  });\r\n  const query = { ...route.query };\r\n  delete query[\"filter-price\"];\r\n  delete query[\"page\"];\r\n  router.replace({ path: route.path, query });\r\n}\r\n\r\nfunction toggleFilter(event) {\r\n  emit(\"clicked\", event);\r\n}\r\n\r\n// function toggleActiveFilters() {\r\n//   activeFiltersVisible.value = !activeFiltersVisible.value;\r\n// }\r\n\r\n// function togglePriceFilter() {\r\n//   priceFilterVisible.value = !priceFilterVisible.value;\r\n// }\r\n\r\n// function toggleBrandsFilter() {\r\n//   brandsFilterVisible.value = !brandsFilterVisible.value;\r\n// }\r\n\r\n// function toggleSizeFilter() {\r\n//   sizeFilterVisible.value = !sizeFilterVisible.value;\r\n// }\r\n\r\nfunction updateUrlFilters(removeAllFilter = false) {\r\n  const activeFilters = filterItemsSelected.value.reduce((acc, val) => {\r\n    if (acc[val.attribute_code]) {\r\n      acc[val.attribute_code].push(val.value);\r\n    } else {\r\n      acc[val.attribute_code] = [val.value];\r\n    }\r\n    return acc;\r\n  }, {});\r\n\r\n  const query = { ...route.query };\r\n  for (const key in query) {\r\n    if (key.startsWith(\"filter-\") && removeAllFilter) {\r\n      delete query[key];\r\n    } else if (key.startsWith(\"filter-\") && key !== \"filter-price\") {\r\n      delete query[key];\r\n    }\r\n  }\r\n  for (const attr in activeFilters) {\r\n    query[`filter-${attr}`] = activeFilters[attr].toString();\r\n  }\r\n  delete query[\"page\"];\r\n  router.replace({ path: route.path, query });\r\n}\r\n\r\n// function getFilterValue(prodFilter, item) {\r\n//   return `attribute_code:${prodFilter.attribute_code},type_label:${prodFilter.label},value:${item.value},label:${item.label}`;\r\n// }\r\n\r\nonUpdated(() => {\r\n  if (filterItemsSelected.value && filterItemsSelected.value.length) {\r\n    filterItemsSelected.value.forEach((filter) => {\r\n      if (inputRefs[filter.value]) {\r\n        inputRefs[filter.value].checked = true;\r\n      }\r\n    });\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <aside class=\"filter\">\r\n    <a class=\"filter-opener d-lg-none\" @click.prevent=\"toggleFilter\"\r\n      >Filters<span class=\"plus\">+</span>\r\n    </a>\r\n    <div\r\n      class=\"filter-overlay\"\r\n      @click.prevent=\"toggleFilter\"\r\n      v-bind:class=\"{ show: filterExpanded }\"\r\n    ></div>\r\n    <div class=\"fake-overlay\" v-if=\"overlayIsReady\" :class=\"{ show: filterExpanded }\"></div>\r\n    <transition name=\"slide-fade\">\r\n      <div class=\"filter-collapse\" :class=\"{ show: filterExpanded }\">\r\n        <SearchProductFilterContent @clicked=\"toggleFilter\" />\r\n      </div>\r\n    </transition>\r\n  </aside>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport SearchProductFilterContent from \"./SearchProductFilterContent.vue\";\r\n// import { isServer } from \"@storefront/core/helpers\";\r\n\r\n// Props\r\ndefineProps({\r\n  dontShowActiveFilters: {\r\n    type: Boolean,\r\n  },\r\n});\r\n\r\n// Reactive state\r\nconst filterExpanded = ref(false);\r\nconst overlayIsReady = ref(false);\r\n\r\n// Lifecycle hooks\r\n// onMounted(() => {\r\n//   overlayIsReady.value = true;\r\n\r\n//   if (!isServer) {\r\n//     window.addEventListener(\"resize\", resize);\r\n//   }\r\n// });\r\n\r\n// onBeforeUnmount(() => {\r\n//   if (!isServer) {\r\n//     window.removeEventListener(\"resize\", resize);\r\n//   }\r\n// });\r\n\r\n// Methods\r\n// const resize = () => {\r\n//   if (window.innerWidth > 991) filterExpanded.value = false;\r\n// };\r\n\r\nconst toggleFilter = () => {\r\n  filterExpanded.value = !filterExpanded.value;\r\n};\r\n\r\n// const filterItemsSelected = ref([]);\r\n// const removeSelectedItem = (id) => {\r\n//   // Assuming filterItemsSelected is a reactive array or ref\r\n//   const index = filterItemsSelected.value.findIndex(item => item.id === id);\r\n//   if (index > -1) {\r\n//     filterItemsSelected.value[index].isChecked = false;\r\n//   }\r\n// };\r\n</script>\r\n","<template>\r\n  <div class=\"content-filter\">\r\n    <div class=\"cst-pagination-bar\">\r\n      <label\r\n        >Pagina<span>{{ currentPage }}</span\r\n        >van<span>{{ Math.ceil(totalProds / prodsPerPage) }}</span>\r\n      </label>\r\n      <b-pagination\r\n        :total-rows=\"totalProds\"\r\n        :per-page=\"prodsPerPage\"\r\n        :model-value=\"currentPage\"\r\n        @update:model-value=\"changePage\"\r\n        class=\"cst-pagination\"\r\n        aria-controls=\"cat-item\"\r\n      >\r\n        <template #page=\"{ page }\">\r\n          <b-link class=\"page-link\" :to=\"goToPage(page)\">\r\n            {{ page }}\r\n          </b-link>\r\n        </template>\r\n      </b-pagination>\r\n    </div>\r\n    <div class=\"pagination-bar-down\">\r\n      <div class=\"left\">\r\n        <div class=\"display-drop\">\r\n          <label>{{ $t(\"view\") }}:</label>\r\n          <select :value=\"prodsPerPage\" @change=\"changePerPage\">\r\n            <option value=\"12\">12</option>\r\n            <option value=\"24\">24</option>\r\n            <option value=\"36\">36</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"select-wrapper\">\r\n        <b-form-select\r\n          id=\"sorting\"\r\n          :options=\"selectOptions\"\r\n          class=\"select\"\r\n          @update:model-value=\"changeSorting\"\r\n          :model-value=\"sorting\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, computed } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport config from \"@config\";\r\nimport { useI18n } from \"vue-i18n\";\r\n\r\n// Access Vuex store and router\r\nconst store = useStore();\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst { t } = useI18n();\r\n\r\n// Mounted lifecycle hook\r\nonMounted(async () => {\r\n  const { page } = route.query;\r\n  const { path } = route;\r\n  const query = { ...route.query };\r\n  if (page && totalPages.value < parseInt(page)) {\r\n    delete query[\"page\"];\r\n  }\r\n  const pageSize = config.products?.perPage;\r\n  const perPage = store.getters[\"search/getProductsPerPage\"];\r\n  if (perPage != pageSize) query[\"page-size\"] = perPage;\r\n\r\n  router.replace({ path, query });\r\n});\r\n\r\n// Computed properties\r\nconst selectOptions = computed(() => {\r\n  const sortOpt = [];\r\n  Object.keys(config.sortingOptions).forEach((element) => {\r\n    const option = {\r\n      value: element,\r\n      text: t(`sortingOptions.${element}`),\r\n    };\r\n    sortOpt.push(option);\r\n  });\r\n  return sortOpt;\r\n});\r\n\r\nconst sorting = computed(() => store.getters[\"search/getSorting\"]);\r\nconst currentPage = computed(() => store.getters[\"search/getCurrentPage\"]);\r\nconst totalProds = computed(() => store.getters[\"search/getTotalProducts\"]);\r\nconst prodsPerPage = computed(() => store.getters[\"search/getProductsPerPage\"]);\r\nconst totalPages = computed(() => store.getters[\"search/getTotalPages\"]);\r\n\r\n// Methods\r\nconst changePage = (pageNo) => {\r\n  router.currentRoute.value.meta = \"top\";\r\n  store.commit(\"search/setCurrentPage\", { pageNo, store });\r\n\r\n  const { path } = route;\r\n  const query = { ...route.query };\r\n\r\n  if (pageNo != 1) query[\"page\"] = pageNo;\r\n  else delete query[\"page\"];\r\n\r\n  router.replace({ path, query });\r\n};\r\n\r\nconst changePerPage = (event) => {\r\n  router.currentRoute.value.meta = \"top\";\r\n  const perPage = +event.target.value;\r\n  const { path } = route;\r\n  const query = { ...route.query };\r\n\r\n  const pageSize = config.products?.perPage;\r\n\r\n  if (perPage != pageSize) query[\"page-size\"] = perPage;\r\n  else delete query[\"page-size\"];\r\n  delete query[\"page\"];\r\n\r\n  router.replace({ path, query });\r\n\r\n  store.commit(\"search/setProductsPerPage\", { perPage, store });\r\n};\r\n\r\nconst changeSorting = (sortVal) => {\r\n  store.commit(\"search/setSorting\", { data: sortVal, store });\r\n\r\n  const { path } = route;\r\n  const query = { ...route.query };\r\n\r\n  const { sortDefault } = config;\r\n  if (config.sortingOptions[sortVal] && sortVal !== sortDefault) {\r\n    query[\"sort\"] = sortVal;\r\n  } else {\r\n    delete query[\"sort\"];\r\n  }\r\n  delete query[\"page\"];\r\n\r\n  router.replace({ path, query });\r\n};\r\n\r\nconst goToPage = (page) => {\r\n  const { path } = route;\r\n  const query = { ...route.query };\r\n\r\n  if (page != 1) query[\"page\"] = page;\r\n  else delete query[\"page\"];\r\n\r\n  return { path, query };\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.page-item {\r\n  button {\r\n    height: 100%;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"filtered-products\">\r\n    <div class=\"loader-box\" v-if=\"isLoading\">\r\n      <div class=\"reverse-spinner\"></div>\r\n    </div>\r\n    <div v-else-if=\"totalProducts === 0\">NO Products Found</div>\r\n    <div v-else>\r\n      <ProductsSection :products-list=\"productList\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport ProductsSection from \"@/base/core/components/ProductsSection.vue\";\r\n// import chunkArray from \"@/base/helpers/chunkArray\";\r\n\r\n// Access the Vuex store\r\nconst store = useStore();\r\n\r\n// Computed properties\r\nconst isLoading = computed(() => store.getters[\"search/getLoadProducts\"]);\r\nconst productList = computed(() => store.getters[\"search/getShowProducts\"]);\r\nconst totalProducts = computed(() => store.getters[\"search/getTotalProducts\"]);\r\n// const productsChunks = computed(() => chunkArray(store.getters[\"search/getShowProducts\"], 12));\r\n</script>\r\n","<template>\r\n  <BaseLayout wrapperClass=\"search\">\r\n    <Breadcrumbs />\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <SearchProductFilter class=\"col-lg-3\" />\r\n        <ProductsListingSearch class=\"col-lg-9\" />\r\n      </div>\r\n    </div>\r\n  </BaseLayout>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, onBeforeUnmount, watch, computed } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { useStore } from \"vuex\";\r\n\r\nimport config from \"@config\";\r\nimport BaseLayout from \"@/base/core/components/common/BaseLayout.vue\";\r\nimport Breadcrumbs from \"@/base/core/components/Breadcrumbs.vue\";\r\nimport SearchProductFilter from \"@/base/core/components/SearchProductFilter.vue\";\r\nimport ProductsListingSearch from \"@/base/core//components/ProductsListingSearch.vue\";\r\nimport { extractSearchFilters } from \"@storefront/core/router/helpers/cleanPath.js\";\r\nimport { useHead } from \"@unhead/vue\";\r\n\r\n// Set up meta information using useHead\r\nuseHead({\r\n  title: () => \"Search\",\r\n  meta: [\r\n    { name: \"title\", content: () => \"Search\" },\r\n    { name: \"keywords\", content: () => \"Search\" },\r\n    { name: \"description\", content: () => \"Search\" },\r\n  ],\r\n});\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst store = useStore();\r\n\r\nconst searchWord = computed(() => {\r\n  return route.query.q || \"\";\r\n});\r\n\r\nwatch(searchWord, async (newSearchWord) => {\r\n  if (newSearchWord) {\r\n    await store.dispatch(\"search/load\", { search: newSearchWord, store });\r\n    const bcrumb = { current: newSearchWord, routes: [] };\r\n    store.commit(\"breadcrumbs/set\", bcrumb);\r\n\r\n    const { path } = route;\r\n    const query = { ...route.query };\r\n    const pageSize = config.products?.perPage;\r\n    const perPage = store.getters[\"search/getProductsPerPage\"];\r\n\r\n    if (perPage !== pageSize) query[\"page-size\"] = perPage;\r\n    router.push({ path, query });\r\n  }\r\n});\r\n\r\nonMounted(async () => {\r\n  if (searchWord.value) {\r\n    const filter = extractSearchFilters(route);\r\n    await store.dispatch(\"search/load\", {\r\n      search: searchWord.value,\r\n      filter,\r\n      store,\r\n    });\r\n  }\r\n  const bcrumb = { current: route.query.q, routes: [] };\r\n  store.commit(\"breadcrumbs/set\", bcrumb);\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  store.commit(\"search/setLoadProducts\", false);\r\n});\r\n</script>\r\n"],"names":["filter","config"],"mappings":"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"}