{"version":3,"file":"Login-OFSPjf9X.js","sources":["../../../src/base/core/views/Login.vue"],"sourcesContent":["<template>\r\n  <BaseLayout>\r\n    <Breadcrumbs />\r\n    <section class=\"login\">\r\n      <BContainer>\r\n        <BRow>\r\n          <BCol offset-lg=\"1\" offset-xl=\"2\" lg=\"10\" xl=\"8\" class=\"position-relative\">\r\n            <span class=\"login-title text-white\">{{ $t(\"login\") }}</span>\r\n            <div class=\"login-component\">\r\n              <div class=\"d-flex flex-column flex-md-row justify-content-between\">\r\n                <div class=\"info login--inner-component pb-25 pb-md-0\">\r\n                  <span class=\"title d-block\">{{ $t(\"new_customers\") }}</span>\r\n                  <p class=\"mb-15 mb-md-45\">\r\n                    {{ $t(\"register_info\") }}\r\n                  </p>\r\n                  <div class=\"text-end py-4\">\r\n                    <BButton\r\n                      @click=\"$router.push({ name: 'create-account' })\"\r\n                      variant=\"info\"\r\n                      class=\"text-white py-3 px-15\"\r\n                      >{{ $t(\"create_account\") }}</BButton\r\n                    >\r\n                  </div>\r\n                </div>\r\n                <div class=\"form login--inner-component pt-25 pt-md-0\">\r\n                  <span class=\"title d-block\">{{ $t(\"registered_customers\") }}</span>\r\n                  <span class=\"form-description d-block mb-30\">{{ $t(\"account_login\") }}</span>\r\n                  <BForm @submit.prevent=\"onLoginFormSubmit\" novalidate>\r\n                    <BFormGroup\r\n                      class=\"mb-6\"\r\n                      id=\"email-group\"\r\n                      :label=\"$t('req_email')\"\r\n                      label-for=\"email\"\r\n                    >\r\n                      <BFormInput\r\n                        id=\"email\"\r\n                        v-model=\"form.email\"\r\n                        :state=\"loginValidation.emailState\"\r\n                        @blur=\"validateEmail\"\r\n                        type=\"email\"\r\n                        required=\"\"\r\n                        aria-describedby=\"email-feedback\"\r\n                      ></BFormInput>\r\n                      <BFormInvalidFeedback id=\"email-feedback\">\r\n                        {{ loginValidation.emailError }}\r\n                      </BFormInvalidFeedback>\r\n                    </BFormGroup>\r\n                    <BFormGroup\r\n                      class=\"mb-6\"\r\n                      id=\"password-group\"\r\n                      :label=\"$t('req_password')\"\r\n                      label-for=\"password\"\r\n                    >\r\n                      <BFormInput\r\n                        id=\"password\"\r\n                        v-model=\"form.password\"\r\n                        type=\"password\"\r\n                        required=\"\"\r\n                        :state=\"loginValidation.passwordState\"\r\n                        @blur=\"validatePassword\"\r\n                        aria-describedby=\"password-feedback\"\r\n                      ></BFormInput>\r\n                      <BFormInvalidFeedback id=\"password-feedback\">\r\n                        {{ loginValidation.passwordError }}\r\n                      </BFormInvalidFeedback>\r\n                    </BFormGroup>\r\n                    <span class=\"form-info mb-15 d-block\">{{ $t(\"required_fields\") }}</span>\r\n                    <div class=\"d-flex justify-content-between align-items-center\">\r\n                      <router-link\r\n                        to=\"/forgot-password\"\r\n                        class=\"font-weight-normal link-underline\"\r\n                        >{{ $t(\"password_forgot\") }}</router-link\r\n                      >\r\n                      <BButton\r\n                        type=\"submit\"\r\n                        variant=\"info\"\r\n                        class=\"text-white ml-20 form-submit-btn\"\r\n                        >{{ $t(\"login\") }}</BButton\r\n                      >\r\n                    </div>\r\n                  </BForm>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </BCol>\r\n        </BRow>\r\n      </BContainer>\r\n    </section>\r\n  </BaseLayout>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch, onMounted } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { useStore } from \"vuex\";\r\nimport BaseLayout from \"@/base/core/components/common/BaseLayout.vue\";\r\nimport Breadcrumbs from \"@/base/core/components/Breadcrumbs.vue\";\r\nimport { useI18n } from \"vue-i18n\";\r\nimport { useHead } from \"@unhead/vue\";\r\nimport { useLogin } from \"@storefront/core/composable/login\";\r\n\r\nconst { login } = useLogin();\r\nconst { t } = useI18n();\r\nconst router = useRouter();\r\nconst store = useStore();\r\n\r\n// Reactive form and validation objects\r\nconst form = ref({\r\n  email: \"\",\r\n  password: \"\",\r\n});\r\n\r\nconst loginValidation = ref({\r\n  emailState: null,\r\n  emailError: \"\",\r\n  passwordState: null,\r\n  passwordError: \"\",\r\n});\r\n\r\nconst emailReg = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Sample regex for email validation\r\n\r\n// Method to handle form submission\r\nconst onLoginFormSubmit = () => {\r\n  let formValid = true;\r\n  if (loginValidation.value.emailState !== true) {\r\n    validateEmail();\r\n    if (loginValidation.value.emailState !== true) {\r\n      formValid = false;\r\n    }\r\n  }\r\n\r\n  if (loginValidation.value.passwordState !== true) {\r\n    validatePassword();\r\n    if (loginValidation.value.passwordState !== true) {\r\n      formValid = false;\r\n    }\r\n  }\r\n\r\n  if (formValid) {\r\n    login(form.value);\r\n  }\r\n};\r\n\r\n// Email validation\r\nconst validateEmail = () => {\r\n  if (form.value.email.length === 0) {\r\n    loginValidation.value.emailState = false;\r\n    loginValidation.value.emailError = t(\"email_is_required_field\");\r\n    return false;\r\n  }\r\n  if (!emailReg.test(form.value.email)) {\r\n    loginValidation.value.emailState = false;\r\n    loginValidation.value.emailError = t(\"email_is_invalid_field\");\r\n    return false;\r\n  }\r\n  loginValidation.value.emailState = true;\r\n  return true;\r\n};\r\n\r\n// Password validation\r\nconst validatePassword = () => {\r\n  if (form.value.password.length === 0) {\r\n    loginValidation.value.passwordState = false;\r\n    loginValidation.value.passwordError = t(\"password_is_required_field\");\r\n    return false;\r\n  }\r\n  loginValidation.value.passwordState = true;\r\n  return true;\r\n};\r\n\r\n// Set up meta information using useHead\r\nuseHead({\r\n  title: () => t(\"login\"),\r\n  meta: [\r\n    { name: \"title\", content: () => t(\"login\") },\r\n    { name: \"keywords\", content: () => t(\"login\") },\r\n    { name: \"description\", content: () => t(\"login\") },\r\n  ],\r\n});\r\n\r\nconst isLoggedIn = computed(() => store.getters[\"user/getIsLoggedIn\"]);\r\n\r\nwatch(isLoggedIn, (newVal) => {\r\n  if (newVal) {\r\n    router.push({ name: \"account\" });\r\n  }\r\n});\r\n\r\nonMounted(() => {\r\n  const bcrumb = { current: t(\"login\"), routes: [] };\r\n  store.commit(\"breadcrumbs/set\", bcrumb);\r\n});\r\n</script>\r\n<style scoped>\r\n@import \"@/base/core/components/login/login.scss\";\r\n</style>\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA,UAAM,EAAE,MAAK,IAAK;AAClB,UAAM,EAAE,EAAC,IAAK;AACd,UAAM,SAAS,UAAS;AACxB,UAAM,QAAQ,SAAQ;AAGtB,UAAM,OAAO,IAAI;AAAA,MACf,OAAO;AAAA,MACP,UAAU;AAAA,IACZ,CAAC;AAED,UAAM,kBAAkB,IAAI;AAAA,MAC1B,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,eAAe;AAAA,MACf,eAAe;AAAA,IACjB,CAAC;AAED,UAAM,WAAW;AAGjB,UAAM,oBAAoB,MAAM;AAC9B,UAAI,YAAY;AAChB,UAAI,gBAAgB,MAAM,eAAe,MAAM;AAC7C;AACA,YAAI,gBAAgB,MAAM,eAAe,MAAM;AAC7C,sBAAY;AAAA,QACb;AAAA,MACF;AAED,UAAI,gBAAgB,MAAM,kBAAkB,MAAM;AAChD;AACA,YAAI,gBAAgB,MAAM,kBAAkB,MAAM;AAChD,sBAAY;AAAA,QACb;AAAA,MACF;AAED,UAAI,WAAW;AACb,cAAM,KAAK,KAAK;AAAA,MACjB;AAAA,IACH;AAGA,UAAM,gBAAgB,MAAM;AAC1B,UAAI,KAAK,MAAM,MAAM,WAAW,GAAG;AACjC,wBAAgB,MAAM,aAAa;AACnC,wBAAgB,MAAM,aAAa,EAAE,yBAAyB;AAC9D,eAAO;AAAA,MACR;AACD,UAAI,CAAC,SAAS,KAAK,KAAK,MAAM,KAAK,GAAG;AACpC,wBAAgB,MAAM,aAAa;AACnC,wBAAgB,MAAM,aAAa,EAAE,wBAAwB;AAC7D,eAAO;AAAA,MACR;AACD,sBAAgB,MAAM,aAAa;AACnC,aAAO;AAAA,IACT;AAGA,UAAM,mBAAmB,MAAM;AAC7B,UAAI,KAAK,MAAM,SAAS,WAAW,GAAG;AACpC,wBAAgB,MAAM,gBAAgB;AACtC,wBAAgB,MAAM,gBAAgB,EAAE,4BAA4B;AACpE,eAAO;AAAA,MACR;AACD,sBAAgB,MAAM,gBAAgB;AACtC,aAAO;AAAA,IACT;AAGA,YAAQ;AAAA,MACN,OAAO,MAAM,EAAE,OAAO;AAAA,MACtB,MAAM;AAAA,QACJ,EAAE,MAAM,SAAS,SAAS,MAAM,EAAE,OAAO,EAAG;AAAA,QAC5C,EAAE,MAAM,YAAY,SAAS,MAAM,EAAE,OAAO,EAAG;AAAA,QAC/C,EAAE,MAAM,eAAe,SAAS,MAAM,EAAE,OAAO,EAAG;AAAA,MACnD;AAAA,IACH,CAAC;AAED,UAAM,aAAa,SAAS,MAAM,MAAM,QAAQ,oBAAoB,CAAC;AAErE,UAAM,YAAY,CAAC,WAAW;AAC5B,UAAI,QAAQ;AACV,eAAO,KAAK,EAAE,MAAM,UAAW,CAAA;AAAA,MAChC;AAAA,IACH,CAAC;AAED,cAAU,MAAM;AACd,YAAM,SAAS,EAAE,SAAS,EAAE,OAAO,GAAG,QAAQ,CAAA;AAC9C,YAAM,OAAO,mBAAmB,MAAM;AAAA,IACx}