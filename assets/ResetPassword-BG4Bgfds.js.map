{"version":3,"file":"ResetPassword-BG4Bgfds.js","sources":["../../../src/base/core/views/ResetPassword.vue"],"sourcesContent":["<template>\r\n  <BaseLayout wrapperClass=\"resetPassword\">\r\n    <Breadcrumbs />\r\n    <div class=\"container\">\r\n      <BRow class=\"forgot-password flex-column\">\r\n        <BCol md=\"10\" lg=\"7\" class=\"mobile-form-email\">\r\n          <h1>{{ $t(\"password_reset\") }}</h1>\r\n          <p>\r\n            {{ $t(\"reset_password_text\") }}\r\n          </p>\r\n          <BFormGroup class=\"account-inputs mb-6\" :label=\"$t('form_email') + '*'\" label-for=\"email\">\r\n            <BFormInput\r\n              id=\"email\"\r\n              v-model=\"email\"\r\n              type=\"text\"\r\n              :state=\"emailState\"\r\n              class=\"\"\r\n              aria-describedby=\"email-feedback\"\r\n              :readonly=\"readOnlyEmail\"\r\n            ></BFormInput>\r\n            <BFormInvalidFeedback id=\"email-feedback\">\r\n              {{ emailError }}\r\n            </BFormInvalidFeedback>\r\n          </BFormGroup>\r\n          <div>\r\n            <input\r\n              id=\"token\"\r\n              v-model=\"token\"\r\n              type=\"hidden\"\r\n              :state=\"tokenState\"\r\n              aria-describedby=\"token-feedback\"\r\n            />\r\n            <BFormInvalidFeedback id=\"token-feedback\">\r\n              {{ tokenError }}\r\n            </BFormInvalidFeedback>\r\n          </div>\r\n          <BFormGroup\r\n            class=\"account-inputs mb-6\"\r\n            id=\"password-group\"\r\n            :label=\"$t('form_password') + '*'\"\r\n            label-for=\"password\"\r\n          >\r\n            <BFormInput\r\n              id=\"password\"\r\n              v-model=\"password\"\r\n              type=\"password\"\r\n              :state=\"passwordState\"\r\n              aria-describedby=\"password-feedback\"\r\n            ></BFormInput>\r\n            <BFormInvalidFeedback id=\"password-feedback\">\r\n              {{ passwordError }}\r\n            </BFormInvalidFeedback>\r\n          </BFormGroup>\r\n          <BFormGroup\r\n            class=\"account-inputs mb-6\"\r\n            id=\"password_confirm-group\"\r\n            :label=\"$t('form_password_confirmation') + '*'\"\r\n            label-for=\"password_confirm\"\r\n          >\r\n            <BFormInput\r\n              id=\"password_confirm\"\r\n              v-model=\"password_confirm\"\r\n              type=\"password\"\r\n              :state=\"password_confirmState\"\r\n              aria-describedby=\"password_confirm-feedback\"\r\n            ></BFormInput>\r\n            <BFormInvalidFeedback id=\"password_confirm-feedback\">\r\n              {{ password_confirmError }}\r\n            </BFormInvalidFeedback>\r\n          </BFormGroup>\r\n          <div>{{ description }}</div>\r\n          <div class=\"btn-wrap d-flex justify-content-md-between align-items-md-center\">\r\n            <router-link class=\"back\" to=\"/login\">{{ $t(\"go_back\") }}</router-link>\r\n            <div class=\"btn-holder\">\r\n              <BButton @click=\"formSubmit\" variant=\"info\" class=\"text-white form-submit-btn\">{{\r\n                $t(\"reset_my_password\")\r\n              }}</BButton>\r\n            </div>\r\n          </div>\r\n        </BCol>\r\n      </BRow>\r\n    </div>\r\n  </BaseLayout>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport BaseLayout from \"@/base/core/components/common/BaseLayout.vue\";\r\nimport Breadcrumbs from \"@/base/core/components/Breadcrumbs.vue\";\r\nimport { resetPassword } from \"@storefront/core/data-resolver/user\";\r\nimport { useI18n } from \"vue-i18n\";\r\nimport { useHead } from \"@unhead/vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst { t } = useI18n();\r\nconst store = useStore();\r\n\r\nconst email = ref(route.query.email || \"\");\r\nconst emailState = ref(null);\r\nconst emailError = ref(\"\");\r\nconst description = ref(\"\");\r\nconst password = ref(\"\");\r\nconst passwordState = ref(null);\r\nconst passwordError = ref(\"\");\r\nconst password_confirm = ref(\"\");\r\nconst password_confirmState = ref(null);\r\nconst password_confirmError = ref(\"\");\r\nconst token = ref(route.query.token || \"\");\r\nconst tokenState = ref(null);\r\nconst tokenError = ref(\"\");\r\nconst emailReg = new RegExp(\r\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,24}))$/\r\n);\r\n\r\nconst readOnlyEmail = computed(() => email.value.length > 0);\r\n\r\nconst validateEmail = () => {\r\n  if (email.value === \"\") {\r\n    emailState.value = false;\r\n    emailError.value = t(\"email_is_required_field\");\r\n    return false;\r\n  }\r\n  if (!emailReg.test(email.value)) {\r\n    emailState.value = false;\r\n    emailError.value = t(\"email_is_invalid_field\");\r\n    return false;\r\n  }\r\n  emailState.value = true;\r\n  return true;\r\n};\r\n\r\nconst validatePassword = () => {\r\n  if (password.value.length < 8) {\r\n    passwordState.value = false;\r\n    passwordError.value = t(\"password_needs\");\r\n    return false;\r\n  } else if (!/[a-z]/.test(password.value)) {\r\n    passwordState.value = false;\r\n    passwordError.value = t(\"password_needs\");\r\n    return false;\r\n  } else if (!/[!\"#$%&'()*+,-.:;<=>?@[\\]^_`{|}~]/.test(password.value)) {\r\n    passwordState.value = false;\r\n    passwordError.value = t(\"password_needs\");\r\n    return false;\r\n  } else if (!/[A-Z]/.test(password.value)) {\r\n    passwordState.value = false;\r\n    passwordError.value = t(\"password_needs\");\r\n    return false;\r\n  } else if (!/\\d/.test(password.value)) {\r\n    passwordState.value = false;\r\n    passwordError.value = t(\"password_needs\");\r\n    return false;\r\n  } else passwordState.value = true;\r\n  return true;\r\n};\r\n\r\nconst validateConfirmationPassword = () => {\r\n  if (password.value !== password_confirm.value) {\r\n    password_confirmState.value = false;\r\n    password_confirmError.value = t(\"password_confirm_not_equal\");\r\n    return false;\r\n  }\r\n  password_confirmState.value = true;\r\n  return true;\r\n};\r\n\r\nconst validateToken = () => {\r\n  if (token.value === \"\") {\r\n    tokenState.value = false;\r\n    tokenError.value = t(\"token_not_filled\");\r\n    return false;\r\n  }\r\n  tokenState.value = true;\r\n  return true;\r\n};\r\nconst formSubmit = async () => {\r\n  if (validateEmail() && validatePassword() && validateConfirmationPassword() && validateToken()) {\r\n    const retval = await resetPassword(email.value, token.value, password.value);\r\n    if (retval === true) {\r\n      description.value = t(\"password_resetted\");\r\n      router.push({ name: \"login\" });\r\n    } else {\r\n      description.value = t(\"password_not_resetted\");\r\n    }\r\n  }\r\n};\r\n\r\nuseHead({\r\n  title: () => t(\"password_reset\"),\r\n  meta: [\r\n    { name: \"title\", content: () => t(\"password_reset\") },\r\n    { name: \"keywords\", content: () => t(\"password_reset\") },\r\n    { name: \"description\", content: () => t(\"password_reset\") },\r\n  ],\r\n});\r\n\r\nonMounted(() => {\r\n  const bcrumb = { current: t(\"password_reset\"), routes: [] };\r\n  store.commit(\"breadcrumbs/set\", bcrumb);\r\n});\r\n</script>\r\n<style scoped>\r\n@import \"@/base/core/components/login/login.scss\";\r\n</style>\r\n"],"names":[],"mappings":"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}